/*
 * This file was generated by orbit-idl-2 - DO NOT EDIT!
 */

#ifndef Bonobo_H
#define Bonobo_H 1
#include <glib.h>
#define ORBIT_IDL_SERIAL 20
#include <orbit/orbit-types.h>

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */


/** typedefs **/
#include <bonobo-activation/Bonobo_Unknown.h>
#include <bonobo-activation/Bonobo_GenericFactory.h>
#undef ex_Bonobo_NotSupported
#define ex_Bonobo_NotSupported "IDL:Bonobo/NotSupported:1.0"
#if !defined(_Bonobo_NotSupported_defined)
#define _Bonobo_NotSupported_defined 1
typedef struct Bonobo_NotSupported_type Bonobo_NotSupported;
struct Bonobo_NotSupported_type {
int dummy;
};

#if !defined(TC_IMPL_TC_Bonobo_NotSupported_0)
#define TC_IMPL_TC_Bonobo_NotSupported_0 'B'
#define TC_IMPL_TC_Bonobo_NotSupported_1 'o'
#define TC_IMPL_TC_Bonobo_NotSupported_2 'n'
#define TC_IMPL_TC_Bonobo_NotSupported_3 'o'
#define TC_IMPL_TC_Bonobo_NotSupported_4 'b'
#define TC_IMPL_TC_Bonobo_NotSupported_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_NotSupported_struct;
#define TC_Bonobo_NotSupported ((CORBA_TypeCode)&TC_Bonobo_NotSupported_struct)
#endif
#define Bonobo_NotSupported__alloc() ((Bonobo_NotSupported *)ORBit_small_alloc (TC_Bonobo_NotSupported))
#define Bonobo_NotSupported__freekids(m,d) ORBit_small_freekids (TC_Bonobo_NotSupported,(m),(d))
#endif
#undef ex_Bonobo_NotImplemented
#define ex_Bonobo_NotImplemented "IDL:Bonobo/NotImplemented:1.0"
#if !defined(_Bonobo_NotImplemented_defined)
#define _Bonobo_NotImplemented_defined 1
typedef struct Bonobo_NotImplemented_type Bonobo_NotImplemented;
struct Bonobo_NotImplemented_type {
int dummy;
};

#if !defined(TC_IMPL_TC_Bonobo_NotImplemented_0)
#define TC_IMPL_TC_Bonobo_NotImplemented_0 'B'
#define TC_IMPL_TC_Bonobo_NotImplemented_1 'o'
#define TC_IMPL_TC_Bonobo_NotImplemented_2 'n'
#define TC_IMPL_TC_Bonobo_NotImplemented_3 'o'
#define TC_IMPL_TC_Bonobo_NotImplemented_4 'b'
#define TC_IMPL_TC_Bonobo_NotImplemented_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_NotImplemented_struct;
#define TC_Bonobo_NotImplemented ((CORBA_TypeCode)&TC_Bonobo_NotImplemented_struct)
#endif
#define Bonobo_NotImplemented__alloc() ((Bonobo_NotImplemented *)ORBit_small_alloc (TC_Bonobo_NotImplemented))
#define Bonobo_NotImplemented__freekids(m,d) ORBit_small_freekids (TC_Bonobo_NotImplemented,(m),(d))
#endif
#undef ex_Bonobo_IOError
#define ex_Bonobo_IOError "IDL:Bonobo/IOError:1.0"
#if !defined(_Bonobo_IOError_defined)
#define _Bonobo_IOError_defined 1
typedef struct Bonobo_IOError_type Bonobo_IOError;
struct Bonobo_IOError_type {
int dummy;
};

#if !defined(TC_IMPL_TC_Bonobo_IOError_0)
#define TC_IMPL_TC_Bonobo_IOError_0 'B'
#define TC_IMPL_TC_Bonobo_IOError_1 'o'
#define TC_IMPL_TC_Bonobo_IOError_2 'n'
#define TC_IMPL_TC_Bonobo_IOError_3 'o'
#define TC_IMPL_TC_Bonobo_IOError_4 'b'
#define TC_IMPL_TC_Bonobo_IOError_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_IOError_struct;
#define TC_Bonobo_IOError ((CORBA_TypeCode)&TC_Bonobo_IOError_struct)
#endif
#define Bonobo_IOError__alloc() ((Bonobo_IOError *)ORBit_small_alloc (TC_Bonobo_IOError))
#define Bonobo_IOError__freekids(m,d) ORBit_small_freekids (TC_Bonobo_IOError,(m),(d))
#endif
#undef ex_Bonobo_BadArg
#define ex_Bonobo_BadArg "IDL:Bonobo/BadArg:1.0"
#if !defined(_Bonobo_BadArg_defined)
#define _Bonobo_BadArg_defined 1
typedef struct Bonobo_BadArg_type Bonobo_BadArg;
struct Bonobo_BadArg_type {
int dummy;
};

#if !defined(TC_IMPL_TC_Bonobo_BadArg_0)
#define TC_IMPL_TC_Bonobo_BadArg_0 'B'
#define TC_IMPL_TC_Bonobo_BadArg_1 'o'
#define TC_IMPL_TC_Bonobo_BadArg_2 'n'
#define TC_IMPL_TC_Bonobo_BadArg_3 'o'
#define TC_IMPL_TC_Bonobo_BadArg_4 'b'
#define TC_IMPL_TC_Bonobo_BadArg_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_BadArg_struct;
#define TC_Bonobo_BadArg ((CORBA_TypeCode)&TC_Bonobo_BadArg_struct)
#endif
#define Bonobo_BadArg__alloc() ((Bonobo_BadArg *)ORBit_small_alloc (TC_Bonobo_BadArg))
#define Bonobo_BadArg__freekids(m,d) ORBit_small_freekids (TC_Bonobo_BadArg,(m),(d))
#endif
#if !defined(_Bonobo_ResolveFlag_defined)
#define _Bonobo_ResolveFlag_defined 1
typedef CORBA_long Bonobo_ResolveFlag;
#define Bonobo_ResolveFlag_marshal(x,y,z) CORBA_long_marshal((x),(y),(z))
#define Bonobo_ResolveFlag_demarshal(x,y,z,i) CORBA_long_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_Bonobo_ResolveFlag_0)
#define TC_IMPL_TC_Bonobo_ResolveFlag_0 'B'
#define TC_IMPL_TC_Bonobo_ResolveFlag_1 'o'
#define TC_IMPL_TC_Bonobo_ResolveFlag_2 'n'
#define TC_IMPL_TC_Bonobo_ResolveFlag_3 'o'
#define TC_IMPL_TC_Bonobo_ResolveFlag_4 'b'
#define TC_IMPL_TC_Bonobo_ResolveFlag_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_ResolveFlag_struct;
#define TC_Bonobo_ResolveFlag ((CORBA_TypeCode)&TC_Bonobo_ResolveFlag_struct)
#endif
#define Bonobo_ResolveFlag__alloc() ((Bonobo_ResolveFlag *)ORBit_small_alloc (TC_CORBA_long))
#define Bonobo_ResolveFlag__freekids(m,d) ORBit_small_freekids (TC_CORBA_long,(m),(d))
#endif
#ifndef Bonobo_MONIKER_ALLOW_USER_INTERACTION
#define Bonobo_MONIKER_ALLOW_USER_INTERACTION 1
#endif /* !Bonobo_MONIKER_ALLOW_USER_INTERACTION */

#if !defined(_Bonobo_ResolveOptions_defined)
#define _Bonobo_ResolveOptions_defined 1
typedef struct Bonobo_ResolveOptions_type Bonobo_ResolveOptions;
struct Bonobo_ResolveOptions_type {
Bonobo_ResolveFlag flags;
CORBA_long timeout;
};

#if !defined(TC_IMPL_TC_Bonobo_ResolveOptions_0)
#define TC_IMPL_TC_Bonobo_ResolveOptions_0 'B'
#define TC_IMPL_TC_Bonobo_ResolveOptions_1 'o'
#define TC_IMPL_TC_Bonobo_ResolveOptions_2 'n'
#define TC_IMPL_TC_Bonobo_ResolveOptions_3 'o'
#define TC_IMPL_TC_Bonobo_ResolveOptions_4 'b'
#define TC_IMPL_TC_Bonobo_ResolveOptions_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_ResolveOptions_struct;
#define TC_Bonobo_ResolveOptions ((CORBA_TypeCode)&TC_Bonobo_ResolveOptions_struct)
#endif
#define Bonobo_ResolveOptions__alloc() ((Bonobo_ResolveOptions *)ORBit_small_alloc (TC_Bonobo_ResolveOptions))
#define Bonobo_ResolveOptions__freekids(m,d) ORBit_small_freekids (TC_Bonobo_ResolveOptions,(m),(d))
#endif
#if !defined(ORBIT_DECL_Bonobo_Moniker) && !defined(_Bonobo_Moniker_defined)
#define ORBIT_DECL_Bonobo_Moniker 1
#define _Bonobo_Moniker_defined 1
#define Bonobo_Moniker__freekids CORBA_Object__freekids
typedef CORBA_Object Bonobo_Moniker;
extern CORBA_unsigned_long Bonobo_Moniker__classid;
#if !defined(TC_IMPL_TC_Bonobo_Moniker_0)
#define TC_IMPL_TC_Bonobo_Moniker_0 'B'
#define TC_IMPL_TC_Bonobo_Moniker_1 'o'
#define TC_IMPL_TC_Bonobo_Moniker_2 'n'
#define TC_IMPL_TC_Bonobo_Moniker_3 'o'
#define TC_IMPL_TC_Bonobo_Moniker_4 'b'
#define TC_IMPL_TC_Bonobo_Moniker_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Moniker_struct;
#define TC_Bonobo_Moniker ((CORBA_TypeCode)&TC_Bonobo_Moniker_struct)
#endif
#endif
#undef ex_Bonobo_Moniker_InterfaceNotFound
#define ex_Bonobo_Moniker_InterfaceNotFound "IDL:Bonobo/Moniker/InterfaceNotFound:1.0"
#if !defined(_Bonobo_Moniker_InterfaceNotFound_defined)
#define _Bonobo_Moniker_InterfaceNotFound_defined 1
typedef struct Bonobo_Moniker_InterfaceNotFound_type Bonobo_Moniker_InterfaceNotFound;
struct Bonobo_Moniker_InterfaceNotFound_type {
int dummy;
};

#if !defined(TC_IMPL_TC_Bonobo_Moniker_InterfaceNotFound_0)
#define TC_IMPL_TC_Bonobo_Moniker_InterfaceNotFound_0 'B'
#define TC_IMPL_TC_Bonobo_Moniker_InterfaceNotFound_1 'o'
#define TC_IMPL_TC_Bonobo_Moniker_InterfaceNotFound_2 'n'
#define TC_IMPL_TC_Bonobo_Moniker_InterfaceNotFound_3 'o'
#define TC_IMPL_TC_Bonobo_Moniker_InterfaceNotFound_4 'b'
#define TC_IMPL_TC_Bonobo_Moniker_InterfaceNotFound_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Moniker_InterfaceNotFound_struct;
#define TC_Bonobo_Moniker_InterfaceNotFound ((CORBA_TypeCode)&TC_Bonobo_Moniker_InterfaceNotFound_struct)
#endif
#define Bonobo_Moniker_InterfaceNotFound__alloc() ((Bonobo_Moniker_InterfaceNotFound *)ORBit_small_alloc (TC_Bonobo_Moniker_InterfaceNotFound))
#define Bonobo_Moniker_InterfaceNotFound__freekids(m,d) ORBit_small_freekids (TC_Bonobo_Moniker_InterfaceNotFound,(m),(d))
#endif
#undef ex_Bonobo_Moniker_TimeOut
#define ex_Bonobo_Moniker_TimeOut "IDL:Bonobo/Moniker/TimeOut:1.0"
#if !defined(_Bonobo_Moniker_TimeOut_defined)
#define _Bonobo_Moniker_TimeOut_defined 1
typedef struct Bonobo_Moniker_TimeOut_type Bonobo_Moniker_TimeOut;
struct Bonobo_Moniker_TimeOut_type {
int dummy;
};

#if !defined(TC_IMPL_TC_Bonobo_Moniker_TimeOut_0)
#define TC_IMPL_TC_Bonobo_Moniker_TimeOut_0 'B'
#define TC_IMPL_TC_Bonobo_Moniker_TimeOut_1 'o'
#define TC_IMPL_TC_Bonobo_Moniker_TimeOut_2 'n'
#define TC_IMPL_TC_Bonobo_Moniker_TimeOut_3 'o'
#define TC_IMPL_TC_Bonobo_Moniker_TimeOut_4 'b'
#define TC_IMPL_TC_Bonobo_Moniker_TimeOut_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Moniker_TimeOut_struct;
#define TC_Bonobo_Moniker_TimeOut ((CORBA_TypeCode)&TC_Bonobo_Moniker_TimeOut_struct)
#endif
#define Bonobo_Moniker_TimeOut__alloc() ((Bonobo_Moniker_TimeOut *)ORBit_small_alloc (TC_Bonobo_Moniker_TimeOut))
#define Bonobo_Moniker_TimeOut__freekids(m,d) ORBit_small_freekids (TC_Bonobo_Moniker_TimeOut,(m),(d))
#endif
#undef ex_Bonobo_Moniker_InvalidSyntax
#define ex_Bonobo_Moniker_InvalidSyntax "IDL:Bonobo/Moniker/InvalidSyntax:1.0"
#if !defined(_Bonobo_Moniker_InvalidSyntax_defined)
#define _Bonobo_Moniker_InvalidSyntax_defined 1
typedef struct Bonobo_Moniker_InvalidSyntax_type Bonobo_Moniker_InvalidSyntax;
struct Bonobo_Moniker_InvalidSyntax_type {
int dummy;
};

#if !defined(TC_IMPL_TC_Bonobo_Moniker_InvalidSyntax_0)
#define TC_IMPL_TC_Bonobo_Moniker_InvalidSyntax_0 'B'
#define TC_IMPL_TC_Bonobo_Moniker_InvalidSyntax_1 'o'
#define TC_IMPL_TC_Bonobo_Moniker_InvalidSyntax_2 'n'
#define TC_IMPL_TC_Bonobo_Moniker_InvalidSyntax_3 'o'
#define TC_IMPL_TC_Bonobo_Moniker_InvalidSyntax_4 'b'
#define TC_IMPL_TC_Bonobo_Moniker_InvalidSyntax_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Moniker_InvalidSyntax_struct;
#define TC_Bonobo_Moniker_InvalidSyntax ((CORBA_TypeCode)&TC_Bonobo_Moniker_InvalidSyntax_struct)
#endif
#define Bonobo_Moniker_InvalidSyntax__alloc() ((Bonobo_Moniker_InvalidSyntax *)ORBit_small_alloc (TC_Bonobo_Moniker_InvalidSyntax))
#define Bonobo_Moniker_InvalidSyntax__freekids(m,d) ORBit_small_freekids (TC_Bonobo_Moniker_InvalidSyntax,(m),(d))
#endif
#undef ex_Bonobo_Moniker_UnknownPrefix
#define ex_Bonobo_Moniker_UnknownPrefix "IDL:Bonobo/Moniker/UnknownPrefix:1.0"
#if !defined(_Bonobo_Moniker_UnknownPrefix_defined)
#define _Bonobo_Moniker_UnknownPrefix_defined 1
typedef struct Bonobo_Moniker_UnknownPrefix_type Bonobo_Moniker_UnknownPrefix;
struct Bonobo_Moniker_UnknownPrefix_type {
int dummy;
};

#if !defined(TC_IMPL_TC_Bonobo_Moniker_UnknownPrefix_0)
#define TC_IMPL_TC_Bonobo_Moniker_UnknownPrefix_0 'B'
#define TC_IMPL_TC_Bonobo_Moniker_UnknownPrefix_1 'o'
#define TC_IMPL_TC_Bonobo_Moniker_UnknownPrefix_2 'n'
#define TC_IMPL_TC_Bonobo_Moniker_UnknownPrefix_3 'o'
#define TC_IMPL_TC_Bonobo_Moniker_UnknownPrefix_4 'b'
#define TC_IMPL_TC_Bonobo_Moniker_UnknownPrefix_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Moniker_UnknownPrefix_struct;
#define TC_Bonobo_Moniker_UnknownPrefix ((CORBA_TypeCode)&TC_Bonobo_Moniker_UnknownPrefix_struct)
#endif
#define Bonobo_Moniker_UnknownPrefix__alloc() ((Bonobo_Moniker_UnknownPrefix *)ORBit_small_alloc (TC_Bonobo_Moniker_UnknownPrefix))
#define Bonobo_Moniker_UnknownPrefix__freekids(m,d) ORBit_small_freekids (TC_Bonobo_Moniker_UnknownPrefix,(m),(d))
#endif
#if !defined(ORBIT_DECL_Bonobo_MonikerExtender) && !defined(_Bonobo_MonikerExtender_defined)
#define ORBIT_DECL_Bonobo_MonikerExtender 1
#define _Bonobo_MonikerExtender_defined 1
#define Bonobo_MonikerExtender__freekids CORBA_Object__freekids
typedef CORBA_Object Bonobo_MonikerExtender;
extern CORBA_unsigned_long Bonobo_MonikerExtender__classid;
#if !defined(TC_IMPL_TC_Bonobo_MonikerExtender_0)
#define TC_IMPL_TC_Bonobo_MonikerExtender_0 'B'
#define TC_IMPL_TC_Bonobo_MonikerExtender_1 'o'
#define TC_IMPL_TC_Bonobo_MonikerExtender_2 'n'
#define TC_IMPL_TC_Bonobo_MonikerExtender_3 'o'
#define TC_IMPL_TC_Bonobo_MonikerExtender_4 'b'
#define TC_IMPL_TC_Bonobo_MonikerExtender_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_MonikerExtender_struct;
#define TC_Bonobo_MonikerExtender ((CORBA_TypeCode)&TC_Bonobo_MonikerExtender_struct)
#endif
#endif
#if !defined(_Bonobo_StorageInfoFields_defined)
#define _Bonobo_StorageInfoFields_defined 1
typedef CORBA_long Bonobo_StorageInfoFields;
#define Bonobo_StorageInfoFields_marshal(x,y,z) CORBA_long_marshal((x),(y),(z))
#define Bonobo_StorageInfoFields_demarshal(x,y,z,i) CORBA_long_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_Bonobo_StorageInfoFields_0)
#define TC_IMPL_TC_Bonobo_StorageInfoFields_0 'B'
#define TC_IMPL_TC_Bonobo_StorageInfoFields_1 'o'
#define TC_IMPL_TC_Bonobo_StorageInfoFields_2 'n'
#define TC_IMPL_TC_Bonobo_StorageInfoFields_3 'o'
#define TC_IMPL_TC_Bonobo_StorageInfoFields_4 'b'
#define TC_IMPL_TC_Bonobo_StorageInfoFields_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_StorageInfoFields_struct;
#define TC_Bonobo_StorageInfoFields ((CORBA_TypeCode)&TC_Bonobo_StorageInfoFields_struct)
#endif
#define Bonobo_StorageInfoFields__alloc() ((Bonobo_StorageInfoFields *)ORBit_small_alloc (TC_CORBA_long))
#define Bonobo_StorageInfoFields__freekids(m,d) ORBit_small_freekids (TC_CORBA_long,(m),(d))
#endif
#ifndef Bonobo_FIELD_CONTENT_TYPE
#define Bonobo_FIELD_CONTENT_TYPE 1
#endif /* !Bonobo_FIELD_CONTENT_TYPE */

#ifndef Bonobo_FIELD_SIZE
#define Bonobo_FIELD_SIZE 2
#endif /* !Bonobo_FIELD_SIZE */

#ifndef Bonobo_FIELD_TYPE
#define Bonobo_FIELD_TYPE 4
#endif /* !Bonobo_FIELD_TYPE */

#if !defined(_Bonobo_ContentType_defined)
#define _Bonobo_ContentType_defined 1
typedef CORBA_string Bonobo_ContentType;
#define Bonobo_ContentType_marshal(x,y,z) CORBA_string_marshal((x),(y),(z))
#define Bonobo_ContentType_demarshal(x,y,z,i) CORBA_string_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_Bonobo_ContentType_0)
#define TC_IMPL_TC_Bonobo_ContentType_0 'B'
#define TC_IMPL_TC_Bonobo_ContentType_1 'o'
#define TC_IMPL_TC_Bonobo_ContentType_2 'n'
#define TC_IMPL_TC_Bonobo_ContentType_3 'o'
#define TC_IMPL_TC_Bonobo_ContentType_4 'b'
#define TC_IMPL_TC_Bonobo_ContentType_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_ContentType_struct;
#define TC_Bonobo_ContentType ((CORBA_TypeCode)&TC_Bonobo_ContentType_struct)
#endif
#define Bonobo_ContentType__alloc() ((Bonobo_ContentType *)ORBit_small_alloc (TC_CORBA_string))
#define Bonobo_ContentType__freekids(m,d) ORBit_small_freekids (TC_CORBA_string,(m),(d))
#endif
#if !defined(_Bonobo_StorageType_defined)
#define _Bonobo_StorageType_defined 1
typedef enum {
  Bonobo_STORAGE_TYPE_REGULAR,
  Bonobo_STORAGE_TYPE_DIRECTORY
} Bonobo_StorageType;
#if !defined(TC_IMPL_TC_Bonobo_StorageType_0)
#define TC_IMPL_TC_Bonobo_StorageType_0 'B'
#define TC_IMPL_TC_Bonobo_StorageType_1 'o'
#define TC_IMPL_TC_Bonobo_StorageType_2 'n'
#define TC_IMPL_TC_Bonobo_StorageType_3 'o'
#define TC_IMPL_TC_Bonobo_StorageType_4 'b'
#define TC_IMPL_TC_Bonobo_StorageType_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_StorageType_struct;
#define TC_Bonobo_StorageType ((CORBA_TypeCode)&TC_Bonobo_StorageType_struct)
#endif
#endif
#if !defined(_Bonobo_StorageInfo_defined)
#define _Bonobo_StorageInfo_defined 1
typedef struct Bonobo_StorageInfo_type Bonobo_StorageInfo;
struct Bonobo_StorageInfo_type {
CORBA_string name;
Bonobo_StorageType type;
Bonobo_ContentType content_type;
CORBA_long size;
};

#if !defined(TC_IMPL_TC_Bonobo_StorageInfo_0)
#define TC_IMPL_TC_Bonobo_StorageInfo_0 'B'
#define TC_IMPL_TC_Bonobo_StorageInfo_1 'o'
#define TC_IMPL_TC_Bonobo_StorageInfo_2 'n'
#define TC_IMPL_TC_Bonobo_StorageInfo_3 'o'
#define TC_IMPL_TC_Bonobo_StorageInfo_4 'b'
#define TC_IMPL_TC_Bonobo_StorageInfo_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_StorageInfo_struct;
#define TC_Bonobo_StorageInfo ((CORBA_TypeCode)&TC_Bonobo_StorageInfo_struct)
#endif
#define Bonobo_StorageInfo__alloc() ((Bonobo_StorageInfo *)ORBit_small_alloc (TC_Bonobo_StorageInfo))
#define Bonobo_StorageInfo__freekids(m,d) ORBit_small_freekids (TC_Bonobo_StorageInfo,(m),(d))
#endif
#if !defined(ORBIT_DECL_Bonobo_Stream) && !defined(_Bonobo_Stream_defined)
#define ORBIT_DECL_Bonobo_Stream 1
#define _Bonobo_Stream_defined 1
#define Bonobo_Stream__freekids CORBA_Object__freekids
typedef CORBA_Object Bonobo_Stream;
extern CORBA_unsigned_long Bonobo_Stream__classid;
#if !defined(TC_IMPL_TC_Bonobo_Stream_0)
#define TC_IMPL_TC_Bonobo_Stream_0 'B'
#define TC_IMPL_TC_Bonobo_Stream_1 'o'
#define TC_IMPL_TC_Bonobo_Stream_2 'n'
#define TC_IMPL_TC_Bonobo_Stream_3 'o'
#define TC_IMPL_TC_Bonobo_Stream_4 'b'
#define TC_IMPL_TC_Bonobo_Stream_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Stream_struct;
#define TC_Bonobo_Stream ((CORBA_TypeCode)&TC_Bonobo_Stream_struct)
#endif
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_octet)
#define ORBIT_DECL_CORBA_sequence_CORBA_octet 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_0 'B'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_1 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_2 'n'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_3 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_4 'b'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_5 'o'
#if !defined(_CORBA_sequence_CORBA_octet_defined)
#define _CORBA_sequence_CORBA_octet_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; CORBA_octet* _buffer; CORBA_boolean _release; } CORBA_sequence_CORBA_octet;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_octet_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_0 'B'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_1 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_2 'n'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_3 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_4 'b'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_octet_struct;
#define TC_CORBA_sequence_CORBA_octet ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_octet_struct)
#endif
#define CORBA_sequence_CORBA_octet__alloc() ((CORBA_sequence_CORBA_octet *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_octet))
#define CORBA_sequence_CORBA_octet__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_octet,(m),(d))
#define CORBA_sequence_CORBA_octet_allocbuf(l) ((CORBA_octet*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_octet, (l)))
#define CORBA_sequence_CORBA_octet_allocbuf(l) ((CORBA_octet*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_octet, (l)))
#endif
#if !defined(_Bonobo_Stream_iobuf_defined)
#define _Bonobo_Stream_iobuf_defined 1
typedef CORBA_sequence_CORBA_octet Bonobo_Stream_iobuf;
#define Bonobo_Stream_iobuf_marshal(x,y,z) CORBA_sequence_CORBA_octet_marshal((x),(y),(z))
#define Bonobo_Stream_iobuf_demarshal(x,y,z,i) CORBA_sequence_CORBA_octet_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_Bonobo_Stream_iobuf_0)
#define TC_IMPL_TC_Bonobo_Stream_iobuf_0 'B'
#define TC_IMPL_TC_Bonobo_Stream_iobuf_1 'o'
#define TC_IMPL_TC_Bonobo_Stream_iobuf_2 'n'
#define TC_IMPL_TC_Bonobo_Stream_iobuf_3 'o'
#define TC_IMPL_TC_Bonobo_Stream_iobuf_4 'b'
#define TC_IMPL_TC_Bonobo_Stream_iobuf_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Stream_iobuf_struct;
#define TC_Bonobo_Stream_iobuf ((CORBA_TypeCode)&TC_Bonobo_Stream_iobuf_struct)
#endif
#define Bonobo_Stream_iobuf__alloc() ((Bonobo_Stream_iobuf *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_octet))
#define Bonobo_Stream_iobuf__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_octet,(m),(d))
#define Bonobo_Stream_iobuf_allocbuf(l) ((CORBA_octet*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_octet, (l)))
#endif
#undef ex_Bonobo_Stream_NoPermission
#define ex_Bonobo_Stream_NoPermission "IDL:Bonobo/Stream/NoPermission:1.0"
#if !defined(_Bonobo_Stream_NoPermission_defined)
#define _Bonobo_Stream_NoPermission_defined 1
typedef struct Bonobo_Stream_NoPermission_type Bonobo_Stream_NoPermission;
struct Bonobo_Stream_NoPermission_type {
int dummy;
};

#if !defined(TC_IMPL_TC_Bonobo_Stream_NoPermission_0)
#define TC_IMPL_TC_Bonobo_Stream_NoPermission_0 'B'
#define TC_IMPL_TC_Bonobo_Stream_NoPermission_1 'o'
#define TC_IMPL_TC_Bonobo_Stream_NoPermission_2 'n'
#define TC_IMPL_TC_Bonobo_Stream_NoPermission_3 'o'
#define TC_IMPL_TC_Bonobo_Stream_NoPermission_4 'b'
#define TC_IMPL_TC_Bonobo_Stream_NoPermission_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Stream_NoPermission_struct;
#define TC_Bonobo_Stream_NoPermission ((CORBA_TypeCode)&TC_Bonobo_Stream_NoPermission_struct)
#endif
#define Bonobo_Stream_NoPermission__alloc() ((Bonobo_Stream_NoPermission *)ORBit_small_alloc (TC_Bonobo_Stream_NoPermission))
#define Bonobo_Stream_NoPermission__freekids(m,d) ORBit_small_freekids (TC_Bonobo_Stream_NoPermission,(m),(d))
#endif
#undef ex_Bonobo_Stream_NotSupported
#define ex_Bonobo_Stream_NotSupported "IDL:Bonobo/Stream/NotSupported:1.0"
#if !defined(_Bonobo_Stream_NotSupported_defined)
#define _Bonobo_Stream_NotSupported_defined 1
typedef struct Bonobo_Stream_NotSupported_type Bonobo_Stream_NotSupported;
struct Bonobo_Stream_NotSupported_type {
int dummy;
};

#if !defined(TC_IMPL_TC_Bonobo_Stream_NotSupported_0)
#define TC_IMPL_TC_Bonobo_Stream_NotSupported_0 'B'
#define TC_IMPL_TC_Bonobo_Stream_NotSupported_1 'o'
#define TC_IMPL_TC_Bonobo_Stream_NotSupported_2 'n'
#define TC_IMPL_TC_Bonobo_Stream_NotSupported_3 'o'
#define TC_IMPL_TC_Bonobo_Stream_NotSupported_4 'b'
#define TC_IMPL_TC_Bonobo_Stream_NotSupported_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Stream_NotSupported_struct;
#define TC_Bonobo_Stream_NotSupported ((CORBA_TypeCode)&TC_Bonobo_Stream_NotSupported_struct)
#endif
#define Bonobo_Stream_NotSupported__alloc() ((Bonobo_Stream_NotSupported *)ORBit_small_alloc (TC_Bonobo_Stream_NotSupported))
#define Bonobo_Stream_NotSupported__freekids(m,d) ORBit_small_freekids (TC_Bonobo_Stream_NotSupported,(m),(d))
#endif
#undef ex_Bonobo_Stream_IOError
#define ex_Bonobo_Stream_IOError "IDL:Bonobo/Stream/IOError:1.0"
#if !defined(_Bonobo_Stream_IOError_defined)
#define _Bonobo_Stream_IOError_defined 1
typedef struct Bonobo_Stream_IOError_type Bonobo_Stream_IOError;
struct Bonobo_Stream_IOError_type {
int dummy;
};

#if !defined(TC_IMPL_TC_Bonobo_Stream_IOError_0)
#define TC_IMPL_TC_Bonobo_Stream_IOError_0 'B'
#define TC_IMPL_TC_Bonobo_Stream_IOError_1 'o'
#define TC_IMPL_TC_Bonobo_Stream_IOError_2 'n'
#define TC_IMPL_TC_Bonobo_Stream_IOError_3 'o'
#define TC_IMPL_TC_Bonobo_Stream_IOError_4 'b'
#define TC_IMPL_TC_Bonobo_Stream_IOError_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Stream_IOError_struct;
#define TC_Bonobo_Stream_IOError ((CORBA_TypeCode)&TC_Bonobo_Stream_IOError_struct)
#endif
#define Bonobo_Stream_IOError__alloc() ((Bonobo_Stream_IOError *)ORBit_small_alloc (TC_Bonobo_Stream_IOError))
#define Bonobo_Stream_IOError__freekids(m,d) ORBit_small_freekids (TC_Bonobo_Stream_IOError,(m),(d))
#endif
#if !defined(_Bonobo_Stream_SeekType_defined)
#define _Bonobo_Stream_SeekType_defined 1
typedef enum {
  Bonobo_Stream_SeekSet,
  Bonobo_Stream_SeekCur,
  Bonobo_Stream_SeekEnd
} Bonobo_Stream_SeekType;
#if !defined(TC_IMPL_TC_Bonobo_Stream_SeekType_0)
#define TC_IMPL_TC_Bonobo_Stream_SeekType_0 'B'
#define TC_IMPL_TC_Bonobo_Stream_SeekType_1 'o'
#define TC_IMPL_TC_Bonobo_Stream_SeekType_2 'n'
#define TC_IMPL_TC_Bonobo_Stream_SeekType_3 'o'
#define TC_IMPL_TC_Bonobo_Stream_SeekType_4 'b'
#define TC_IMPL_TC_Bonobo_Stream_SeekType_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Stream_SeekType_struct;
#define TC_Bonobo_Stream_SeekType ((CORBA_TypeCode)&TC_Bonobo_Stream_SeekType_struct)
#endif
#endif
#if !defined(ORBIT_DECL_Bonobo_Storage) && !defined(_Bonobo_Storage_defined)
#define ORBIT_DECL_Bonobo_Storage 1
#define _Bonobo_Storage_defined 1
#define Bonobo_Storage__freekids CORBA_Object__freekids
typedef CORBA_Object Bonobo_Storage;
extern CORBA_unsigned_long Bonobo_Storage__classid;
#if !defined(TC_IMPL_TC_Bonobo_Storage_0)
#define TC_IMPL_TC_Bonobo_Storage_0 'B'
#define TC_IMPL_TC_Bonobo_Storage_1 'o'
#define TC_IMPL_TC_Bonobo_Storage_2 'n'
#define TC_IMPL_TC_Bonobo_Storage_3 'o'
#define TC_IMPL_TC_Bonobo_Storage_4 'b'
#define TC_IMPL_TC_Bonobo_Storage_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Storage_struct;
#define TC_Bonobo_Storage ((CORBA_TypeCode)&TC_Bonobo_Storage_struct)
#endif
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_Bonobo_StorageInfo)
#define ORBIT_DECL_CORBA_sequence_Bonobo_StorageInfo 1
#define ORBIT_IMPL_CORBA_sequence_Bonobo_StorageInfo_0 'B'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_StorageInfo_1 'o'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_StorageInfo_2 'n'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_StorageInfo_3 'o'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_StorageInfo_4 'b'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_StorageInfo_5 'o'
#if !defined(_CORBA_sequence_Bonobo_StorageInfo_defined)
#define _CORBA_sequence_Bonobo_StorageInfo_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; Bonobo_StorageInfo* _buffer; CORBA_boolean _release; } CORBA_sequence_Bonobo_StorageInfo;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_Bonobo_StorageInfo_0)
#define TC_IMPL_TC_CORBA_sequence_Bonobo_StorageInfo_0 'B'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_StorageInfo_1 'o'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_StorageInfo_2 'n'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_StorageInfo_3 'o'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_StorageInfo_4 'b'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_StorageInfo_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_CORBA_sequence_Bonobo_StorageInfo_struct;
#define TC_CORBA_sequence_Bonobo_StorageInfo ((CORBA_TypeCode)&TC_CORBA_sequence_Bonobo_StorageInfo_struct)
#endif
#define CORBA_sequence_Bonobo_StorageInfo__alloc() ((CORBA_sequence_Bonobo_StorageInfo *)ORBit_small_alloc (TC_CORBA_sequence_Bonobo_StorageInfo))
#define CORBA_sequence_Bonobo_StorageInfo__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_Bonobo_StorageInfo,(m),(d))
#define CORBA_sequence_Bonobo_StorageInfo_allocbuf(l) ((Bonobo_StorageInfo*)ORBit_small_allocbuf (TC_CORBA_sequence_Bonobo_StorageInfo, (l)))
#define CORBA_sequence_Bonobo_StorageInfo_allocbuf(l) ((Bonobo_StorageInfo*)ORBit_small_allocbuf (TC_CORBA_sequence_Bonobo_StorageInfo, (l)))
#endif
#if !defined(_Bonobo_Storage_DirectoryList_defined)
#define _Bonobo_Storage_DirectoryList_defined 1
typedef CORBA_sequence_Bonobo_StorageInfo Bonobo_Storage_DirectoryList;
#define Bonobo_Storage_DirectoryList_marshal(x,y,z) CORBA_sequence_Bonobo_StorageInfo_marshal((x),(y),(z))
#define Bonobo_Storage_DirectoryList_demarshal(x,y,z,i) CORBA_sequence_Bonobo_StorageInfo_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_Bonobo_Storage_DirectoryList_0)
#define TC_IMPL_TC_Bonobo_Storage_DirectoryList_0 'B'
#define TC_IMPL_TC_Bonobo_Storage_DirectoryList_1 'o'
#define TC_IMPL_TC_Bonobo_Storage_DirectoryList_2 'n'
#define TC_IMPL_TC_Bonobo_Storage_DirectoryList_3 'o'
#define TC_IMPL_TC_Bonobo_Storage_DirectoryList_4 'b'
#define TC_IMPL_TC_Bonobo_Storage_DirectoryList_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Storage_DirectoryList_struct;
#define TC_Bonobo_Storage_DirectoryList ((CORBA_TypeCode)&TC_Bonobo_Storage_DirectoryList_struct)
#endif
#define Bonobo_Storage_DirectoryList__alloc() ((Bonobo_Storage_DirectoryList *)ORBit_small_alloc (TC_CORBA_sequence_Bonobo_StorageInfo))
#define Bonobo_Storage_DirectoryList__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_Bonobo_StorageInfo,(m),(d))
#define Bonobo_Storage_DirectoryList_allocbuf(l) ((Bonobo_StorageInfo*)ORBit_small_allocbuf (TC_CORBA_sequence_Bonobo_StorageInfo, (l)))
#endif
#if !defined(_Bonobo_Storage_OpenMode_defined)
#define _Bonobo_Storage_OpenMode_defined 1
typedef CORBA_long Bonobo_Storage_OpenMode;
#define Bonobo_Storage_OpenMode_marshal(x,y,z) CORBA_long_marshal((x),(y),(z))
#define Bonobo_Storage_OpenMode_demarshal(x,y,z,i) CORBA_long_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_Bonobo_Storage_OpenMode_0)
#define TC_IMPL_TC_Bonobo_Storage_OpenMode_0 'B'
#define TC_IMPL_TC_Bonobo_Storage_OpenMode_1 'o'
#define TC_IMPL_TC_Bonobo_Storage_OpenMode_2 'n'
#define TC_IMPL_TC_Bonobo_Storage_OpenMode_3 'o'
#define TC_IMPL_TC_Bonobo_Storage_OpenMode_4 'b'
#define TC_IMPL_TC_Bonobo_Storage_OpenMode_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Storage_OpenMode_struct;
#define TC_Bonobo_Storage_OpenMode ((CORBA_TypeCode)&TC_Bonobo_Storage_OpenMode_struct)
#endif
#define Bonobo_Storage_OpenMode__alloc() ((Bonobo_Storage_OpenMode *)ORBit_small_alloc (TC_CORBA_long))
#define Bonobo_Storage_OpenMode__freekids(m,d) ORBit_small_freekids (TC_CORBA_long,(m),(d))
#endif
#ifndef Bonobo_Storage_READ
#define Bonobo_Storage_READ 1
#endif /* !Bonobo_Storage_READ */

#ifndef Bonobo_Storage_WRITE
#define Bonobo_Storage_WRITE 2
#endif /* !Bonobo_Storage_WRITE */

#ifndef Bonobo_Storage_CREATE
#define Bonobo_Storage_CREATE 4
#endif /* !Bonobo_Storage_CREATE */

#ifndef Bonobo_Storage_FAILIFEXIST
#define Bonobo_Storage_FAILIFEXIST 8
#endif /* !Bonobo_Storage_FAILIFEXIST */

#ifndef Bonobo_Storage_COMPRESSED
#define Bonobo_Storage_COMPRESSED 16
#endif /* !Bonobo_Storage_COMPRESSED */

#ifndef Bonobo_Storage_TRANSACTED
#define Bonobo_Storage_TRANSACTED 32
#endif /* !Bonobo_Storage_TRANSACTED */

#undef ex_Bonobo_Storage_IOError
#define ex_Bonobo_Storage_IOError "IDL:Bonobo/Storage/IOError:1.0"
#if !defined(_Bonobo_Storage_IOError_defined)
#define _Bonobo_Storage_IOError_defined 1
typedef struct Bonobo_Storage_IOError_type Bonobo_Storage_IOError;
struct Bonobo_Storage_IOError_type {
int dummy;
};

#if !defined(TC_IMPL_TC_Bonobo_Storage_IOError_0)
#define TC_IMPL_TC_Bonobo_Storage_IOError_0 'B'
#define TC_IMPL_TC_Bonobo_Storage_IOError_1 'o'
#define TC_IMPL_TC_Bonobo_Storage_IOError_2 'n'
#define TC_IMPL_TC_Bonobo_Storage_IOError_3 'o'
#define TC_IMPL_TC_Bonobo_Storage_IOError_4 'b'
#define TC_IMPL_TC_Bonobo_Storage_IOError_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Storage_IOError_struct;
#define TC_Bonobo_Storage_IOError ((CORBA_TypeCode)&TC_Bonobo_Storage_IOError_struct)
#endif
#define Bonobo_Storage_IOError__alloc() ((Bonobo_Storage_IOError *)ORBit_small_alloc (TC_Bonobo_Storage_IOError))
#define Bonobo_Storage_IOError__freekids(m,d) ORBit_small_freekids (TC_Bonobo_Storage_IOError,(m),(d))
#endif
#undef ex_Bonobo_Storage_NameExists
#define ex_Bonobo_Storage_NameExists "IDL:Bonobo/Storage/NameExists:1.0"
#if !defined(_Bonobo_Storage_NameExists_defined)
#define _Bonobo_Storage_NameExists_defined 1
typedef struct Bonobo_Storage_NameExists_type Bonobo_Storage_NameExists;
struct Bonobo_Storage_NameExists_type {
int dummy;
};

#if !defined(TC_IMPL_TC_Bonobo_Storage_NameExists_0)
#define TC_IMPL_TC_Bonobo_Storage_NameExists_0 'B'
#define TC_IMPL_TC_Bonobo_Storage_NameExists_1 'o'
#define TC_IMPL_TC_Bonobo_Storage_NameExists_2 'n'
#define TC_IMPL_TC_Bonobo_Storage_NameExists_3 'o'
#define TC_IMPL_TC_Bonobo_Storage_NameExists_4 'b'
#define TC_IMPL_TC_Bonobo_Storage_NameExists_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Storage_NameExists_struct;
#define TC_Bonobo_Storage_NameExists ((CORBA_TypeCode)&TC_Bonobo_Storage_NameExists_struct)
#endif
#define Bonobo_Storage_NameExists__alloc() ((Bonobo_Storage_NameExists *)ORBit_small_alloc (TC_Bonobo_Storage_NameExists))
#define Bonobo_Storage_NameExists__freekids(m,d) ORBit_small_freekids (TC_Bonobo_Storage_NameExists,(m),(d))
#endif
#undef ex_Bonobo_Storage_NotFound
#define ex_Bonobo_Storage_NotFound "IDL:Bonobo/Storage/NotFound:1.0"
#if !defined(_Bonobo_Storage_NotFound_defined)
#define _Bonobo_Storage_NotFound_defined 1
typedef struct Bonobo_Storage_NotFound_type Bonobo_Storage_NotFound;
struct Bonobo_Storage_NotFound_type {
int dummy;
};

#if !defined(TC_IMPL_TC_Bonobo_Storage_NotFound_0)
#define TC_IMPL_TC_Bonobo_Storage_NotFound_0 'B'
#define TC_IMPL_TC_Bonobo_Storage_NotFound_1 'o'
#define TC_IMPL_TC_Bonobo_Storage_NotFound_2 'n'
#define TC_IMPL_TC_Bonobo_Storage_NotFound_3 'o'
#define TC_IMPL_TC_Bonobo_Storage_NotFound_4 'b'
#define TC_IMPL_TC_Bonobo_Storage_NotFound_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Storage_NotFound_struct;
#define TC_Bonobo_Storage_NotFound ((CORBA_TypeCode)&TC_Bonobo_Storage_NotFound_struct)
#endif
#define Bonobo_Storage_NotFound__alloc() ((Bonobo_Storage_NotFound *)ORBit_small_alloc (TC_Bonobo_Storage_NotFound))
#define Bonobo_Storage_NotFound__freekids(m,d) ORBit_small_freekids (TC_Bonobo_Storage_NotFound,(m),(d))
#endif
#undef ex_Bonobo_Storage_NoPermission
#define ex_Bonobo_Storage_NoPermission "IDL:Bonobo/Storage/NoPermission:1.0"
#if !defined(_Bonobo_Storage_NoPermission_defined)
#define _Bonobo_Storage_NoPermission_defined 1
typedef struct Bonobo_Storage_NoPermission_type Bonobo_Storage_NoPermission;
struct Bonobo_Storage_NoPermission_type {
int dummy;
};

#if !defined(TC_IMPL_TC_Bonobo_Storage_NoPermission_0)
#define TC_IMPL_TC_Bonobo_Storage_NoPermission_0 'B'
#define TC_IMPL_TC_Bonobo_Storage_NoPermission_1 'o'
#define TC_IMPL_TC_Bonobo_Storage_NoPermission_2 'n'
#define TC_IMPL_TC_Bonobo_Storage_NoPermission_3 'o'
#define TC_IMPL_TC_Bonobo_Storage_NoPermission_4 'b'
#define TC_IMPL_TC_Bonobo_Storage_NoPermission_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Storage_NoPermission_struct;
#define TC_Bonobo_Storage_NoPermission ((CORBA_TypeCode)&TC_Bonobo_Storage_NoPermission_struct)
#endif
#define Bonobo_Storage_NoPermission__alloc() ((Bonobo_Storage_NoPermission *)ORBit_small_alloc (TC_Bonobo_Storage_NoPermission))
#define Bonobo_Storage_NoPermission__freekids(m,d) ORBit_small_freekids (TC_Bonobo_Storage_NoPermission,(m),(d))
#endif
#undef ex_Bonobo_Storage_NotSupported
#define ex_Bonobo_Storage_NotSupported "IDL:Bonobo/Storage/NotSupported:1.0"
#if !defined(_Bonobo_Storage_NotSupported_defined)
#define _Bonobo_Storage_NotSupported_defined 1
typedef struct Bonobo_Storage_NotSupported_type Bonobo_Storage_NotSupported;
struct Bonobo_Storage_NotSupported_type {
int dummy;
};

#if !defined(TC_IMPL_TC_Bonobo_Storage_NotSupported_0)
#define TC_IMPL_TC_Bonobo_Storage_NotSupported_0 'B'
#define TC_IMPL_TC_Bonobo_Storage_NotSupported_1 'o'
#define TC_IMPL_TC_Bonobo_Storage_NotSupported_2 'n'
#define TC_IMPL_TC_Bonobo_Storage_NotSupported_3 'o'
#define TC_IMPL_TC_Bonobo_Storage_NotSupported_4 'b'
#define TC_IMPL_TC_Bonobo_Storage_NotSupported_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Storage_NotSupported_struct;
#define TC_Bonobo_Storage_NotSupported ((CORBA_TypeCode)&TC_Bonobo_Storage_NotSupported_struct)
#endif
#define Bonobo_Storage_NotSupported__alloc() ((Bonobo_Storage_NotSupported *)ORBit_small_alloc (TC_Bonobo_Storage_NotSupported))
#define Bonobo_Storage_NotSupported__freekids(m,d) ORBit_small_freekids (TC_Bonobo_Storage_NotSupported,(m),(d))
#endif
#undef ex_Bonobo_Storage_NotStream
#define ex_Bonobo_Storage_NotStream "IDL:Bonobo/Storage/NotStream:1.0"
#if !defined(_Bonobo_Storage_NotStream_defined)
#define _Bonobo_Storage_NotStream_defined 1
typedef struct Bonobo_Storage_NotStream_type Bonobo_Storage_NotStream;
struct Bonobo_Storage_NotStream_type {
int dummy;
};

#if !defined(TC_IMPL_TC_Bonobo_Storage_NotStream_0)
#define TC_IMPL_TC_Bonobo_Storage_NotStream_0 'B'
#define TC_IMPL_TC_Bonobo_Storage_NotStream_1 'o'
#define TC_IMPL_TC_Bonobo_Storage_NotStream_2 'n'
#define TC_IMPL_TC_Bonobo_Storage_NotStream_3 'o'
#define TC_IMPL_TC_Bonobo_Storage_NotStream_4 'b'
#define TC_IMPL_TC_Bonobo_Storage_NotStream_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Storage_NotStream_struct;
#define TC_Bonobo_Storage_NotStream ((CORBA_TypeCode)&TC_Bonobo_Storage_NotStream_struct)
#endif
#define Bonobo_Storage_NotStream__alloc() ((Bonobo_Storage_NotStream *)ORBit_small_alloc (TC_Bonobo_Storage_NotStream))
#define Bonobo_Storage_NotStream__freekids(m,d) ORBit_small_freekids (TC_Bonobo_Storage_NotStream,(m),(d))
#endif
#undef ex_Bonobo_Storage_NotStorage
#define ex_Bonobo_Storage_NotStorage "IDL:Bonobo/Storage/NotStorage:1.0"
#if !defined(_Bonobo_Storage_NotStorage_defined)
#define _Bonobo_Storage_NotStorage_defined 1
typedef struct Bonobo_Storage_NotStorage_type Bonobo_Storage_NotStorage;
struct Bonobo_Storage_NotStorage_type {
int dummy;
};

#if !defined(TC_IMPL_TC_Bonobo_Storage_NotStorage_0)
#define TC_IMPL_TC_Bonobo_Storage_NotStorage_0 'B'
#define TC_IMPL_TC_Bonobo_Storage_NotStorage_1 'o'
#define TC_IMPL_TC_Bonobo_Storage_NotStorage_2 'n'
#define TC_IMPL_TC_Bonobo_Storage_NotStorage_3 'o'
#define TC_IMPL_TC_Bonobo_Storage_NotStorage_4 'b'
#define TC_IMPL_TC_Bonobo_Storage_NotStorage_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Storage_NotStorage_struct;
#define TC_Bonobo_Storage_NotStorage ((CORBA_TypeCode)&TC_Bonobo_Storage_NotStorage_struct)
#endif
#define Bonobo_Storage_NotStorage__alloc() ((Bonobo_Storage_NotStorage *)ORBit_small_alloc (TC_Bonobo_Storage_NotStorage))
#define Bonobo_Storage_NotStorage__freekids(m,d) ORBit_small_freekids (TC_Bonobo_Storage_NotStorage,(m),(d))
#endif
#undef ex_Bonobo_Storage_NotEmpty
#define ex_Bonobo_Storage_NotEmpty "IDL:Bonobo/Storage/NotEmpty:1.0"
#if !defined(_Bonobo_Storage_NotEmpty_defined)
#define _Bonobo_Storage_NotEmpty_defined 1
typedef struct Bonobo_Storage_NotEmpty_type Bonobo_Storage_NotEmpty;
struct Bonobo_Storage_NotEmpty_type {
int dummy;
};

#if !defined(TC_IMPL_TC_Bonobo_Storage_NotEmpty_0)
#define TC_IMPL_TC_Bonobo_Storage_NotEmpty_0 'B'
#define TC_IMPL_TC_Bonobo_Storage_NotEmpty_1 'o'
#define TC_IMPL_TC_Bonobo_Storage_NotEmpty_2 'n'
#define TC_IMPL_TC_Bonobo_Storage_NotEmpty_3 'o'
#define TC_IMPL_TC_Bonobo_Storage_NotEmpty_4 'b'
#define TC_IMPL_TC_Bonobo_Storage_NotEmpty_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Storage_NotEmpty_struct;
#define TC_Bonobo_Storage_NotEmpty ((CORBA_TypeCode)&TC_Bonobo_Storage_NotEmpty_struct)
#endif
#define Bonobo_Storage_NotEmpty__alloc() ((Bonobo_Storage_NotEmpty *)ORBit_small_alloc (TC_Bonobo_Storage_NotEmpty))
#define Bonobo_Storage_NotEmpty__freekids(m,d) ORBit_small_freekids (TC_Bonobo_Storage_NotEmpty,(m),(d))
#endif
#if !defined(ORBIT_DECL_Bonobo_MonikerContext) && !defined(_Bonobo_MonikerContext_defined)
#define ORBIT_DECL_Bonobo_MonikerContext 1
#define _Bonobo_MonikerContext_defined 1
#define Bonobo_MonikerContext__freekids CORBA_Object__freekids
typedef CORBA_Object Bonobo_MonikerContext;
extern CORBA_unsigned_long Bonobo_MonikerContext__classid;
#if !defined(TC_IMPL_TC_Bonobo_MonikerContext_0)
#define TC_IMPL_TC_Bonobo_MonikerContext_0 'B'
#define TC_IMPL_TC_Bonobo_MonikerContext_1 'o'
#define TC_IMPL_TC_Bonobo_MonikerContext_2 'n'
#define TC_IMPL_TC_Bonobo_MonikerContext_3 'o'
#define TC_IMPL_TC_Bonobo_MonikerContext_4 'b'
#define TC_IMPL_TC_Bonobo_MonikerContext_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_MonikerContext_struct;
#define TC_Bonobo_MonikerContext ((CORBA_TypeCode)&TC_Bonobo_MonikerContext_struct)
#endif
#endif
#if !defined(ORBIT_DECL_Bonobo_RunningContext) && !defined(_Bonobo_RunningContext_defined)
#define ORBIT_DECL_Bonobo_RunningContext 1
#define _Bonobo_RunningContext_defined 1
#define Bonobo_RunningContext__freekids CORBA_Object__freekids
typedef CORBA_Object Bonobo_RunningContext;
extern CORBA_unsigned_long Bonobo_RunningContext__classid;
#if !defined(TC_IMPL_TC_Bonobo_RunningContext_0)
#define TC_IMPL_TC_Bonobo_RunningContext_0 'B'
#define TC_IMPL_TC_Bonobo_RunningContext_1 'o'
#define TC_IMPL_TC_Bonobo_RunningContext_2 'n'
#define TC_IMPL_TC_Bonobo_RunningContext_3 'o'
#define TC_IMPL_TC_Bonobo_RunningContext_4 'b'
#define TC_IMPL_TC_Bonobo_RunningContext_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_RunningContext_struct;
#define TC_Bonobo_RunningContext ((CORBA_TypeCode)&TC_Bonobo_RunningContext_struct)
#endif
#endif
#if !defined(ORBIT_DECL_Bonobo_Persist) && !defined(_Bonobo_Persist_defined)
#define ORBIT_DECL_Bonobo_Persist 1
#define _Bonobo_Persist_defined 1
#define Bonobo_Persist__freekids CORBA_Object__freekids
typedef CORBA_Object Bonobo_Persist;
extern CORBA_unsigned_long Bonobo_Persist__classid;
#if !defined(TC_IMPL_TC_Bonobo_Persist_0)
#define TC_IMPL_TC_Bonobo_Persist_0 'B'
#define TC_IMPL_TC_Bonobo_Persist_1 'o'
#define TC_IMPL_TC_Bonobo_Persist_2 'n'
#define TC_IMPL_TC_Bonobo_Persist_3 'o'
#define TC_IMPL_TC_Bonobo_Persist_4 'b'
#define TC_IMPL_TC_Bonobo_Persist_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Persist_struct;
#define TC_Bonobo_Persist ((CORBA_TypeCode)&TC_Bonobo_Persist_struct)
#endif
#endif
#if !defined(_Bonobo_Persist_Status_defined)
#define _Bonobo_Persist_Status_defined 1
typedef enum {
  Bonobo_Persist_SAVE_OK,
  Bonobo_Persist_SAVE_CANCEL,
  Bonobo_Persist_SAVE_FAILED
} Bonobo_Persist_Status;
#if !defined(TC_IMPL_TC_Bonobo_Persist_Status_0)
#define TC_IMPL_TC_Bonobo_Persist_Status_0 'B'
#define TC_IMPL_TC_Bonobo_Persist_Status_1 'o'
#define TC_IMPL_TC_Bonobo_Persist_Status_2 'n'
#define TC_IMPL_TC_Bonobo_Persist_Status_3 'o'
#define TC_IMPL_TC_Bonobo_Persist_Status_4 'b'
#define TC_IMPL_TC_Bonobo_Persist_Status_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Persist_Status_struct;
#define TC_Bonobo_Persist_Status ((CORBA_TypeCode)&TC_Bonobo_Persist_Status_struct)
#endif
#endif
#undef ex_Bonobo_Persist_WrongDataType
#define ex_Bonobo_Persist_WrongDataType "IDL:Bonobo/Persist/WrongDataType:1.0"
#if !defined(_Bonobo_Persist_WrongDataType_defined)
#define _Bonobo_Persist_WrongDataType_defined 1
typedef struct Bonobo_Persist_WrongDataType_type Bonobo_Persist_WrongDataType;
struct Bonobo_Persist_WrongDataType_type {
int dummy;
};

#if !defined(TC_IMPL_TC_Bonobo_Persist_WrongDataType_0)
#define TC_IMPL_TC_Bonobo_Persist_WrongDataType_0 'B'
#define TC_IMPL_TC_Bonobo_Persist_WrongDataType_1 'o'
#define TC_IMPL_TC_Bonobo_Persist_WrongDataType_2 'n'
#define TC_IMPL_TC_Bonobo_Persist_WrongDataType_3 'o'
#define TC_IMPL_TC_Bonobo_Persist_WrongDataType_4 'b'
#define TC_IMPL_TC_Bonobo_Persist_WrongDataType_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Persist_WrongDataType_struct;
#define TC_Bonobo_Persist_WrongDataType ((CORBA_TypeCode)&TC_Bonobo_Persist_WrongDataType_struct)
#endif
#define Bonobo_Persist_WrongDataType__alloc() ((Bonobo_Persist_WrongDataType *)ORBit_small_alloc (TC_Bonobo_Persist_WrongDataType))
#define Bonobo_Persist_WrongDataType__freekids(m,d) ORBit_small_freekids (TC_Bonobo_Persist_WrongDataType,(m),(d))
#endif
#undef ex_Bonobo_Persist_FileNotFound
#define ex_Bonobo_Persist_FileNotFound "IDL:Bonobo/Persist/FileNotFound:1.0"
#if !defined(_Bonobo_Persist_FileNotFound_defined)
#define _Bonobo_Persist_FileNotFound_defined 1
typedef struct Bonobo_Persist_FileNotFound_type Bonobo_Persist_FileNotFound;
struct Bonobo_Persist_FileNotFound_type {
int dummy;
};

#if !defined(TC_IMPL_TC_Bonobo_Persist_FileNotFound_0)
#define TC_IMPL_TC_Bonobo_Persist_FileNotFound_0 'B'
#define TC_IMPL_TC_Bonobo_Persist_FileNotFound_1 'o'
#define TC_IMPL_TC_Bonobo_Persist_FileNotFound_2 'n'
#define TC_IMPL_TC_Bonobo_Persist_FileNotFound_3 'o'
#define TC_IMPL_TC_Bonobo_Persist_FileNotFound_4 'b'
#define TC_IMPL_TC_Bonobo_Persist_FileNotFound_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Persist_FileNotFound_struct;
#define TC_Bonobo_Persist_FileNotFound ((CORBA_TypeCode)&TC_Bonobo_Persist_FileNotFound_struct)
#endif
#define Bonobo_Persist_FileNotFound__alloc() ((Bonobo_Persist_FileNotFound *)ORBit_small_alloc (TC_Bonobo_Persist_FileNotFound))
#define Bonobo_Persist_FileNotFound__freekids(m,d) ORBit_small_freekids (TC_Bonobo_Persist_FileNotFound,(m),(d))
#endif
#if !defined(_Bonobo_Persist_ContentType_defined)
#define _Bonobo_Persist_ContentType_defined 1
typedef CORBA_string Bonobo_Persist_ContentType;
#define Bonobo_Persist_ContentType_marshal(x,y,z) CORBA_string_marshal((x),(y),(z))
#define Bonobo_Persist_ContentType_demarshal(x,y,z,i) CORBA_string_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_Bonobo_Persist_ContentType_0)
#define TC_IMPL_TC_Bonobo_Persist_ContentType_0 'B'
#define TC_IMPL_TC_Bonobo_Persist_ContentType_1 'o'
#define TC_IMPL_TC_Bonobo_Persist_ContentType_2 'n'
#define TC_IMPL_TC_Bonobo_Persist_ContentType_3 'o'
#define TC_IMPL_TC_Bonobo_Persist_ContentType_4 'b'
#define TC_IMPL_TC_Bonobo_Persist_ContentType_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Persist_ContentType_struct;
#define TC_Bonobo_Persist_ContentType ((CORBA_TypeCode)&TC_Bonobo_Persist_ContentType_struct)
#endif
#define Bonobo_Persist_ContentType__alloc() ((Bonobo_Persist_ContentType *)ORBit_small_alloc (TC_CORBA_string))
#define Bonobo_Persist_ContentType__freekids(m,d) ORBit_small_freekids (TC_CORBA_string,(m),(d))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_string)
#define ORBIT_DECL_CORBA_sequence_CORBA_string 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_0 'B'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_1 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_2 'n'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_3 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_4 'b'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_5 'o'
#if !defined(_CORBA_sequence_CORBA_string_defined)
#define _CORBA_sequence_CORBA_string_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; CORBA_string* _buffer; CORBA_boolean _release; } CORBA_sequence_CORBA_string;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_string_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_0 'B'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_1 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_2 'n'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_3 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_4 'b'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_string_struct;
#define TC_CORBA_sequence_CORBA_string ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_string_struct)
#endif
#define CORBA_sequence_CORBA_string__alloc() ((CORBA_sequence_CORBA_string *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_string))
#define CORBA_sequence_CORBA_string__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_string,(m),(d))
#define CORBA_sequence_CORBA_string_allocbuf(l) ((CORBA_string*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_string, (l)))
#define CORBA_sequence_CORBA_string_allocbuf(l) ((CORBA_string*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_string, (l)))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_Bonobo_Persist_ContentType)
#define ORBIT_DECL_CORBA_sequence_Bonobo_Persist_ContentType 1
#define ORBIT_IMPL_CORBA_sequence_Bonobo_Persist_ContentType_0 'B'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_Persist_ContentType_1 'o'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_Persist_ContentType_2 'n'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_Persist_ContentType_3 'o'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_Persist_ContentType_4 'b'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_Persist_ContentType_5 'o'
#if !defined(_CORBA_sequence_Bonobo_Persist_ContentType_defined)
#define _CORBA_sequence_Bonobo_Persist_ContentType_defined 1
typedef CORBA_sequence_CORBA_string CORBA_sequence_Bonobo_Persist_ContentType;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_Bonobo_Persist_ContentType_0)
#define TC_IMPL_TC_CORBA_sequence_Bonobo_Persist_ContentType_0 'B'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_Persist_ContentType_1 'o'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_Persist_ContentType_2 'n'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_Persist_ContentType_3 'o'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_Persist_ContentType_4 'b'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_Persist_ContentType_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_CORBA_sequence_Bonobo_Persist_ContentType_struct;
#define TC_CORBA_sequence_Bonobo_Persist_ContentType ((CORBA_TypeCode)&TC_CORBA_sequence_Bonobo_Persist_ContentType_struct)
#endif
#define CORBA_sequence_Bonobo_Persist_ContentType__alloc CORBA_sequence_CORBA_string__alloc
#define CORBA_sequence_Bonobo_Persist_ContentType__freekids CORBA_sequence_CORBA_string__freekids
#define CORBA_sequence_Bonobo_Persist_ContentType_allocbuf CORBA_sequence_CORBA_string_allocbuf
#define CORBA_sequence_Bonobo_Persist_ContentType_marshal(x,y,z) CORBA_sequence_CORBA_string_marshal((x),(y),(z))
#define CORBA_sequence_Bonobo_Persist_ContentType_demarshal(x,y,z,i) CORBA_sequence_CORBA_string_demarshal((x),(y),(z),(i))
#endif
#if !defined(_Bonobo_Persist_ContentTypeList_defined)
#define _Bonobo_Persist_ContentTypeList_defined 1
typedef CORBA_sequence_Bonobo_Persist_ContentType Bonobo_Persist_ContentTypeList;
#define Bonobo_Persist_ContentTypeList_marshal(x,y,z) CORBA_sequence_Bonobo_Persist_ContentType_marshal((x),(y),(z))
#define Bonobo_Persist_ContentTypeList_demarshal(x,y,z,i) CORBA_sequence_Bonobo_Persist_ContentType_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_Bonobo_Persist_ContentTypeList_0)
#define TC_IMPL_TC_Bonobo_Persist_ContentTypeList_0 'B'
#define TC_IMPL_TC_Bonobo_Persist_ContentTypeList_1 'o'
#define TC_IMPL_TC_Bonobo_Persist_ContentTypeList_2 'n'
#define TC_IMPL_TC_Bonobo_Persist_ContentTypeList_3 'o'
#define TC_IMPL_TC_Bonobo_Persist_ContentTypeList_4 'b'
#define TC_IMPL_TC_Bonobo_Persist_ContentTypeList_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Persist_ContentTypeList_struct;
#define TC_Bonobo_Persist_ContentTypeList ((CORBA_TypeCode)&TC_Bonobo_Persist_ContentTypeList_struct)
#endif
#define Bonobo_Persist_ContentTypeList__alloc() ((Bonobo_Persist_ContentTypeList *)ORBit_small_alloc (TC_CORBA_sequence_Bonobo_Persist_ContentType))
#define Bonobo_Persist_ContentTypeList__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_Bonobo_Persist_ContentType,(m),(d))
#define Bonobo_Persist_ContentTypeList_allocbuf(l) ((Bonobo_Persist_ContentType*)ORBit_small_allocbuf (TC_CORBA_sequence_Bonobo_Persist_ContentType, (l)))
#endif
#if !defined(_Bonobo_Persist_IID_defined)
#define _Bonobo_Persist_IID_defined 1
typedef CORBA_string Bonobo_Persist_IID;
#define Bonobo_Persist_IID_marshal(x,y,z) CORBA_string_marshal((x),(y),(z))
#define Bonobo_Persist_IID_demarshal(x,y,z,i) CORBA_string_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_Bonobo_Persist_IID_0)
#define TC_IMPL_TC_Bonobo_Persist_IID_0 'B'
#define TC_IMPL_TC_Bonobo_Persist_IID_1 'o'
#define TC_IMPL_TC_Bonobo_Persist_IID_2 'n'
#define TC_IMPL_TC_Bonobo_Persist_IID_3 'o'
#define TC_IMPL_TC_Bonobo_Persist_IID_4 'b'
#define TC_IMPL_TC_Bonobo_Persist_IID_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Persist_IID_struct;
#define TC_Bonobo_Persist_IID ((CORBA_TypeCode)&TC_Bonobo_Persist_IID_struct)
#endif
#define Bonobo_Persist_IID__alloc() ((Bonobo_Persist_IID *)ORBit_small_alloc (TC_CORBA_string))
#define Bonobo_Persist_IID__freekids(m,d) ORBit_small_freekids (TC_CORBA_string,(m),(d))
#endif
#if !defined(ORBIT_DECL_Bonobo_PersistFile) && !defined(_Bonobo_PersistFile_defined)
#define ORBIT_DECL_Bonobo_PersistFile 1
#define _Bonobo_PersistFile_defined 1
#define Bonobo_PersistFile__freekids CORBA_Object__freekids
typedef CORBA_Object Bonobo_PersistFile;
extern CORBA_unsigned_long Bonobo_PersistFile__classid;
#if !defined(TC_IMPL_TC_Bonobo_PersistFile_0)
#define TC_IMPL_TC_Bonobo_PersistFile_0 'B'
#define TC_IMPL_TC_Bonobo_PersistFile_1 'o'
#define TC_IMPL_TC_Bonobo_PersistFile_2 'n'
#define TC_IMPL_TC_Bonobo_PersistFile_3 'o'
#define TC_IMPL_TC_Bonobo_PersistFile_4 'b'
#define TC_IMPL_TC_Bonobo_PersistFile_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_PersistFile_struct;
#define TC_Bonobo_PersistFile ((CORBA_TypeCode)&TC_Bonobo_PersistFile_struct)
#endif
#endif
#undef ex_Bonobo_PersistFile_NoCurrentName
#define ex_Bonobo_PersistFile_NoCurrentName "IDL:Bonobo/PersistFile/NoCurrentName:1.0"
#if !defined(_Bonobo_PersistFile_NoCurrentName_defined)
#define _Bonobo_PersistFile_NoCurrentName_defined 1
typedef struct Bonobo_PersistFile_NoCurrentName_type Bonobo_PersistFile_NoCurrentName;
struct Bonobo_PersistFile_NoCurrentName_type {
CORBA_string extension;
};

#if !defined(TC_IMPL_TC_Bonobo_PersistFile_NoCurrentName_0)
#define TC_IMPL_TC_Bonobo_PersistFile_NoCurrentName_0 'B'
#define TC_IMPL_TC_Bonobo_PersistFile_NoCurrentName_1 'o'
#define TC_IMPL_TC_Bonobo_PersistFile_NoCurrentName_2 'n'
#define TC_IMPL_TC_Bonobo_PersistFile_NoCurrentName_3 'o'
#define TC_IMPL_TC_Bonobo_PersistFile_NoCurrentName_4 'b'
#define TC_IMPL_TC_Bonobo_PersistFile_NoCurrentName_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_PersistFile_NoCurrentName_struct;
#define TC_Bonobo_PersistFile_NoCurrentName ((CORBA_TypeCode)&TC_Bonobo_PersistFile_NoCurrentName_struct)
#endif
#define Bonobo_PersistFile_NoCurrentName__alloc() ((Bonobo_PersistFile_NoCurrentName *)ORBit_small_alloc (TC_Bonobo_PersistFile_NoCurrentName))
#define Bonobo_PersistFile_NoCurrentName__freekids(m,d) ORBit_small_freekids (TC_Bonobo_PersistFile_NoCurrentName,(m),(d))
#endif
#if !defined(ORBIT_DECL_Bonobo_PersistStorage) && !defined(_Bonobo_PersistStorage_defined)
#define ORBIT_DECL_Bonobo_PersistStorage 1
#define _Bonobo_PersistStorage_defined 1
#define Bonobo_PersistStorage__freekids CORBA_Object__freekids
typedef CORBA_Object Bonobo_PersistStorage;
extern CORBA_unsigned_long Bonobo_PersistStorage__classid;
#if !defined(TC_IMPL_TC_Bonobo_PersistStorage_0)
#define TC_IMPL_TC_Bonobo_PersistStorage_0 'B'
#define TC_IMPL_TC_Bonobo_PersistStorage_1 'o'
#define TC_IMPL_TC_Bonobo_PersistStorage_2 'n'
#define TC_IMPL_TC_Bonobo_PersistStorage_3 'o'
#define TC_IMPL_TC_Bonobo_PersistStorage_4 'b'
#define TC_IMPL_TC_Bonobo_PersistStorage_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_PersistStorage_struct;
#define TC_Bonobo_PersistStorage ((CORBA_TypeCode)&TC_Bonobo_PersistStorage_struct)
#endif
#endif
#if !defined(ORBIT_DECL_Bonobo_PersistStream) && !defined(_Bonobo_PersistStream_defined)
#define ORBIT_DECL_Bonobo_PersistStream 1
#define _Bonobo_PersistStream_defined 1
#define Bonobo_PersistStream__freekids CORBA_Object__freekids
typedef CORBA_Object Bonobo_PersistStream;
extern CORBA_unsigned_long Bonobo_PersistStream__classid;
#if !defined(TC_IMPL_TC_Bonobo_PersistStream_0)
#define TC_IMPL_TC_Bonobo_PersistStream_0 'B'
#define TC_IMPL_TC_Bonobo_PersistStream_1 'o'
#define TC_IMPL_TC_Bonobo_PersistStream_2 'n'
#define TC_IMPL_TC_Bonobo_PersistStream_3 'o'
#define TC_IMPL_TC_Bonobo_PersistStream_4 'b'
#define TC_IMPL_TC_Bonobo_PersistStream_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_PersistStream_struct;
#define TC_Bonobo_PersistStream ((CORBA_TypeCode)&TC_Bonobo_PersistStream_struct)
#endif
#endif
#if !defined(ORBIT_DECL_Bonobo_Listener) && !defined(_Bonobo_Listener_defined)
#define ORBIT_DECL_Bonobo_Listener 1
#define _Bonobo_Listener_defined 1
#define Bonobo_Listener__freekids CORBA_Object__freekids
typedef CORBA_Object Bonobo_Listener;
extern CORBA_unsigned_long Bonobo_Listener__classid;
#if !defined(TC_IMPL_TC_Bonobo_Listener_0)
#define TC_IMPL_TC_Bonobo_Listener_0 'B'
#define TC_IMPL_TC_Bonobo_Listener_1 'o'
#define TC_IMPL_TC_Bonobo_Listener_2 'n'
#define TC_IMPL_TC_Bonobo_Listener_3 'o'
#define TC_IMPL_TC_Bonobo_Listener_4 'b'
#define TC_IMPL_TC_Bonobo_Listener_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Listener_struct;
#define TC_Bonobo_Listener ((CORBA_TypeCode)&TC_Bonobo_Listener_struct)
#endif
#endif
#if !defined(ORBIT_DECL_Bonobo_EventSource) && !defined(_Bonobo_EventSource_defined)
#define ORBIT_DECL_Bonobo_EventSource 1
#define _Bonobo_EventSource_defined 1
#define Bonobo_EventSource__freekids CORBA_Object__freekids
typedef CORBA_Object Bonobo_EventSource;
extern CORBA_unsigned_long Bonobo_EventSource__classid;
#if !defined(TC_IMPL_TC_Bonobo_EventSource_0)
#define TC_IMPL_TC_Bonobo_EventSource_0 'B'
#define TC_IMPL_TC_Bonobo_EventSource_1 'o'
#define TC_IMPL_TC_Bonobo_EventSource_2 'n'
#define TC_IMPL_TC_Bonobo_EventSource_3 'o'
#define TC_IMPL_TC_Bonobo_EventSource_4 'b'
#define TC_IMPL_TC_Bonobo_EventSource_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_EventSource_struct;
#define TC_Bonobo_EventSource ((CORBA_TypeCode)&TC_Bonobo_EventSource_struct)
#endif
#endif
#undef ex_Bonobo_EventSource_UnknownListener
#define ex_Bonobo_EventSource_UnknownListener "IDL:Bonobo/EventSource/UnknownListener:1.0"
#if !defined(_Bonobo_EventSource_UnknownListener_defined)
#define _Bonobo_EventSource_UnknownListener_defined 1
typedef struct Bonobo_EventSource_UnknownListener_type Bonobo_EventSource_UnknownListener;
struct Bonobo_EventSource_UnknownListener_type {
int dummy;
};

#if !defined(TC_IMPL_TC_Bonobo_EventSource_UnknownListener_0)
#define TC_IMPL_TC_Bonobo_EventSource_UnknownListener_0 'B'
#define TC_IMPL_TC_Bonobo_EventSource_UnknownListener_1 'o'
#define TC_IMPL_TC_Bonobo_EventSource_UnknownListener_2 'n'
#define TC_IMPL_TC_Bonobo_EventSource_UnknownListener_3 'o'
#define TC_IMPL_TC_Bonobo_EventSource_UnknownListener_4 'b'
#define TC_IMPL_TC_Bonobo_EventSource_UnknownListener_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_EventSource_UnknownListener_struct;
#define TC_Bonobo_EventSource_UnknownListener ((CORBA_TypeCode)&TC_Bonobo_EventSource_UnknownListener_struct)
#endif
#define Bonobo_EventSource_UnknownListener__alloc() ((Bonobo_EventSource_UnknownListener *)ORBit_small_alloc (TC_Bonobo_EventSource_UnknownListener))
#define Bonobo_EventSource_UnknownListener__freekids(m,d) ORBit_small_freekids (TC_Bonobo_EventSource_UnknownListener,(m),(d))
#endif
#if !defined(_Bonobo_Gdk_EventType_defined)
#define _Bonobo_Gdk_EventType_defined 1
typedef enum {
  Bonobo_Gdk_FOCUS,
  Bonobo_Gdk_KEY,
  Bonobo_Gdk_MOTION,
  Bonobo_Gdk_BUTTON,
  Bonobo_Gdk_CROSSING
} Bonobo_Gdk_EventType;
#if !defined(TC_IMPL_TC_Bonobo_Gdk_EventType_0)
#define TC_IMPL_TC_Bonobo_Gdk_EventType_0 'B'
#define TC_IMPL_TC_Bonobo_Gdk_EventType_1 'o'
#define TC_IMPL_TC_Bonobo_Gdk_EventType_2 'n'
#define TC_IMPL_TC_Bonobo_Gdk_EventType_3 'o'
#define TC_IMPL_TC_Bonobo_Gdk_EventType_4 'b'
#define TC_IMPL_TC_Bonobo_Gdk_EventType_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Gdk_EventType_struct;
#define TC_Bonobo_Gdk_EventType ((CORBA_TypeCode)&TC_Bonobo_Gdk_EventType_struct)
#endif
#endif
#if !defined(_Bonobo_Gdk_ButtonType_defined)
#define _Bonobo_Gdk_ButtonType_defined 1
typedef enum {
  Bonobo_Gdk_BUTTON_PRESS,
  Bonobo_Gdk_BUTTON_2_PRESS,
  Bonobo_Gdk_BUTTON_3_PRESS,
  Bonobo_Gdk_BUTTON_RELEASE
} Bonobo_Gdk_ButtonType;
#if !defined(TC_IMPL_TC_Bonobo_Gdk_ButtonType_0)
#define TC_IMPL_TC_Bonobo_Gdk_ButtonType_0 'B'
#define TC_IMPL_TC_Bonobo_Gdk_ButtonType_1 'o'
#define TC_IMPL_TC_Bonobo_Gdk_ButtonType_2 'n'
#define TC_IMPL_TC_Bonobo_Gdk_ButtonType_3 'o'
#define TC_IMPL_TC_Bonobo_Gdk_ButtonType_4 'b'
#define TC_IMPL_TC_Bonobo_Gdk_ButtonType_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Gdk_ButtonType_struct;
#define TC_Bonobo_Gdk_ButtonType ((CORBA_TypeCode)&TC_Bonobo_Gdk_ButtonType_struct)
#endif
#endif
#if !defined(_Bonobo_Gdk_KeyType_defined)
#define _Bonobo_Gdk_KeyType_defined 1
typedef enum {
  Bonobo_Gdk_KEY_PRESS,
  Bonobo_Gdk_KEY_RELEASE
} Bonobo_Gdk_KeyType;
#if !defined(TC_IMPL_TC_Bonobo_Gdk_KeyType_0)
#define TC_IMPL_TC_Bonobo_Gdk_KeyType_0 'B'
#define TC_IMPL_TC_Bonobo_Gdk_KeyType_1 'o'
#define TC_IMPL_TC_Bonobo_Gdk_KeyType_2 'n'
#define TC_IMPL_TC_Bonobo_Gdk_KeyType_3 'o'
#define TC_IMPL_TC_Bonobo_Gdk_KeyType_4 'b'
#define TC_IMPL_TC_Bonobo_Gdk_KeyType_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Gdk_KeyType_struct;
#define TC_Bonobo_Gdk_KeyType ((CORBA_TypeCode)&TC_Bonobo_Gdk_KeyType_struct)
#endif
#endif
#if !defined(_Bonobo_Gdk_CrossType_defined)
#define _Bonobo_Gdk_CrossType_defined 1
typedef enum {
  Bonobo_Gdk_ENTER,
  Bonobo_Gdk_LEAVE
} Bonobo_Gdk_CrossType;
#if !defined(TC_IMPL_TC_Bonobo_Gdk_CrossType_0)
#define TC_IMPL_TC_Bonobo_Gdk_CrossType_0 'B'
#define TC_IMPL_TC_Bonobo_Gdk_CrossType_1 'o'
#define TC_IMPL_TC_Bonobo_Gdk_CrossType_2 'n'
#define TC_IMPL_TC_Bonobo_Gdk_CrossType_3 'o'
#define TC_IMPL_TC_Bonobo_Gdk_CrossType_4 'b'
#define TC_IMPL_TC_Bonobo_Gdk_CrossType_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Gdk_CrossType_struct;
#define TC_Bonobo_Gdk_CrossType ((CORBA_TypeCode)&TC_Bonobo_Gdk_CrossType_struct)
#endif
#endif
#if !defined(_Bonobo_Gdk_CrossMode_defined)
#define _Bonobo_Gdk_CrossMode_defined 1
typedef enum {
  Bonobo_Gdk_NORMAL,
  Bonobo_Gdk_GRAB,
  Bonobo_Gdk_UNGRAB
} Bonobo_Gdk_CrossMode;
#if !defined(TC_IMPL_TC_Bonobo_Gdk_CrossMode_0)
#define TC_IMPL_TC_Bonobo_Gdk_CrossMode_0 'B'
#define TC_IMPL_TC_Bonobo_Gdk_CrossMode_1 'o'
#define TC_IMPL_TC_Bonobo_Gdk_CrossMode_2 'n'
#define TC_IMPL_TC_Bonobo_Gdk_CrossMode_3 'o'
#define TC_IMPL_TC_Bonobo_Gdk_CrossMode_4 'b'
#define TC_IMPL_TC_Bonobo_Gdk_CrossMode_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Gdk_CrossMode_struct;
#define TC_Bonobo_Gdk_CrossMode ((CORBA_TypeCode)&TC_Bonobo_Gdk_CrossMode_struct)
#endif
#endif
#if !defined(_Bonobo_Gdk_Time_defined)
#define _Bonobo_Gdk_Time_defined 1
typedef CORBA_long Bonobo_Gdk_Time;
#define Bonobo_Gdk_Time_marshal(x,y,z) CORBA_long_marshal((x),(y),(z))
#define Bonobo_Gdk_Time_demarshal(x,y,z,i) CORBA_long_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_Bonobo_Gdk_Time_0)
#define TC_IMPL_TC_Bonobo_Gdk_Time_0 'B'
#define TC_IMPL_TC_Bonobo_Gdk_Time_1 'o'
#define TC_IMPL_TC_Bonobo_Gdk_Time_2 'n'
#define TC_IMPL_TC_Bonobo_Gdk_Time_3 'o'
#define TC_IMPL_TC_Bonobo_Gdk_Time_4 'b'
#define TC_IMPL_TC_Bonobo_Gdk_Time_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Gdk_Time_struct;
#define TC_Bonobo_Gdk_Time ((CORBA_TypeCode)&TC_Bonobo_Gdk_Time_struct)
#endif
#define Bonobo_Gdk_Time__alloc() ((Bonobo_Gdk_Time *)ORBit_small_alloc (TC_CORBA_long))
#define Bonobo_Gdk_Time__freekids(m,d) ORBit_small_freekids (TC_CORBA_long,(m),(d))
#endif
#if !defined(_Bonobo_Gdk_MotionEvent_defined)
#define _Bonobo_Gdk_MotionEvent_defined 1
typedef struct Bonobo_Gdk_MotionEvent_type Bonobo_Gdk_MotionEvent;
struct Bonobo_Gdk_MotionEvent_type {
Bonobo_Gdk_Time time;
CORBA_double x;
CORBA_double y;
CORBA_double x_root;
CORBA_double y_root;
CORBA_double pressure;
CORBA_double xtilt;
CORBA_double ytilt;
CORBA_long state;
CORBA_boolean is_hint;
};

#if !defined(TC_IMPL_TC_Bonobo_Gdk_MotionEvent_0)
#define TC_IMPL_TC_Bonobo_Gdk_MotionEvent_0 'B'
#define TC_IMPL_TC_Bonobo_Gdk_MotionEvent_1 'o'
#define TC_IMPL_TC_Bonobo_Gdk_MotionEvent_2 'n'
#define TC_IMPL_TC_Bonobo_Gdk_MotionEvent_3 'o'
#define TC_IMPL_TC_Bonobo_Gdk_MotionEvent_4 'b'
#define TC_IMPL_TC_Bonobo_Gdk_MotionEvent_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Gdk_MotionEvent_struct;
#define TC_Bonobo_Gdk_MotionEvent ((CORBA_TypeCode)&TC_Bonobo_Gdk_MotionEvent_struct)
#endif
#define Bonobo_Gdk_MotionEvent__alloc() ((Bonobo_Gdk_MotionEvent *)ORBit_small_alloc (TC_Bonobo_Gdk_MotionEvent))
#define Bonobo_Gdk_MotionEvent__freekids(m,d) ORBit_small_freekids (TC_Bonobo_Gdk_MotionEvent,(m),(d))
#endif
#if !defined(_Bonobo_Gdk_ButtonEvent_defined)
#define _Bonobo_Gdk_ButtonEvent_defined 1
typedef struct Bonobo_Gdk_ButtonEvent_type Bonobo_Gdk_ButtonEvent;
struct Bonobo_Gdk_ButtonEvent_type {
Bonobo_Gdk_ButtonType type;
Bonobo_Gdk_Time time;
CORBA_double x;
CORBA_double y;
CORBA_double x_root;
CORBA_double y_root;
CORBA_short button;
};

#if !defined(TC_IMPL_TC_Bonobo_Gdk_ButtonEvent_0)
#define TC_IMPL_TC_Bonobo_Gdk_ButtonEvent_0 'B'
#define TC_IMPL_TC_Bonobo_Gdk_ButtonEvent_1 'o'
#define TC_IMPL_TC_Bonobo_Gdk_ButtonEvent_2 'n'
#define TC_IMPL_TC_Bonobo_Gdk_ButtonEvent_3 'o'
#define TC_IMPL_TC_Bonobo_Gdk_ButtonEvent_4 'b'
#define TC_IMPL_TC_Bonobo_Gdk_ButtonEvent_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Gdk_ButtonEvent_struct;
#define TC_Bonobo_Gdk_ButtonEvent ((CORBA_TypeCode)&TC_Bonobo_Gdk_ButtonEvent_struct)
#endif
#define Bonobo_Gdk_ButtonEvent__alloc() ((Bonobo_Gdk_ButtonEvent *)ORBit_small_alloc (TC_Bonobo_Gdk_ButtonEvent))
#define Bonobo_Gdk_ButtonEvent__freekids(m,d) ORBit_small_freekids (TC_Bonobo_Gdk_ButtonEvent,(m),(d))
#endif
#if !defined(_Bonobo_Gdk_KeyEvent_defined)
#define _Bonobo_Gdk_KeyEvent_defined 1
typedef struct Bonobo_Gdk_KeyEvent_type Bonobo_Gdk_KeyEvent;
struct Bonobo_Gdk_KeyEvent_type {
Bonobo_Gdk_KeyType type;
Bonobo_Gdk_Time time;
CORBA_short state;
CORBA_short keyval;
CORBA_short length;
CORBA_string str;
};

#if !defined(TC_IMPL_TC_Bonobo_Gdk_KeyEvent_0)
#define TC_IMPL_TC_Bonobo_Gdk_KeyEvent_0 'B'
#define TC_IMPL_TC_Bonobo_Gdk_KeyEvent_1 'o'
#define TC_IMPL_TC_Bonobo_Gdk_KeyEvent_2 'n'
#define TC_IMPL_TC_Bonobo_Gdk_KeyEvent_3 'o'
#define TC_IMPL_TC_Bonobo_Gdk_KeyEvent_4 'b'
#define TC_IMPL_TC_Bonobo_Gdk_KeyEvent_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Gdk_KeyEvent_struct;
#define TC_Bonobo_Gdk_KeyEvent ((CORBA_TypeCode)&TC_Bonobo_Gdk_KeyEvent_struct)
#endif
#define Bonobo_Gdk_KeyEvent__alloc() ((Bonobo_Gdk_KeyEvent *)ORBit_small_alloc (TC_Bonobo_Gdk_KeyEvent))
#define Bonobo_Gdk_KeyEvent__freekids(m,d) ORBit_small_freekids (TC_Bonobo_Gdk_KeyEvent,(m),(d))
#endif
#if !defined(_Bonobo_Gdk_CrossingEvent_defined)
#define _Bonobo_Gdk_CrossingEvent_defined 1
typedef struct Bonobo_Gdk_CrossingEvent_type Bonobo_Gdk_CrossingEvent;
struct Bonobo_Gdk_CrossingEvent_type {
Bonobo_Gdk_CrossType type;
Bonobo_Gdk_Time time;
CORBA_double x;
CORBA_double y;
CORBA_double x_root;
CORBA_double y_root;
Bonobo_Gdk_CrossMode mode;
CORBA_boolean focus;
CORBA_short state;
};

#if !defined(TC_IMPL_TC_Bonobo_Gdk_CrossingEvent_0)
#define TC_IMPL_TC_Bonobo_Gdk_CrossingEvent_0 'B'
#define TC_IMPL_TC_Bonobo_Gdk_CrossingEvent_1 'o'
#define TC_IMPL_TC_Bonobo_Gdk_CrossingEvent_2 'n'
#define TC_IMPL_TC_Bonobo_Gdk_CrossingEvent_3 'o'
#define TC_IMPL_TC_Bonobo_Gdk_CrossingEvent_4 'b'
#define TC_IMPL_TC_Bonobo_Gdk_CrossingEvent_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Gdk_CrossingEvent_struct;
#define TC_Bonobo_Gdk_CrossingEvent ((CORBA_TypeCode)&TC_Bonobo_Gdk_CrossingEvent_struct)
#endif
#define Bonobo_Gdk_CrossingEvent__alloc() ((Bonobo_Gdk_CrossingEvent *)ORBit_small_alloc (TC_Bonobo_Gdk_CrossingEvent))
#define Bonobo_Gdk_CrossingEvent__freekids(m,d) ORBit_small_freekids (TC_Bonobo_Gdk_CrossingEvent,(m),(d))
#endif
#if !defined(_Bonobo_Gdk_FocusEvent_defined)
#define _Bonobo_Gdk_FocusEvent_defined 1
typedef struct Bonobo_Gdk_FocusEvent_type Bonobo_Gdk_FocusEvent;
struct Bonobo_Gdk_FocusEvent_type {
CORBA_boolean inside;
};

#if !defined(TC_IMPL_TC_Bonobo_Gdk_FocusEvent_0)
#define TC_IMPL_TC_Bonobo_Gdk_FocusEvent_0 'B'
#define TC_IMPL_TC_Bonobo_Gdk_FocusEvent_1 'o'
#define TC_IMPL_TC_Bonobo_Gdk_FocusEvent_2 'n'
#define TC_IMPL_TC_Bonobo_Gdk_FocusEvent_3 'o'
#define TC_IMPL_TC_Bonobo_Gdk_FocusEvent_4 'b'
#define TC_IMPL_TC_Bonobo_Gdk_FocusEvent_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Gdk_FocusEvent_struct;
#define TC_Bonobo_Gdk_FocusEvent ((CORBA_TypeCode)&TC_Bonobo_Gdk_FocusEvent_struct)
#endif
#define Bonobo_Gdk_FocusEvent__alloc() ((Bonobo_Gdk_FocusEvent *)ORBit_small_alloc (TC_Bonobo_Gdk_FocusEvent))
#define Bonobo_Gdk_FocusEvent__freekids(m,d) ORBit_small_freekids (TC_Bonobo_Gdk_FocusEvent,(m),(d))
#endif
#if !defined(_Bonobo_Gdk_Event_defined)
#define _Bonobo_Gdk_Event_defined 1
typedef struct Bonobo_Gdk_Event_type Bonobo_Gdk_Event;
struct Bonobo_Gdk_Event_type {
Bonobo_Gdk_EventType _d;
union {
Bonobo_Gdk_FocusEvent focus;
Bonobo_Gdk_KeyEvent key;
Bonobo_Gdk_MotionEvent motion;
Bonobo_Gdk_ButtonEvent button;
Bonobo_Gdk_CrossingEvent crossing;
} _u;
};
#if !defined(TC_IMPL_TC_Bonobo_Gdk_Event_0)
#define TC_IMPL_TC_Bonobo_Gdk_Event_0 'B'
#define TC_IMPL_TC_Bonobo_Gdk_Event_1 'o'
#define TC_IMPL_TC_Bonobo_Gdk_Event_2 'n'
#define TC_IMPL_TC_Bonobo_Gdk_Event_3 'o'
#define TC_IMPL_TC_Bonobo_Gdk_Event_4 'b'
#define TC_IMPL_TC_Bonobo_Gdk_Event_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Gdk_Event_struct;
#define TC_Bonobo_Gdk_Event ((CORBA_TypeCode)&TC_Bonobo_Gdk_Event_struct)
#endif
#define Bonobo_Gdk_Event__alloc() ((Bonobo_Gdk_Event *)ORBit_small_alloc (TC_Bonobo_Gdk_Event))
#define Bonobo_Gdk_Event__freekids(m,d) ORBit_small_freekids (TC_Bonobo_Gdk_Event,(m),(d))
#endif
#if !defined(_Bonobo_Gdk_WindowId_defined)
#define _Bonobo_Gdk_WindowId_defined 1
typedef CORBA_string Bonobo_Gdk_WindowId;
#define Bonobo_Gdk_WindowId_marshal(x,y,z) CORBA_string_marshal((x),(y),(z))
#define Bonobo_Gdk_WindowId_demarshal(x,y,z,i) CORBA_string_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_Bonobo_Gdk_WindowId_0)
#define TC_IMPL_TC_Bonobo_Gdk_WindowId_0 'B'
#define TC_IMPL_TC_Bonobo_Gdk_WindowId_1 'o'
#define TC_IMPL_TC_Bonobo_Gdk_WindowId_2 'n'
#define TC_IMPL_TC_Bonobo_Gdk_WindowId_3 'o'
#define TC_IMPL_TC_Bonobo_Gdk_WindowId_4 'b'
#define TC_IMPL_TC_Bonobo_Gdk_WindowId_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Gdk_WindowId_struct;
#define TC_Bonobo_Gdk_WindowId ((CORBA_TypeCode)&TC_Bonobo_Gdk_WindowId_struct)
#endif
#define Bonobo_Gdk_WindowId__alloc() ((Bonobo_Gdk_WindowId *)ORBit_small_alloc (TC_CORBA_string))
#define Bonobo_Gdk_WindowId__freekids(m,d) ORBit_small_freekids (TC_CORBA_string,(m),(d))
#endif
#if !defined(_Bonobo_Gtk_Requisition_defined)
#define _Bonobo_Gtk_Requisition_defined 1
typedef struct Bonobo_Gtk_Requisition_type Bonobo_Gtk_Requisition;
struct Bonobo_Gtk_Requisition_type {
CORBA_long width;
CORBA_long height;
};

#if !defined(TC_IMPL_TC_Bonobo_Gtk_Requisition_0)
#define TC_IMPL_TC_Bonobo_Gtk_Requisition_0 'B'
#define TC_IMPL_TC_Bonobo_Gtk_Requisition_1 'o'
#define TC_IMPL_TC_Bonobo_Gtk_Requisition_2 'n'
#define TC_IMPL_TC_Bonobo_Gtk_Requisition_3 'o'
#define TC_IMPL_TC_Bonobo_Gtk_Requisition_4 'b'
#define TC_IMPL_TC_Bonobo_Gtk_Requisition_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Gtk_Requisition_struct;
#define TC_Bonobo_Gtk_Requisition ((CORBA_TypeCode)&TC_Bonobo_Gtk_Requisition_struct)
#endif
#define Bonobo_Gtk_Requisition__alloc() ((Bonobo_Gtk_Requisition *)ORBit_small_alloc (TC_Bonobo_Gtk_Requisition))
#define Bonobo_Gtk_Requisition__freekids(m,d) ORBit_small_freekids (TC_Bonobo_Gtk_Requisition,(m),(d))
#endif
#if !defined(_Bonobo_Gtk_State_defined)
#define _Bonobo_Gtk_State_defined 1
typedef enum {
  Bonobo_Gtk_StateNormal,
  Bonobo_Gtk_StateActive,
  Bonobo_Gtk_StatePrelight,
  Bonobo_Gtk_StateSelected,
  Bonobo_Gtk_StateInsensitive
} Bonobo_Gtk_State;
#if !defined(TC_IMPL_TC_Bonobo_Gtk_State_0)
#define TC_IMPL_TC_Bonobo_Gtk_State_0 'B'
#define TC_IMPL_TC_Bonobo_Gtk_State_1 'o'
#define TC_IMPL_TC_Bonobo_Gtk_State_2 'n'
#define TC_IMPL_TC_Bonobo_Gtk_State_3 'o'
#define TC_IMPL_TC_Bonobo_Gtk_State_4 'b'
#define TC_IMPL_TC_Bonobo_Gtk_State_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Gtk_State_struct;
#define TC_Bonobo_Gtk_State ((CORBA_TypeCode)&TC_Bonobo_Gtk_State_struct)
#endif
#endif
#if !defined(_Bonobo_Gtk_Direction_defined)
#define _Bonobo_Gtk_Direction_defined 1
typedef enum {
  Bonobo_Gtk_DirectionTabForward,
  Bonobo_Gtk_DirectionTabBackward,
  Bonobo_Gtk_DirectionUp,
  Bonobo_Gtk_DirectionDown,
  Bonobo_Gtk_DirectionLeft,
  Bonobo_Gtk_DirectionRight
} Bonobo_Gtk_Direction;
#if !defined(TC_IMPL_TC_Bonobo_Gtk_Direction_0)
#define TC_IMPL_TC_Bonobo_Gtk_Direction_0 'B'
#define TC_IMPL_TC_Bonobo_Gtk_Direction_1 'o'
#define TC_IMPL_TC_Bonobo_Gtk_Direction_2 'n'
#define TC_IMPL_TC_Bonobo_Gtk_Direction_3 'o'
#define TC_IMPL_TC_Bonobo_Gtk_Direction_4 'b'
#define TC_IMPL_TC_Bonobo_Gtk_Direction_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Gtk_Direction_struct;
#define TC_Bonobo_Gtk_Direction ((CORBA_TypeCode)&TC_Bonobo_Gtk_Direction_struct)
#endif
#endif
#if !defined(ORBIT_DECL_Bonobo_UIContainer) && !defined(_Bonobo_UIContainer_defined)
#define ORBIT_DECL_Bonobo_UIContainer 1
#define _Bonobo_UIContainer_defined 1
#define Bonobo_UIContainer__freekids CORBA_Object__freekids
typedef CORBA_Object Bonobo_UIContainer;
extern CORBA_unsigned_long Bonobo_UIContainer__classid;
#if !defined(TC_IMPL_TC_Bonobo_UIContainer_0)
#define TC_IMPL_TC_Bonobo_UIContainer_0 'B'
#define TC_IMPL_TC_Bonobo_UIContainer_1 'o'
#define TC_IMPL_TC_Bonobo_UIContainer_2 'n'
#define TC_IMPL_TC_Bonobo_UIContainer_3 'o'
#define TC_IMPL_TC_Bonobo_UIContainer_4 'b'
#define TC_IMPL_TC_Bonobo_UIContainer_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_UIContainer_struct;
#define TC_Bonobo_UIContainer ((CORBA_TypeCode)&TC_Bonobo_UIContainer_struct)
#endif
#endif
#if !defined(ORBIT_DECL_Bonobo_UIComponent) && !defined(_Bonobo_UIComponent_defined)
#define ORBIT_DECL_Bonobo_UIComponent 1
#define _Bonobo_UIComponent_defined 1
#define Bonobo_UIComponent__freekids CORBA_Object__freekids
typedef CORBA_Object Bonobo_UIComponent;
extern CORBA_unsigned_long Bonobo_UIComponent__classid;
#if !defined(TC_IMPL_TC_Bonobo_UIComponent_0)
#define TC_IMPL_TC_Bonobo_UIComponent_0 'B'
#define TC_IMPL_TC_Bonobo_UIComponent_1 'o'
#define TC_IMPL_TC_Bonobo_UIComponent_2 'n'
#define TC_IMPL_TC_Bonobo_UIComponent_3 'o'
#define TC_IMPL_TC_Bonobo_UIComponent_4 'b'
#define TC_IMPL_TC_Bonobo_UIComponent_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_UIComponent_struct;
#define TC_Bonobo_UIComponent ((CORBA_TypeCode)&TC_Bonobo_UIComponent_struct)
#endif
#endif
#if !defined(_Bonobo_UIComponent_EventType_defined)
#define _Bonobo_UIComponent_EventType_defined 1
typedef enum {
  Bonobo_UIComponent_STATE_CHANGED,
  Bonobo_UIComponent_OTHER
} Bonobo_UIComponent_EventType;
#if !defined(TC_IMPL_TC_Bonobo_UIComponent_EventType_0)
#define TC_IMPL_TC_Bonobo_UIComponent_EventType_0 'B'
#define TC_IMPL_TC_Bonobo_UIComponent_EventType_1 'o'
#define TC_IMPL_TC_Bonobo_UIComponent_EventType_2 'n'
#define TC_IMPL_TC_Bonobo_UIComponent_EventType_3 'o'
#define TC_IMPL_TC_Bonobo_UIComponent_EventType_4 'b'
#define TC_IMPL_TC_Bonobo_UIComponent_EventType_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_UIComponent_EventType_struct;
#define TC_Bonobo_UIComponent_EventType ((CORBA_TypeCode)&TC_Bonobo_UIComponent_EventType_struct)
#endif
#endif
#if !defined(ORBIT_DECL_Bonobo_UIContainer) && !defined(_Bonobo_UIContainer_defined)
#define ORBIT_DECL_Bonobo_UIContainer 1
#define _Bonobo_UIContainer_defined 1
#define Bonobo_UIContainer__freekids CORBA_Object__freekids
typedef CORBA_Object Bonobo_UIContainer;
extern CORBA_unsigned_long Bonobo_UIContainer__classid;
#if !defined(TC_IMPL_TC_Bonobo_UIContainer_0)
#define TC_IMPL_TC_Bonobo_UIContainer_0 'B'
#define TC_IMPL_TC_Bonobo_UIContainer_1 'o'
#define TC_IMPL_TC_Bonobo_UIContainer_2 'n'
#define TC_IMPL_TC_Bonobo_UIContainer_3 'o'
#define TC_IMPL_TC_Bonobo_UIContainer_4 'b'
#define TC_IMPL_TC_Bonobo_UIContainer_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_UIContainer_struct;
#define TC_Bonobo_UIContainer ((CORBA_TypeCode)&TC_Bonobo_UIContainer_struct)
#endif
#endif
#undef ex_Bonobo_UIContainer_MalformedXML
#define ex_Bonobo_UIContainer_MalformedXML "IDL:Bonobo/UIContainer/MalformedXML:1.0"
#if !defined(_Bonobo_UIContainer_MalformedXML_defined)
#define _Bonobo_UIContainer_MalformedXML_defined 1
typedef struct Bonobo_UIContainer_MalformedXML_type Bonobo_UIContainer_MalformedXML;
struct Bonobo_UIContainer_MalformedXML_type {
int dummy;
};

#if !defined(TC_IMPL_TC_Bonobo_UIContainer_MalformedXML_0)
#define TC_IMPL_TC_Bonobo_UIContainer_MalformedXML_0 'B'
#define TC_IMPL_TC_Bonobo_UIContainer_MalformedXML_1 'o'
#define TC_IMPL_TC_Bonobo_UIContainer_MalformedXML_2 'n'
#define TC_IMPL_TC_Bonobo_UIContainer_MalformedXML_3 'o'
#define TC_IMPL_TC_Bonobo_UIContainer_MalformedXML_4 'b'
#define TC_IMPL_TC_Bonobo_UIContainer_MalformedXML_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_UIContainer_MalformedXML_struct;
#define TC_Bonobo_UIContainer_MalformedXML ((CORBA_TypeCode)&TC_Bonobo_UIContainer_MalformedXML_struct)
#endif
#define Bonobo_UIContainer_MalformedXML__alloc() ((Bonobo_UIContainer_MalformedXML *)ORBit_small_alloc (TC_Bonobo_UIContainer_MalformedXML))
#define Bonobo_UIContainer_MalformedXML__freekids(m,d) ORBit_small_freekids (TC_Bonobo_UIContainer_MalformedXML,(m),(d))
#endif
#undef ex_Bonobo_UIContainer_InvalidPath
#define ex_Bonobo_UIContainer_InvalidPath "IDL:Bonobo/UIContainer/InvalidPath:1.0"
#if !defined(_Bonobo_UIContainer_InvalidPath_defined)
#define _Bonobo_UIContainer_InvalidPath_defined 1
typedef struct Bonobo_UIContainer_InvalidPath_type Bonobo_UIContainer_InvalidPath;
struct Bonobo_UIContainer_InvalidPath_type {
int dummy;
};

#if !defined(TC_IMPL_TC_Bonobo_UIContainer_InvalidPath_0)
#define TC_IMPL_TC_Bonobo_UIContainer_InvalidPath_0 'B'
#define TC_IMPL_TC_Bonobo_UIContainer_InvalidPath_1 'o'
#define TC_IMPL_TC_Bonobo_UIContainer_InvalidPath_2 'n'
#define TC_IMPL_TC_Bonobo_UIContainer_InvalidPath_3 'o'
#define TC_IMPL_TC_Bonobo_UIContainer_InvalidPath_4 'b'
#define TC_IMPL_TC_Bonobo_UIContainer_InvalidPath_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_UIContainer_InvalidPath_struct;
#define TC_Bonobo_UIContainer_InvalidPath ((CORBA_TypeCode)&TC_Bonobo_UIContainer_InvalidPath_struct)
#endif
#define Bonobo_UIContainer_InvalidPath__alloc() ((Bonobo_UIContainer_InvalidPath *)ORBit_small_alloc (TC_Bonobo_UIContainer_InvalidPath))
#define Bonobo_UIContainer_InvalidPath__freekids(m,d) ORBit_small_freekids (TC_Bonobo_UIContainer_InvalidPath,(m),(d))
#endif
#undef ex_Bonobo_UIContainer_NonExistentAttr
#define ex_Bonobo_UIContainer_NonExistentAttr "IDL:Bonobo/UIContainer/NonExistentAttr:1.0"
#if !defined(_Bonobo_UIContainer_NonExistentAttr_defined)
#define _Bonobo_UIContainer_NonExistentAttr_defined 1
typedef struct Bonobo_UIContainer_NonExistentAttr_type Bonobo_UIContainer_NonExistentAttr;
struct Bonobo_UIContainer_NonExistentAttr_type {
int dummy;
};

#if !defined(TC_IMPL_TC_Bonobo_UIContainer_NonExistentAttr_0)
#define TC_IMPL_TC_Bonobo_UIContainer_NonExistentAttr_0 'B'
#define TC_IMPL_TC_Bonobo_UIContainer_NonExistentAttr_1 'o'
#define TC_IMPL_TC_Bonobo_UIContainer_NonExistentAttr_2 'n'
#define TC_IMPL_TC_Bonobo_UIContainer_NonExistentAttr_3 'o'
#define TC_IMPL_TC_Bonobo_UIContainer_NonExistentAttr_4 'b'
#define TC_IMPL_TC_Bonobo_UIContainer_NonExistentAttr_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_UIContainer_NonExistentAttr_struct;
#define TC_Bonobo_UIContainer_NonExistentAttr ((CORBA_TypeCode)&TC_Bonobo_UIContainer_NonExistentAttr_struct)
#endif
#define Bonobo_UIContainer_NonExistentAttr__alloc() ((Bonobo_UIContainer_NonExistentAttr *)ORBit_small_alloc (TC_Bonobo_UIContainer_NonExistentAttr))
#define Bonobo_UIContainer_NonExistentAttr__freekids(m,d) ORBit_small_freekids (TC_Bonobo_UIContainer_NonExistentAttr,(m),(d))
#endif
#undef ex_Bonobo_UIContainer_Insensitive
#define ex_Bonobo_UIContainer_Insensitive "IDL:Bonobo/UIContainer/Insensitive:1.0"
#if !defined(_Bonobo_UIContainer_Insensitive_defined)
#define _Bonobo_UIContainer_Insensitive_defined 1
typedef struct Bonobo_UIContainer_Insensitive_type Bonobo_UIContainer_Insensitive;
struct Bonobo_UIContainer_Insensitive_type {
int dummy;
};

#if !defined(TC_IMPL_TC_Bonobo_UIContainer_Insensitive_0)
#define TC_IMPL_TC_Bonobo_UIContainer_Insensitive_0 'B'
#define TC_IMPL_TC_Bonobo_UIContainer_Insensitive_1 'o'
#define TC_IMPL_TC_Bonobo_UIContainer_Insensitive_2 'n'
#define TC_IMPL_TC_Bonobo_UIContainer_Insensitive_3 'o'
#define TC_IMPL_TC_Bonobo_UIContainer_Insensitive_4 'b'
#define TC_IMPL_TC_Bonobo_UIContainer_Insensitive_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_UIContainer_Insensitive_struct;
#define TC_Bonobo_UIContainer_Insensitive ((CORBA_TypeCode)&TC_Bonobo_UIContainer_Insensitive_struct)
#endif
#define Bonobo_UIContainer_Insensitive__alloc() ((Bonobo_UIContainer_Insensitive *)ORBit_small_alloc (TC_Bonobo_UIContainer_Insensitive))
#define Bonobo_UIContainer_Insensitive__freekids(m,d) ORBit_small_freekids (TC_Bonobo_UIContainer_Insensitive,(m),(d))
#endif
#undef ex_Bonobo_UIContainer_Unknown
#define ex_Bonobo_UIContainer_Unknown "IDL:Bonobo/UIContainer/Unknown:1.0"
#if !defined(_Bonobo_UIContainer_Unknown_defined)
#define _Bonobo_UIContainer_Unknown_defined 1
typedef struct Bonobo_UIContainer_Unknown_type Bonobo_UIContainer_Unknown;
struct Bonobo_UIContainer_Unknown_type {
int dummy;
};

#if !defined(TC_IMPL_TC_Bonobo_UIContainer_Unknown_0)
#define TC_IMPL_TC_Bonobo_UIContainer_Unknown_0 'B'
#define TC_IMPL_TC_Bonobo_UIContainer_Unknown_1 'o'
#define TC_IMPL_TC_Bonobo_UIContainer_Unknown_2 'n'
#define TC_IMPL_TC_Bonobo_UIContainer_Unknown_3 'o'
#define TC_IMPL_TC_Bonobo_UIContainer_Unknown_4 'b'
#define TC_IMPL_TC_Bonobo_UIContainer_Unknown_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_UIContainer_Unknown_struct;
#define TC_Bonobo_UIContainer_Unknown ((CORBA_TypeCode)&TC_Bonobo_UIContainer_Unknown_struct)
#endif
#define Bonobo_UIContainer_Unknown__alloc() ((Bonobo_UIContainer_Unknown *)ORBit_small_alloc (TC_Bonobo_UIContainer_Unknown))
#define Bonobo_UIContainer_Unknown__freekids(m,d) ORBit_small_freekids (TC_Bonobo_UIContainer_Unknown,(m),(d))
#endif
#if !defined(_Bonobo_Pair_defined)
#define _Bonobo_Pair_defined 1
typedef struct Bonobo_Pair_type Bonobo_Pair;
struct Bonobo_Pair_type {
CORBA_string name;
CORBA_any value;
};

#if !defined(TC_IMPL_TC_Bonobo_Pair_0)
#define TC_IMPL_TC_Bonobo_Pair_0 'B'
#define TC_IMPL_TC_Bonobo_Pair_1 'o'
#define TC_IMPL_TC_Bonobo_Pair_2 'n'
#define TC_IMPL_TC_Bonobo_Pair_3 'o'
#define TC_IMPL_TC_Bonobo_Pair_4 'b'
#define TC_IMPL_TC_Bonobo_Pair_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Pair_struct;
#define TC_Bonobo_Pair ((CORBA_TypeCode)&TC_Bonobo_Pair_struct)
#endif
#define Bonobo_Pair__alloc() ((Bonobo_Pair *)ORBit_small_alloc (TC_Bonobo_Pair))
#define Bonobo_Pair__freekids(m,d) ORBit_small_freekids (TC_Bonobo_Pair,(m),(d))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_Bonobo_Pair)
#define ORBIT_DECL_CORBA_sequence_Bonobo_Pair 1
#define ORBIT_IMPL_CORBA_sequence_Bonobo_Pair_0 'B'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_Pair_1 'o'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_Pair_2 'n'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_Pair_3 'o'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_Pair_4 'b'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_Pair_5 'o'
#if !defined(_CORBA_sequence_Bonobo_Pair_defined)
#define _CORBA_sequence_Bonobo_Pair_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; Bonobo_Pair* _buffer; CORBA_boolean _release; } CORBA_sequence_Bonobo_Pair;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_Bonobo_Pair_0)
#define TC_IMPL_TC_CORBA_sequence_Bonobo_Pair_0 'B'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_Pair_1 'o'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_Pair_2 'n'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_Pair_3 'o'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_Pair_4 'b'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_Pair_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_CORBA_sequence_Bonobo_Pair_struct;
#define TC_CORBA_sequence_Bonobo_Pair ((CORBA_TypeCode)&TC_CORBA_sequence_Bonobo_Pair_struct)
#endif
#define CORBA_sequence_Bonobo_Pair__alloc() ((CORBA_sequence_Bonobo_Pair *)ORBit_small_alloc (TC_CORBA_sequence_Bonobo_Pair))
#define CORBA_sequence_Bonobo_Pair__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_Bonobo_Pair,(m),(d))
#define CORBA_sequence_Bonobo_Pair_allocbuf(l) ((Bonobo_Pair*)ORBit_small_allocbuf (TC_CORBA_sequence_Bonobo_Pair, (l)))
#define CORBA_sequence_Bonobo_Pair_allocbuf(l) ((Bonobo_Pair*)ORBit_small_allocbuf (TC_CORBA_sequence_Bonobo_Pair, (l)))
#endif
#if !defined(_Bonobo_PropertySet_defined)
#define _Bonobo_PropertySet_defined 1
typedef CORBA_sequence_Bonobo_Pair Bonobo_PropertySet;
#define Bonobo_PropertySet_marshal(x,y,z) CORBA_sequence_Bonobo_Pair_marshal((x),(y),(z))
#define Bonobo_PropertySet_demarshal(x,y,z,i) CORBA_sequence_Bonobo_Pair_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_Bonobo_PropertySet_0)
#define TC_IMPL_TC_Bonobo_PropertySet_0 'B'
#define TC_IMPL_TC_Bonobo_PropertySet_1 'o'
#define TC_IMPL_TC_Bonobo_PropertySet_2 'n'
#define TC_IMPL_TC_Bonobo_PropertySet_3 'o'
#define TC_IMPL_TC_Bonobo_PropertySet_4 'b'
#define TC_IMPL_TC_Bonobo_PropertySet_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_PropertySet_struct;
#define TC_Bonobo_PropertySet ((CORBA_TypeCode)&TC_Bonobo_PropertySet_struct)
#endif
#define Bonobo_PropertySet__alloc() ((Bonobo_PropertySet *)ORBit_small_alloc (TC_CORBA_sequence_Bonobo_Pair))
#define Bonobo_PropertySet__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_Bonobo_Pair,(m),(d))
#define Bonobo_PropertySet_allocbuf(l) ((Bonobo_Pair*)ORBit_small_allocbuf (TC_CORBA_sequence_Bonobo_Pair, (l)))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_string)
#define ORBIT_DECL_CORBA_sequence_CORBA_string 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_0 'B'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_1 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_2 'n'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_3 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_4 'b'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_5 'o'
#if !defined(_CORBA_sequence_CORBA_string_defined)
#define _CORBA_sequence_CORBA_string_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; CORBA_string* _buffer; CORBA_boolean _release; } CORBA_sequence_CORBA_string;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_string_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_0 'B'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_1 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_2 'n'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_3 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_4 'b'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_string_struct;
#define TC_CORBA_sequence_CORBA_string ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_string_struct)
#endif
#define CORBA_sequence_CORBA_string__alloc() ((CORBA_sequence_CORBA_string *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_string))
#define CORBA_sequence_CORBA_string__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_string,(m),(d))
#define CORBA_sequence_CORBA_string_allocbuf(l) ((CORBA_string*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_string, (l)))
#define CORBA_sequence_CORBA_string_allocbuf(l) ((CORBA_string*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_string, (l)))
#endif
#if !defined(_Bonobo_KeyList_defined)
#define _Bonobo_KeyList_defined 1
typedef CORBA_sequence_CORBA_string Bonobo_KeyList;
#define Bonobo_KeyList_marshal(x,y,z) CORBA_sequence_CORBA_string_marshal((x),(y),(z))
#define Bonobo_KeyList_demarshal(x,y,z,i) CORBA_sequence_CORBA_string_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_Bonobo_KeyList_0)
#define TC_IMPL_TC_Bonobo_KeyList_0 'B'
#define TC_IMPL_TC_Bonobo_KeyList_1 'o'
#define TC_IMPL_TC_Bonobo_KeyList_2 'n'
#define TC_IMPL_TC_Bonobo_KeyList_3 'o'
#define TC_IMPL_TC_Bonobo_KeyList_4 'b'
#define TC_IMPL_TC_Bonobo_KeyList_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_KeyList_struct;
#define TC_Bonobo_KeyList ((CORBA_TypeCode)&TC_Bonobo_KeyList_struct)
#endif
#define Bonobo_KeyList__alloc() ((Bonobo_KeyList *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_string))
#define Bonobo_KeyList__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_string,(m),(d))
#define Bonobo_KeyList_allocbuf(l) ((CORBA_string*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_string, (l)))
#endif
#if !defined(_Bonobo_PropertyFlags_defined)
#define _Bonobo_PropertyFlags_defined 1
typedef CORBA_long Bonobo_PropertyFlags;
#define Bonobo_PropertyFlags_marshal(x,y,z) CORBA_long_marshal((x),(y),(z))
#define Bonobo_PropertyFlags_demarshal(x,y,z,i) CORBA_long_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_Bonobo_PropertyFlags_0)
#define TC_IMPL_TC_Bonobo_PropertyFlags_0 'B'
#define TC_IMPL_TC_Bonobo_PropertyFlags_1 'o'
#define TC_IMPL_TC_Bonobo_PropertyFlags_2 'n'
#define TC_IMPL_TC_Bonobo_PropertyFlags_3 'o'
#define TC_IMPL_TC_Bonobo_PropertyFlags_4 'b'
#define TC_IMPL_TC_Bonobo_PropertyFlags_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_PropertyFlags_struct;
#define TC_Bonobo_PropertyFlags ((CORBA_TypeCode)&TC_Bonobo_PropertyFlags_struct)
#endif
#define Bonobo_PropertyFlags__alloc() ((Bonobo_PropertyFlags *)ORBit_small_alloc (TC_CORBA_long))
#define Bonobo_PropertyFlags__freekids(m,d) ORBit_small_freekids (TC_CORBA_long,(m),(d))
#endif
#ifndef Bonobo_PROPERTY_READABLE
#define Bonobo_PROPERTY_READABLE 1
#endif /* !Bonobo_PROPERTY_READABLE */

#ifndef Bonobo_PROPERTY_WRITEABLE
#define Bonobo_PROPERTY_WRITEABLE 2
#endif /* !Bonobo_PROPERTY_WRITEABLE */

#ifndef Bonobo_PROPERTY_NO_LISTENING
#define Bonobo_PROPERTY_NO_LISTENING 4
#endif /* !Bonobo_PROPERTY_NO_LISTENING */

#ifndef Bonobo_PROPERTY_NO_AUTONOTIFY
#define Bonobo_PROPERTY_NO_AUTONOTIFY 8
#endif /* !Bonobo_PROPERTY_NO_AUTONOTIFY */

#ifndef Bonobo_PROPERTY_NO_PERSIST
#define Bonobo_PROPERTY_NO_PERSIST 16
#endif /* !Bonobo_PROPERTY_NO_PERSIST */

#if !defined(ORBIT_DECL_Bonobo_PropertyBag) && !defined(_Bonobo_PropertyBag_defined)
#define ORBIT_DECL_Bonobo_PropertyBag 1
#define _Bonobo_PropertyBag_defined 1
#define Bonobo_PropertyBag__freekids CORBA_Object__freekids
typedef CORBA_Object Bonobo_PropertyBag;
extern CORBA_unsigned_long Bonobo_PropertyBag__classid;
#if !defined(TC_IMPL_TC_Bonobo_PropertyBag_0)
#define TC_IMPL_TC_Bonobo_PropertyBag_0 'B'
#define TC_IMPL_TC_Bonobo_PropertyBag_1 'o'
#define TC_IMPL_TC_Bonobo_PropertyBag_2 'n'
#define TC_IMPL_TC_Bonobo_PropertyBag_3 'o'
#define TC_IMPL_TC_Bonobo_PropertyBag_4 'b'
#define TC_IMPL_TC_Bonobo_PropertyBag_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_PropertyBag_struct;
#define TC_Bonobo_PropertyBag ((CORBA_TypeCode)&TC_Bonobo_PropertyBag_struct)
#endif
#endif
#undef ex_Bonobo_PropertyBag_NotFound
#define ex_Bonobo_PropertyBag_NotFound "IDL:Bonobo/PropertyBag/NotFound:1.0"
#if !defined(_Bonobo_PropertyBag_NotFound_defined)
#define _Bonobo_PropertyBag_NotFound_defined 1
typedef struct Bonobo_PropertyBag_NotFound_type Bonobo_PropertyBag_NotFound;
struct Bonobo_PropertyBag_NotFound_type {
int dummy;
};

#if !defined(TC_IMPL_TC_Bonobo_PropertyBag_NotFound_0)
#define TC_IMPL_TC_Bonobo_PropertyBag_NotFound_0 'B'
#define TC_IMPL_TC_Bonobo_PropertyBag_NotFound_1 'o'
#define TC_IMPL_TC_Bonobo_PropertyBag_NotFound_2 'n'
#define TC_IMPL_TC_Bonobo_PropertyBag_NotFound_3 'o'
#define TC_IMPL_TC_Bonobo_PropertyBag_NotFound_4 'b'
#define TC_IMPL_TC_Bonobo_PropertyBag_NotFound_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_PropertyBag_NotFound_struct;
#define TC_Bonobo_PropertyBag_NotFound ((CORBA_TypeCode)&TC_Bonobo_PropertyBag_NotFound_struct)
#endif
#define Bonobo_PropertyBag_NotFound__alloc() ((Bonobo_PropertyBag_NotFound *)ORBit_small_alloc (TC_Bonobo_PropertyBag_NotFound))
#define Bonobo_PropertyBag_NotFound__freekids(m,d) ORBit_small_freekids (TC_Bonobo_PropertyBag_NotFound,(m),(d))
#endif
#undef ex_Bonobo_PropertyBag_InvalidType
#define ex_Bonobo_PropertyBag_InvalidType "IDL:Bonobo/PropertyBag/InvalidType:1.0"
#if !defined(_Bonobo_PropertyBag_InvalidType_defined)
#define _Bonobo_PropertyBag_InvalidType_defined 1
typedef struct Bonobo_PropertyBag_InvalidType_type Bonobo_PropertyBag_InvalidType;
struct Bonobo_PropertyBag_InvalidType_type {
int dummy;
};

#if !defined(TC_IMPL_TC_Bonobo_PropertyBag_InvalidType_0)
#define TC_IMPL_TC_Bonobo_PropertyBag_InvalidType_0 'B'
#define TC_IMPL_TC_Bonobo_PropertyBag_InvalidType_1 'o'
#define TC_IMPL_TC_Bonobo_PropertyBag_InvalidType_2 'n'
#define TC_IMPL_TC_Bonobo_PropertyBag_InvalidType_3 'o'
#define TC_IMPL_TC_Bonobo_PropertyBag_InvalidType_4 'b'
#define TC_IMPL_TC_Bonobo_PropertyBag_InvalidType_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_PropertyBag_InvalidType_struct;
#define TC_Bonobo_PropertyBag_InvalidType ((CORBA_TypeCode)&TC_Bonobo_PropertyBag_InvalidType_struct)
#endif
#define Bonobo_PropertyBag_InvalidType__alloc() ((Bonobo_PropertyBag_InvalidType *)ORBit_small_alloc (TC_Bonobo_PropertyBag_InvalidType))
#define Bonobo_PropertyBag_InvalidType__freekids(m,d) ORBit_small_freekids (TC_Bonobo_PropertyBag_InvalidType,(m),(d))
#endif
#undef ex_Bonobo_PropertyBag_ReadOnly
#define ex_Bonobo_PropertyBag_ReadOnly "IDL:Bonobo/PropertyBag/ReadOnly:1.0"
#if !defined(_Bonobo_PropertyBag_ReadOnly_defined)
#define _Bonobo_PropertyBag_ReadOnly_defined 1
typedef struct Bonobo_PropertyBag_ReadOnly_type Bonobo_PropertyBag_ReadOnly;
struct Bonobo_PropertyBag_ReadOnly_type {
int dummy;
};

#if !defined(TC_IMPL_TC_Bonobo_PropertyBag_ReadOnly_0)
#define TC_IMPL_TC_Bonobo_PropertyBag_ReadOnly_0 'B'
#define TC_IMPL_TC_Bonobo_PropertyBag_ReadOnly_1 'o'
#define TC_IMPL_TC_Bonobo_PropertyBag_ReadOnly_2 'n'
#define TC_IMPL_TC_Bonobo_PropertyBag_ReadOnly_3 'o'
#define TC_IMPL_TC_Bonobo_PropertyBag_ReadOnly_4 'b'
#define TC_IMPL_TC_Bonobo_PropertyBag_ReadOnly_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_PropertyBag_ReadOnly_struct;
#define TC_Bonobo_PropertyBag_ReadOnly ((CORBA_TypeCode)&TC_Bonobo_PropertyBag_ReadOnly_struct)
#endif
#define Bonobo_PropertyBag_ReadOnly__alloc() ((Bonobo_PropertyBag_ReadOnly *)ORBit_small_alloc (TC_Bonobo_PropertyBag_ReadOnly))
#define Bonobo_PropertyBag_ReadOnly__freekids(m,d) ORBit_small_freekids (TC_Bonobo_PropertyBag_ReadOnly,(m),(d))
#endif
#undef ex_Bonobo_PropertyBag_BackendFailed
#define ex_Bonobo_PropertyBag_BackendFailed "IDL:Bonobo/PropertyBag/BackendFailed:1.0"
#if !defined(_Bonobo_PropertyBag_BackendFailed_defined)
#define _Bonobo_PropertyBag_BackendFailed_defined 1
typedef struct Bonobo_PropertyBag_BackendFailed_type Bonobo_PropertyBag_BackendFailed;
struct Bonobo_PropertyBag_BackendFailed_type {
int dummy;
};

#if !defined(TC_IMPL_TC_Bonobo_PropertyBag_BackendFailed_0)
#define TC_IMPL_TC_Bonobo_PropertyBag_BackendFailed_0 'B'
#define TC_IMPL_TC_Bonobo_PropertyBag_BackendFailed_1 'o'
#define TC_IMPL_TC_Bonobo_PropertyBag_BackendFailed_2 'n'
#define TC_IMPL_TC_Bonobo_PropertyBag_BackendFailed_3 'o'
#define TC_IMPL_TC_Bonobo_PropertyBag_BackendFailed_4 'b'
#define TC_IMPL_TC_Bonobo_PropertyBag_BackendFailed_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_PropertyBag_BackendFailed_struct;
#define TC_Bonobo_PropertyBag_BackendFailed ((CORBA_TypeCode)&TC_Bonobo_PropertyBag_BackendFailed_struct)
#endif
#define Bonobo_PropertyBag_BackendFailed__alloc() ((Bonobo_PropertyBag_BackendFailed *)ORBit_small_alloc (TC_Bonobo_PropertyBag_BackendFailed))
#define Bonobo_PropertyBag_BackendFailed__freekids(m,d) ORBit_small_freekids (TC_Bonobo_PropertyBag_BackendFailed,(m),(d))
#endif
#if !defined(ORBIT_DECL_Bonobo_ConfigDatabase) && !defined(_Bonobo_ConfigDatabase_defined)
#define ORBIT_DECL_Bonobo_ConfigDatabase 1
#define _Bonobo_ConfigDatabase_defined 1
#define Bonobo_ConfigDatabase__freekids CORBA_Object__freekids
typedef CORBA_Object Bonobo_ConfigDatabase;
extern CORBA_unsigned_long Bonobo_ConfigDatabase__classid;
#if !defined(TC_IMPL_TC_Bonobo_ConfigDatabase_0)
#define TC_IMPL_TC_Bonobo_ConfigDatabase_0 'B'
#define TC_IMPL_TC_Bonobo_ConfigDatabase_1 'o'
#define TC_IMPL_TC_Bonobo_ConfigDatabase_2 'n'
#define TC_IMPL_TC_Bonobo_ConfigDatabase_3 'o'
#define TC_IMPL_TC_Bonobo_ConfigDatabase_4 'b'
#define TC_IMPL_TC_Bonobo_ConfigDatabase_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_ConfigDatabase_struct;
#define TC_Bonobo_ConfigDatabase ((CORBA_TypeCode)&TC_Bonobo_ConfigDatabase_struct)
#endif
#endif
#if !defined(_Bonobo_ConfigDatabase_DBFlags_defined)
#define _Bonobo_ConfigDatabase_DBFlags_defined 1
typedef enum {
  Bonobo_ConfigDatabase_DEFAULT,
  Bonobo_ConfigDatabase_WRITE,
  Bonobo_ConfigDatabase_MANDATORY
} Bonobo_ConfigDatabase_DBFlags;
#if !defined(TC_IMPL_TC_Bonobo_ConfigDatabase_DBFlags_0)
#define TC_IMPL_TC_Bonobo_ConfigDatabase_DBFlags_0 'B'
#define TC_IMPL_TC_Bonobo_ConfigDatabase_DBFlags_1 'o'
#define TC_IMPL_TC_Bonobo_ConfigDatabase_DBFlags_2 'n'
#define TC_IMPL_TC_Bonobo_ConfigDatabase_DBFlags_3 'o'
#define TC_IMPL_TC_Bonobo_ConfigDatabase_DBFlags_4 'b'
#define TC_IMPL_TC_Bonobo_ConfigDatabase_DBFlags_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_ConfigDatabase_DBFlags_struct;
#define TC_Bonobo_ConfigDatabase_DBFlags ((CORBA_TypeCode)&TC_Bonobo_ConfigDatabase_DBFlags_struct)
#endif
#endif
#if !defined(ORBIT_DECL_Bonobo_ControlFrame) && !defined(_Bonobo_ControlFrame_defined)
#define ORBIT_DECL_Bonobo_ControlFrame 1
#define _Bonobo_ControlFrame_defined 1
#define Bonobo_ControlFrame__freekids CORBA_Object__freekids
typedef CORBA_Object Bonobo_ControlFrame;
extern CORBA_unsigned_long Bonobo_ControlFrame__classid;
#if !defined(TC_IMPL_TC_Bonobo_ControlFrame_0)
#define TC_IMPL_TC_Bonobo_ControlFrame_0 'B'
#define TC_IMPL_TC_Bonobo_ControlFrame_1 'o'
#define TC_IMPL_TC_Bonobo_ControlFrame_2 'n'
#define TC_IMPL_TC_Bonobo_ControlFrame_3 'o'
#define TC_IMPL_TC_Bonobo_ControlFrame_4 'b'
#define TC_IMPL_TC_Bonobo_ControlFrame_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_ControlFrame_struct;
#define TC_Bonobo_ControlFrame ((CORBA_TypeCode)&TC_Bonobo_ControlFrame_struct)
#endif
#endif
#if !defined(ORBIT_DECL_Bonobo_Control) && !defined(_Bonobo_Control_defined)
#define ORBIT_DECL_Bonobo_Control 1
#define _Bonobo_Control_defined 1
#define Bonobo_Control__freekids CORBA_Object__freekids
typedef CORBA_Object Bonobo_Control;
extern CORBA_unsigned_long Bonobo_Control__classid;
#if !defined(TC_IMPL_TC_Bonobo_Control_0)
#define TC_IMPL_TC_Bonobo_Control_0 'B'
#define TC_IMPL_TC_Bonobo_Control_1 'o'
#define TC_IMPL_TC_Bonobo_Control_2 'n'
#define TC_IMPL_TC_Bonobo_Control_3 'o'
#define TC_IMPL_TC_Bonobo_Control_4 'b'
#define TC_IMPL_TC_Bonobo_Control_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Control_struct;
#define TC_Bonobo_Control ((CORBA_TypeCode)&TC_Bonobo_Control_struct)
#endif
#endif
#undef ex_Bonobo_Control_NoContents
#define ex_Bonobo_Control_NoContents "IDL:Bonobo/Control/NoContents:1.0"
#if !defined(_Bonobo_Control_NoContents_defined)
#define _Bonobo_Control_NoContents_defined 1
typedef struct Bonobo_Control_NoContents_type Bonobo_Control_NoContents;
struct Bonobo_Control_NoContents_type {
int dummy;
};

#if !defined(TC_IMPL_TC_Bonobo_Control_NoContents_0)
#define TC_IMPL_TC_Bonobo_Control_NoContents_0 'B'
#define TC_IMPL_TC_Bonobo_Control_NoContents_1 'o'
#define TC_IMPL_TC_Bonobo_Control_NoContents_2 'n'
#define TC_IMPL_TC_Bonobo_Control_NoContents_3 'o'
#define TC_IMPL_TC_Bonobo_Control_NoContents_4 'b'
#define TC_IMPL_TC_Bonobo_Control_NoContents_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Control_NoContents_struct;
#define TC_Bonobo_Control_NoContents ((CORBA_TypeCode)&TC_Bonobo_Control_NoContents_struct)
#endif
#define Bonobo_Control_NoContents__alloc() ((Bonobo_Control_NoContents *)ORBit_small_alloc (TC_Bonobo_Control_NoContents))
#define Bonobo_Control_NoContents__freekids(m,d) ORBit_small_freekids (TC_Bonobo_Control_NoContents,(m),(d))
#endif
#if !defined(ORBIT_DECL_Bonobo_PropertyControl) && !defined(_Bonobo_PropertyControl_defined)
#define ORBIT_DECL_Bonobo_PropertyControl 1
#define _Bonobo_PropertyControl_defined 1
#define Bonobo_PropertyControl__freekids CORBA_Object__freekids
typedef CORBA_Object Bonobo_PropertyControl;
extern CORBA_unsigned_long Bonobo_PropertyControl__classid;
#if !defined(TC_IMPL_TC_Bonobo_PropertyControl_0)
#define TC_IMPL_TC_Bonobo_PropertyControl_0 'B'
#define TC_IMPL_TC_Bonobo_PropertyControl_1 'o'
#define TC_IMPL_TC_Bonobo_PropertyControl_2 'n'
#define TC_IMPL_TC_Bonobo_PropertyControl_3 'o'
#define TC_IMPL_TC_Bonobo_PropertyControl_4 'b'
#define TC_IMPL_TC_Bonobo_PropertyControl_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_PropertyControl_struct;
#define TC_Bonobo_PropertyControl ((CORBA_TypeCode)&TC_Bonobo_PropertyControl_struct)
#endif
#endif
#if !defined(_Bonobo_PropertyControl_Action_defined)
#define _Bonobo_PropertyControl_Action_defined 1
typedef enum {
  Bonobo_PropertyControl_APPLY,
  Bonobo_PropertyControl_HELP
} Bonobo_PropertyControl_Action;
#if !defined(TC_IMPL_TC_Bonobo_PropertyControl_Action_0)
#define TC_IMPL_TC_Bonobo_PropertyControl_Action_0 'B'
#define TC_IMPL_TC_Bonobo_PropertyControl_Action_1 'o'
#define TC_IMPL_TC_Bonobo_PropertyControl_Action_2 'n'
#define TC_IMPL_TC_Bonobo_PropertyControl_Action_3 'o'
#define TC_IMPL_TC_Bonobo_PropertyControl_Action_4 'b'
#define TC_IMPL_TC_Bonobo_PropertyControl_Action_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_PropertyControl_Action_struct;
#define TC_Bonobo_PropertyControl_Action ((CORBA_TypeCode)&TC_Bonobo_PropertyControl_Action_struct)
#endif
#endif
#undef ex_Bonobo_PropertyControl_NoPage
#define ex_Bonobo_PropertyControl_NoPage "IDL:Bonobo/PropertyControl/NoPage:1.0"
#if !defined(_Bonobo_PropertyControl_NoPage_defined)
#define _Bonobo_PropertyControl_NoPage_defined 1
typedef struct Bonobo_PropertyControl_NoPage_type Bonobo_PropertyControl_NoPage;
struct Bonobo_PropertyControl_NoPage_type {
int dummy;
};

#if !defined(TC_IMPL_TC_Bonobo_PropertyControl_NoPage_0)
#define TC_IMPL_TC_Bonobo_PropertyControl_NoPage_0 'B'
#define TC_IMPL_TC_Bonobo_PropertyControl_NoPage_1 'o'
#define TC_IMPL_TC_Bonobo_PropertyControl_NoPage_2 'n'
#define TC_IMPL_TC_Bonobo_PropertyControl_NoPage_3 'o'
#define TC_IMPL_TC_Bonobo_PropertyControl_NoPage_4 'b'
#define TC_IMPL_TC_Bonobo_PropertyControl_NoPage_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_PropertyControl_NoPage_struct;
#define TC_Bonobo_PropertyControl_NoPage ((CORBA_TypeCode)&TC_Bonobo_PropertyControl_NoPage_struct)
#endif
#define Bonobo_PropertyControl_NoPage__alloc() ((Bonobo_PropertyControl_NoPage *)ORBit_small_alloc (TC_Bonobo_PropertyControl_NoPage))
#define Bonobo_PropertyControl_NoPage__freekids(m,d) ORBit_small_freekids (TC_Bonobo_PropertyControl_NoPage,(m),(d))
#endif
#if !defined(_Bonobo_ZoomLevel_defined)
#define _Bonobo_ZoomLevel_defined 1
typedef CORBA_float Bonobo_ZoomLevel;
#define Bonobo_ZoomLevel_marshal(x,y,z) CORBA_float_marshal((x),(y),(z))
#define Bonobo_ZoomLevel_demarshal(x,y,z,i) CORBA_float_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_Bonobo_ZoomLevel_0)
#define TC_IMPL_TC_Bonobo_ZoomLevel_0 'B'
#define TC_IMPL_TC_Bonobo_ZoomLevel_1 'o'
#define TC_IMPL_TC_Bonobo_ZoomLevel_2 'n'
#define TC_IMPL_TC_Bonobo_ZoomLevel_3 'o'
#define TC_IMPL_TC_Bonobo_ZoomLevel_4 'b'
#define TC_IMPL_TC_Bonobo_ZoomLevel_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_ZoomLevel_struct;
#define TC_Bonobo_ZoomLevel ((CORBA_TypeCode)&TC_Bonobo_ZoomLevel_struct)
#endif
#define Bonobo_ZoomLevel__alloc() ((Bonobo_ZoomLevel *)ORBit_small_alloc (TC_CORBA_float))
#define Bonobo_ZoomLevel__freekids(m,d) ORBit_small_freekids (TC_CORBA_float,(m),(d))
#endif
#if !defined(_Bonobo_ZoomLevelName_defined)
#define _Bonobo_ZoomLevelName_defined 1
typedef CORBA_string Bonobo_ZoomLevelName;
#define Bonobo_ZoomLevelName_marshal(x,y,z) CORBA_string_marshal((x),(y),(z))
#define Bonobo_ZoomLevelName_demarshal(x,y,z,i) CORBA_string_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_Bonobo_ZoomLevelName_0)
#define TC_IMPL_TC_Bonobo_ZoomLevelName_0 'B'
#define TC_IMPL_TC_Bonobo_ZoomLevelName_1 'o'
#define TC_IMPL_TC_Bonobo_ZoomLevelName_2 'n'
#define TC_IMPL_TC_Bonobo_ZoomLevelName_3 'o'
#define TC_IMPL_TC_Bonobo_ZoomLevelName_4 'b'
#define TC_IMPL_TC_Bonobo_ZoomLevelName_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_ZoomLevelName_struct;
#define TC_Bonobo_ZoomLevelName ((CORBA_TypeCode)&TC_Bonobo_ZoomLevelName_struct)
#endif
#define Bonobo_ZoomLevelName__alloc() ((Bonobo_ZoomLevelName *)ORBit_small_alloc (TC_CORBA_string))
#define Bonobo_ZoomLevelName__freekids(m,d) ORBit_small_freekids (TC_CORBA_string,(m),(d))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_float)
#define ORBIT_DECL_CORBA_sequence_CORBA_float 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_float_0 'B'
#define ORBIT_IMPL_CORBA_sequence_CORBA_float_1 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_float_2 'n'
#define ORBIT_IMPL_CORBA_sequence_CORBA_float_3 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_float_4 'b'
#define ORBIT_IMPL_CORBA_sequence_CORBA_float_5 'o'
#if !defined(_CORBA_sequence_CORBA_float_defined)
#define _CORBA_sequence_CORBA_float_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; CORBA_float* _buffer; CORBA_boolean _release; } CORBA_sequence_CORBA_float;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_float_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_float_0 'B'
#define TC_IMPL_TC_CORBA_sequence_CORBA_float_1 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_float_2 'n'
#define TC_IMPL_TC_CORBA_sequence_CORBA_float_3 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_float_4 'b'
#define TC_IMPL_TC_CORBA_sequence_CORBA_float_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_float_struct;
#define TC_CORBA_sequence_CORBA_float ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_float_struct)
#endif
#define CORBA_sequence_CORBA_float__alloc() ((CORBA_sequence_CORBA_float *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_float))
#define CORBA_sequence_CORBA_float__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_float,(m),(d))
#define CORBA_sequence_CORBA_float_allocbuf(l) ((CORBA_float*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_float, (l)))
#define CORBA_sequence_CORBA_float_allocbuf(l) ((CORBA_float*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_float, (l)))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_Bonobo_ZoomLevel)
#define ORBIT_DECL_CORBA_sequence_Bonobo_ZoomLevel 1
#define ORBIT_IMPL_CORBA_sequence_Bonobo_ZoomLevel_0 'B'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_ZoomLevel_1 'o'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_ZoomLevel_2 'n'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_ZoomLevel_3 'o'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_ZoomLevel_4 'b'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_ZoomLevel_5 'o'
#if !defined(_CORBA_sequence_Bonobo_ZoomLevel_defined)
#define _CORBA_sequence_Bonobo_ZoomLevel_defined 1
typedef CORBA_sequence_CORBA_float CORBA_sequence_Bonobo_ZoomLevel;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_Bonobo_ZoomLevel_0)
#define TC_IMPL_TC_CORBA_sequence_Bonobo_ZoomLevel_0 'B'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_ZoomLevel_1 'o'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_ZoomLevel_2 'n'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_ZoomLevel_3 'o'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_ZoomLevel_4 'b'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_ZoomLevel_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_CORBA_sequence_Bonobo_ZoomLevel_struct;
#define TC_CORBA_sequence_Bonobo_ZoomLevel ((CORBA_TypeCode)&TC_CORBA_sequence_Bonobo_ZoomLevel_struct)
#endif
#define CORBA_sequence_Bonobo_ZoomLevel__alloc CORBA_sequence_CORBA_float__alloc
#define CORBA_sequence_Bonobo_ZoomLevel__freekids CORBA_sequence_CORBA_float__freekids
#define CORBA_sequence_Bonobo_ZoomLevel_allocbuf CORBA_sequence_CORBA_float_allocbuf
#define CORBA_sequence_Bonobo_ZoomLevel_marshal(x,y,z) CORBA_sequence_CORBA_float_marshal((x),(y),(z))
#define CORBA_sequence_Bonobo_ZoomLevel_demarshal(x,y,z,i) CORBA_sequence_CORBA_float_demarshal((x),(y),(z),(i))
#endif
#if !defined(_Bonobo_ZoomLevelList_defined)
#define _Bonobo_ZoomLevelList_defined 1
typedef CORBA_sequence_Bonobo_ZoomLevel Bonobo_ZoomLevelList;
#define Bonobo_ZoomLevelList_marshal(x,y,z) CORBA_sequence_Bonobo_ZoomLevel_marshal((x),(y),(z))
#define Bonobo_ZoomLevelList_demarshal(x,y,z,i) CORBA_sequence_Bonobo_ZoomLevel_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_Bonobo_ZoomLevelList_0)
#define TC_IMPL_TC_Bonobo_ZoomLevelList_0 'B'
#define TC_IMPL_TC_Bonobo_ZoomLevelList_1 'o'
#define TC_IMPL_TC_Bonobo_ZoomLevelList_2 'n'
#define TC_IMPL_TC_Bonobo_ZoomLevelList_3 'o'
#define TC_IMPL_TC_Bonobo_ZoomLevelList_4 'b'
#define TC_IMPL_TC_Bonobo_ZoomLevelList_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_ZoomLevelList_struct;
#define TC_Bonobo_ZoomLevelList ((CORBA_TypeCode)&TC_Bonobo_ZoomLevelList_struct)
#endif
#define Bonobo_ZoomLevelList__alloc() ((Bonobo_ZoomLevelList *)ORBit_small_alloc (TC_CORBA_sequence_Bonobo_ZoomLevel))
#define Bonobo_ZoomLevelList__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_Bonobo_ZoomLevel,(m),(d))
#define Bonobo_ZoomLevelList_allocbuf(l) ((Bonobo_ZoomLevel*)ORBit_small_allocbuf (TC_CORBA_sequence_Bonobo_ZoomLevel, (l)))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_string)
#define ORBIT_DECL_CORBA_sequence_CORBA_string 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_0 'B'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_1 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_2 'n'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_3 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_4 'b'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_5 'o'
#if !defined(_CORBA_sequence_CORBA_string_defined)
#define _CORBA_sequence_CORBA_string_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; CORBA_string* _buffer; CORBA_boolean _release; } CORBA_sequence_CORBA_string;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_string_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_0 'B'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_1 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_2 'n'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_3 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_4 'b'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_string_struct;
#define TC_CORBA_sequence_CORBA_string ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_string_struct)
#endif
#define CORBA_sequence_CORBA_string__alloc() ((CORBA_sequence_CORBA_string *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_string))
#define CORBA_sequence_CORBA_string__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_string,(m),(d))
#define CORBA_sequence_CORBA_string_allocbuf(l) ((CORBA_string*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_string, (l)))
#define CORBA_sequence_CORBA_string_allocbuf(l) ((CORBA_string*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_string, (l)))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_Bonobo_ZoomLevelName)
#define ORBIT_DECL_CORBA_sequence_Bonobo_ZoomLevelName 1
#define ORBIT_IMPL_CORBA_sequence_Bonobo_ZoomLevelName_0 'B'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_ZoomLevelName_1 'o'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_ZoomLevelName_2 'n'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_ZoomLevelName_3 'o'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_ZoomLevelName_4 'b'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_ZoomLevelName_5 'o'
#if !defined(_CORBA_sequence_Bonobo_ZoomLevelName_defined)
#define _CORBA_sequence_Bonobo_ZoomLevelName_defined 1
typedef CORBA_sequence_CORBA_string CORBA_sequence_Bonobo_ZoomLevelName;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_Bonobo_ZoomLevelName_0)
#define TC_IMPL_TC_CORBA_sequence_Bonobo_ZoomLevelName_0 'B'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_ZoomLevelName_1 'o'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_ZoomLevelName_2 'n'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_ZoomLevelName_3 'o'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_ZoomLevelName_4 'b'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_ZoomLevelName_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_CORBA_sequence_Bonobo_ZoomLevelName_struct;
#define TC_CORBA_sequence_Bonobo_ZoomLevelName ((CORBA_TypeCode)&TC_CORBA_sequence_Bonobo_ZoomLevelName_struct)
#endif
#define CORBA_sequence_Bonobo_ZoomLevelName__alloc CORBA_sequence_CORBA_string__alloc
#define CORBA_sequence_Bonobo_ZoomLevelName__freekids CORBA_sequence_CORBA_string__freekids
#define CORBA_sequence_Bonobo_ZoomLevelName_allocbuf CORBA_sequence_CORBA_string_allocbuf
#define CORBA_sequence_Bonobo_ZoomLevelName_marshal(x,y,z) CORBA_sequence_CORBA_string_marshal((x),(y),(z))
#define CORBA_sequence_Bonobo_ZoomLevelName_demarshal(x,y,z,i) CORBA_sequence_CORBA_string_demarshal((x),(y),(z),(i))
#endif
#if !defined(_Bonobo_ZoomLevelNameList_defined)
#define _Bonobo_ZoomLevelNameList_defined 1
typedef CORBA_sequence_Bonobo_ZoomLevelName Bonobo_ZoomLevelNameList;
#define Bonobo_ZoomLevelNameList_marshal(x,y,z) CORBA_sequence_Bonobo_ZoomLevelName_marshal((x),(y),(z))
#define Bonobo_ZoomLevelNameList_demarshal(x,y,z,i) CORBA_sequence_Bonobo_ZoomLevelName_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_Bonobo_ZoomLevelNameList_0)
#define TC_IMPL_TC_Bonobo_ZoomLevelNameList_0 'B'
#define TC_IMPL_TC_Bonobo_ZoomLevelNameList_1 'o'
#define TC_IMPL_TC_Bonobo_ZoomLevelNameList_2 'n'
#define TC_IMPL_TC_Bonobo_ZoomLevelNameList_3 'o'
#define TC_IMPL_TC_Bonobo_ZoomLevelNameList_4 'b'
#define TC_IMPL_TC_Bonobo_ZoomLevelNameList_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_ZoomLevelNameList_struct;
#define TC_Bonobo_ZoomLevelNameList ((CORBA_TypeCode)&TC_Bonobo_ZoomLevelNameList_struct)
#endif
#define Bonobo_ZoomLevelNameList__alloc() ((Bonobo_ZoomLevelNameList *)ORBit_small_alloc (TC_CORBA_sequence_Bonobo_ZoomLevelName))
#define Bonobo_ZoomLevelNameList__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_Bonobo_ZoomLevelName,(m),(d))
#define Bonobo_ZoomLevelNameList_allocbuf(l) ((Bonobo_ZoomLevelName*)ORBit_small_allocbuf (TC_CORBA_sequence_Bonobo_ZoomLevelName, (l)))
#endif
#if !defined(ORBIT_DECL_Bonobo_ZoomableFrame) && !defined(_Bonobo_ZoomableFrame_defined)
#define ORBIT_DECL_Bonobo_ZoomableFrame 1
#define _Bonobo_ZoomableFrame_defined 1
#define Bonobo_ZoomableFrame__freekids CORBA_Object__freekids
typedef CORBA_Object Bonobo_ZoomableFrame;
extern CORBA_unsigned_long Bonobo_ZoomableFrame__classid;
#if !defined(TC_IMPL_TC_Bonobo_ZoomableFrame_0)
#define TC_IMPL_TC_Bonobo_ZoomableFrame_0 'B'
#define TC_IMPL_TC_Bonobo_ZoomableFrame_1 'o'
#define TC_IMPL_TC_Bonobo_ZoomableFrame_2 'n'
#define TC_IMPL_TC_Bonobo_ZoomableFrame_3 'o'
#define TC_IMPL_TC_Bonobo_ZoomableFrame_4 'b'
#define TC_IMPL_TC_Bonobo_ZoomableFrame_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_ZoomableFrame_struct;
#define TC_Bonobo_ZoomableFrame ((CORBA_TypeCode)&TC_Bonobo_ZoomableFrame_struct)
#endif
#endif
#if !defined(ORBIT_DECL_Bonobo_Zoomable) && !defined(_Bonobo_Zoomable_defined)
#define ORBIT_DECL_Bonobo_Zoomable 1
#define _Bonobo_Zoomable_defined 1
#define Bonobo_Zoomable__freekids CORBA_Object__freekids
typedef CORBA_Object Bonobo_Zoomable;
extern CORBA_unsigned_long Bonobo_Zoomable__classid;
#if !defined(TC_IMPL_TC_Bonobo_Zoomable_0)
#define TC_IMPL_TC_Bonobo_Zoomable_0 'B'
#define TC_IMPL_TC_Bonobo_Zoomable_1 'o'
#define TC_IMPL_TC_Bonobo_Zoomable_2 'n'
#define TC_IMPL_TC_Bonobo_Zoomable_3 'o'
#define TC_IMPL_TC_Bonobo_Zoomable_4 'b'
#define TC_IMPL_TC_Bonobo_Zoomable_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Zoomable_struct;
#define TC_Bonobo_Zoomable ((CORBA_TypeCode)&TC_Bonobo_Zoomable_struct)
#endif
#endif
#if !defined(ORBIT_DECL_Bonobo_ItemContainer) && !defined(_Bonobo_ItemContainer_defined)
#define ORBIT_DECL_Bonobo_ItemContainer 1
#define _Bonobo_ItemContainer_defined 1
#define Bonobo_ItemContainer__freekids CORBA_Object__freekids
typedef CORBA_Object Bonobo_ItemContainer;
extern CORBA_unsigned_long Bonobo_ItemContainer__classid;
#if !defined(TC_IMPL_TC_Bonobo_ItemContainer_0)
#define TC_IMPL_TC_Bonobo_ItemContainer_0 'B'
#define TC_IMPL_TC_Bonobo_ItemContainer_1 'o'
#define TC_IMPL_TC_Bonobo_ItemContainer_2 'n'
#define TC_IMPL_TC_Bonobo_ItemContainer_3 'o'
#define TC_IMPL_TC_Bonobo_ItemContainer_4 'b'
#define TC_IMPL_TC_Bonobo_ItemContainer_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_ItemContainer_struct;
#define TC_Bonobo_ItemContainer ((CORBA_TypeCode)&TC_Bonobo_ItemContainer_struct)
#endif
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_string)
#define ORBIT_DECL_CORBA_sequence_CORBA_string 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_0 'B'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_1 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_2 'n'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_3 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_4 'b'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_5 'o'
#if !defined(_CORBA_sequence_CORBA_string_defined)
#define _CORBA_sequence_CORBA_string_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; CORBA_string* _buffer; CORBA_boolean _release; } CORBA_sequence_CORBA_string;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_string_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_0 'B'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_1 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_2 'n'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_3 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_4 'b'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_string_struct;
#define TC_CORBA_sequence_CORBA_string ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_string_struct)
#endif
#define CORBA_sequence_CORBA_string__alloc() ((CORBA_sequence_CORBA_string *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_string))
#define CORBA_sequence_CORBA_string__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_string,(m),(d))
#define CORBA_sequence_CORBA_string_allocbuf(l) ((CORBA_string*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_string, (l)))
#define CORBA_sequence_CORBA_string_allocbuf(l) ((CORBA_string*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_string, (l)))
#endif
#if !defined(_Bonobo_ItemContainer_ObjectNames_defined)
#define _Bonobo_ItemContainer_ObjectNames_defined 1
typedef CORBA_sequence_CORBA_string Bonobo_ItemContainer_ObjectNames;
#define Bonobo_ItemContainer_ObjectNames_marshal(x,y,z) CORBA_sequence_CORBA_string_marshal((x),(y),(z))
#define Bonobo_ItemContainer_ObjectNames_demarshal(x,y,z,i) CORBA_sequence_CORBA_string_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_Bonobo_ItemContainer_ObjectNames_0)
#define TC_IMPL_TC_Bonobo_ItemContainer_ObjectNames_0 'B'
#define TC_IMPL_TC_Bonobo_ItemContainer_ObjectNames_1 'o'
#define TC_IMPL_TC_Bonobo_ItemContainer_ObjectNames_2 'n'
#define TC_IMPL_TC_Bonobo_ItemContainer_ObjectNames_3 'o'
#define TC_IMPL_TC_Bonobo_ItemContainer_ObjectNames_4 'b'
#define TC_IMPL_TC_Bonobo_ItemContainer_ObjectNames_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_ItemContainer_ObjectNames_struct;
#define TC_Bonobo_ItemContainer_ObjectNames ((CORBA_TypeCode)&TC_Bonobo_ItemContainer_ObjectNames_struct)
#endif
#define Bonobo_ItemContainer_ObjectNames__alloc() ((Bonobo_ItemContainer_ObjectNames *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_string))
#define Bonobo_ItemContainer_ObjectNames__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_string,(m),(d))
#define Bonobo_ItemContainer_ObjectNames_allocbuf(l) ((CORBA_string*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_string, (l)))
#endif
#undef ex_Bonobo_ItemContainer_NotFound
#define ex_Bonobo_ItemContainer_NotFound "IDL:Bonobo/ItemContainer/NotFound:1.0"
#if !defined(_Bonobo_ItemContainer_NotFound_defined)
#define _Bonobo_ItemContainer_NotFound_defined 1
typedef struct Bonobo_ItemContainer_NotFound_type Bonobo_ItemContainer_NotFound;
struct Bonobo_ItemContainer_NotFound_type {
int dummy;
};

#if !defined(TC_IMPL_TC_Bonobo_ItemContainer_NotFound_0)
#define TC_IMPL_TC_Bonobo_ItemContainer_NotFound_0 'B'
#define TC_IMPL_TC_Bonobo_ItemContainer_NotFound_1 'o'
#define TC_IMPL_TC_Bonobo_ItemContainer_NotFound_2 'n'
#define TC_IMPL_TC_Bonobo_ItemContainer_NotFound_3 'o'
#define TC_IMPL_TC_Bonobo_ItemContainer_NotFound_4 'b'
#define TC_IMPL_TC_Bonobo_ItemContainer_NotFound_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_ItemContainer_NotFound_struct;
#define TC_Bonobo_ItemContainer_NotFound ((CORBA_TypeCode)&TC_Bonobo_ItemContainer_NotFound_struct)
#endif
#define Bonobo_ItemContainer_NotFound__alloc() ((Bonobo_ItemContainer_NotFound *)ORBit_small_alloc (TC_Bonobo_ItemContainer_NotFound))
#define Bonobo_ItemContainer_NotFound__freekids(m,d) ORBit_small_freekids (TC_Bonobo_ItemContainer_NotFound,(m),(d))
#endif
#undef ex_Bonobo_ItemContainer_SyntaxError
#define ex_Bonobo_ItemContainer_SyntaxError "IDL:Bonobo/ItemContainer/SyntaxError:1.0"
#if !defined(_Bonobo_ItemContainer_SyntaxError_defined)
#define _Bonobo_ItemContainer_SyntaxError_defined 1
typedef struct Bonobo_ItemContainer_SyntaxError_type Bonobo_ItemContainer_SyntaxError;
struct Bonobo_ItemContainer_SyntaxError_type {
int dummy;
};

#if !defined(TC_IMPL_TC_Bonobo_ItemContainer_SyntaxError_0)
#define TC_IMPL_TC_Bonobo_ItemContainer_SyntaxError_0 'B'
#define TC_IMPL_TC_Bonobo_ItemContainer_SyntaxError_1 'o'
#define TC_IMPL_TC_Bonobo_ItemContainer_SyntaxError_2 'n'
#define TC_IMPL_TC_Bonobo_ItemContainer_SyntaxError_3 'o'
#define TC_IMPL_TC_Bonobo_ItemContainer_SyntaxError_4 'b'
#define TC_IMPL_TC_Bonobo_ItemContainer_SyntaxError_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_ItemContainer_SyntaxError_struct;
#define TC_Bonobo_ItemContainer_SyntaxError ((CORBA_TypeCode)&TC_Bonobo_ItemContainer_SyntaxError_struct)
#endif
#define Bonobo_ItemContainer_SyntaxError__alloc() ((Bonobo_ItemContainer_SyntaxError *)ORBit_small_alloc (TC_Bonobo_ItemContainer_SyntaxError))
#define Bonobo_ItemContainer_SyntaxError__freekids(m,d) ORBit_small_freekids (TC_Bonobo_ItemContainer_SyntaxError,(m),(d))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_octet)
#define ORBIT_DECL_CORBA_sequence_CORBA_octet 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_0 'B'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_1 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_2 'n'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_3 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_4 'b'
#define ORBIT_IMPL_CORBA_sequence_CORBA_octet_5 'o'
#if !defined(_CORBA_sequence_CORBA_octet_defined)
#define _CORBA_sequence_CORBA_octet_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; CORBA_octet* _buffer; CORBA_boolean _release; } CORBA_sequence_CORBA_octet;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_octet_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_0 'B'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_1 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_2 'n'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_3 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_4 'b'
#define TC_IMPL_TC_CORBA_sequence_CORBA_octet_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_octet_struct;
#define TC_CORBA_sequence_CORBA_octet ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_octet_struct)
#endif
#define CORBA_sequence_CORBA_octet__alloc() ((CORBA_sequence_CORBA_octet *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_octet))
#define CORBA_sequence_CORBA_octet__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_octet,(m),(d))
#define CORBA_sequence_CORBA_octet_allocbuf(l) ((CORBA_octet*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_octet, (l)))
#define CORBA_sequence_CORBA_octet_allocbuf(l) ((CORBA_octet*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_octet, (l)))
#endif
#if !defined(_Bonobo_Canvas_pixbuf_defined)
#define _Bonobo_Canvas_pixbuf_defined 1
typedef CORBA_sequence_CORBA_octet Bonobo_Canvas_pixbuf;
#define Bonobo_Canvas_pixbuf_marshal(x,y,z) CORBA_sequence_CORBA_octet_marshal((x),(y),(z))
#define Bonobo_Canvas_pixbuf_demarshal(x,y,z,i) CORBA_sequence_CORBA_octet_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_Bonobo_Canvas_pixbuf_0)
#define TC_IMPL_TC_Bonobo_Canvas_pixbuf_0 'B'
#define TC_IMPL_TC_Bonobo_Canvas_pixbuf_1 'o'
#define TC_IMPL_TC_Bonobo_Canvas_pixbuf_2 'n'
#define TC_IMPL_TC_Bonobo_Canvas_pixbuf_3 'o'
#define TC_IMPL_TC_Bonobo_Canvas_pixbuf_4 'b'
#define TC_IMPL_TC_Bonobo_Canvas_pixbuf_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Canvas_pixbuf_struct;
#define TC_Bonobo_Canvas_pixbuf ((CORBA_TypeCode)&TC_Bonobo_Canvas_pixbuf_struct)
#endif
#define Bonobo_Canvas_pixbuf__alloc() ((Bonobo_Canvas_pixbuf *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_octet))
#define Bonobo_Canvas_pixbuf__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_octet,(m),(d))
#define Bonobo_Canvas_pixbuf_allocbuf(l) ((CORBA_octet*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_octet, (l)))
#endif
#if !defined(_Bonobo_Canvas_int32_defined)
#define _Bonobo_Canvas_int32_defined 1
typedef CORBA_long Bonobo_Canvas_int32;
#define Bonobo_Canvas_int32_marshal(x,y,z) CORBA_long_marshal((x),(y),(z))
#define Bonobo_Canvas_int32_demarshal(x,y,z,i) CORBA_long_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_Bonobo_Canvas_int32_0)
#define TC_IMPL_TC_Bonobo_Canvas_int32_0 'B'
#define TC_IMPL_TC_Bonobo_Canvas_int32_1 'o'
#define TC_IMPL_TC_Bonobo_Canvas_int32_2 'n'
#define TC_IMPL_TC_Bonobo_Canvas_int32_3 'o'
#define TC_IMPL_TC_Bonobo_Canvas_int32_4 'b'
#define TC_IMPL_TC_Bonobo_Canvas_int32_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Canvas_int32_struct;
#define TC_Bonobo_Canvas_int32 ((CORBA_TypeCode)&TC_Bonobo_Canvas_int32_struct)
#endif
#define Bonobo_Canvas_int32__alloc() ((Bonobo_Canvas_int32 *)ORBit_small_alloc (TC_CORBA_long))
#define Bonobo_Canvas_int32__freekids(m,d) ORBit_small_freekids (TC_CORBA_long,(m),(d))
#endif
#if !defined(_Bonobo_Canvas_IRect_defined)
#define _Bonobo_Canvas_IRect_defined 1
typedef struct Bonobo_Canvas_IRect_type Bonobo_Canvas_IRect;
struct Bonobo_Canvas_IRect_type {
CORBA_long x0;
CORBA_long y0;
CORBA_long x1;
CORBA_long y1;
};

#if !defined(TC_IMPL_TC_Bonobo_Canvas_IRect_0)
#define TC_IMPL_TC_Bonobo_Canvas_IRect_0 'B'
#define TC_IMPL_TC_Bonobo_Canvas_IRect_1 'o'
#define TC_IMPL_TC_Bonobo_Canvas_IRect_2 'n'
#define TC_IMPL_TC_Bonobo_Canvas_IRect_3 'o'
#define TC_IMPL_TC_Bonobo_Canvas_IRect_4 'b'
#define TC_IMPL_TC_Bonobo_Canvas_IRect_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Canvas_IRect_struct;
#define TC_Bonobo_Canvas_IRect ((CORBA_TypeCode)&TC_Bonobo_Canvas_IRect_struct)
#endif
#define Bonobo_Canvas_IRect__alloc() ((Bonobo_Canvas_IRect *)ORBit_small_alloc (TC_Bonobo_Canvas_IRect))
#define Bonobo_Canvas_IRect__freekids(m,d) ORBit_small_freekids (TC_Bonobo_Canvas_IRect,(m),(d))
#endif
#if !defined(_Bonobo_Canvas_DRect_defined)
#define _Bonobo_Canvas_DRect_defined 1
typedef struct Bonobo_Canvas_DRect_type Bonobo_Canvas_DRect;
struct Bonobo_Canvas_DRect_type {
CORBA_double x0;
CORBA_double y0;
CORBA_double x1;
CORBA_double y1;
};

#if !defined(TC_IMPL_TC_Bonobo_Canvas_DRect_0)
#define TC_IMPL_TC_Bonobo_Canvas_DRect_0 'B'
#define TC_IMPL_TC_Bonobo_Canvas_DRect_1 'o'
#define TC_IMPL_TC_Bonobo_Canvas_DRect_2 'n'
#define TC_IMPL_TC_Bonobo_Canvas_DRect_3 'o'
#define TC_IMPL_TC_Bonobo_Canvas_DRect_4 'b'
#define TC_IMPL_TC_Bonobo_Canvas_DRect_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Canvas_DRect_struct;
#define TC_Bonobo_Canvas_DRect ((CORBA_TypeCode)&TC_Bonobo_Canvas_DRect_struct)
#endif
#define Bonobo_Canvas_DRect__alloc() ((Bonobo_Canvas_DRect *)ORBit_small_alloc (TC_Bonobo_Canvas_DRect))
#define Bonobo_Canvas_DRect__freekids(m,d) ORBit_small_freekids (TC_Bonobo_Canvas_DRect,(m),(d))
#endif
#ifndef Bonobo_Canvas_IS_BG
#define Bonobo_Canvas_IS_BG 1
#endif /* !Bonobo_Canvas_IS_BG */

#ifndef Bonobo_Canvas_IS_BUF
#define Bonobo_Canvas_IS_BUF 2
#endif /* !Bonobo_Canvas_IS_BUF */

#if !defined(_Bonobo_Canvas_affine_defined)
#define _Bonobo_Canvas_affine_defined 1
typedef CORBA_double Bonobo_Canvas_affine[6];
typedef CORBA_double Bonobo_Canvas_affine_slice;
#if !defined(TC_IMPL_TC_Bonobo_Canvas_affine_0)
#define TC_IMPL_TC_Bonobo_Canvas_affine_0 'B'
#define TC_IMPL_TC_Bonobo_Canvas_affine_1 'o'
#define TC_IMPL_TC_Bonobo_Canvas_affine_2 'n'
#define TC_IMPL_TC_Bonobo_Canvas_affine_3 'o'
#define TC_IMPL_TC_Bonobo_Canvas_affine_4 'b'
#define TC_IMPL_TC_Bonobo_Canvas_affine_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Canvas_affine_struct;
#define TC_Bonobo_Canvas_affine ((CORBA_TypeCode)&TC_Bonobo_Canvas_affine_struct)
#endif
#define Bonobo_Canvas_affine__alloc() ((Bonobo_Canvas_affine_slice *)ORBit_small_alloc (TC_Bonobo_Canvas_affine))
#define Bonobo_Canvas_affine__freekids(m,d) ORBit_small_freekids (TC_Bonobo_Canvas_affine,(m),(d))
#endif
#if !defined(_Bonobo_Canvas_Buf_defined)
#define _Bonobo_Canvas_Buf_defined 1
typedef struct Bonobo_Canvas_Buf_type Bonobo_Canvas_Buf;
struct Bonobo_Canvas_Buf_type {
Bonobo_Canvas_pixbuf rgb_buf;
CORBA_long row_stride;
Bonobo_Canvas_IRect rect;
Bonobo_Canvas_int32 bg_color;
CORBA_short flags;
};

#if !defined(TC_IMPL_TC_Bonobo_Canvas_Buf_0)
#define TC_IMPL_TC_Bonobo_Canvas_Buf_0 'B'
#define TC_IMPL_TC_Bonobo_Canvas_Buf_1 'o'
#define TC_IMPL_TC_Bonobo_Canvas_Buf_2 'n'
#define TC_IMPL_TC_Bonobo_Canvas_Buf_3 'o'
#define TC_IMPL_TC_Bonobo_Canvas_Buf_4 'b'
#define TC_IMPL_TC_Bonobo_Canvas_Buf_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Canvas_Buf_struct;
#define TC_Bonobo_Canvas_Buf ((CORBA_TypeCode)&TC_Bonobo_Canvas_Buf_struct)
#endif
#define Bonobo_Canvas_Buf__alloc() ((Bonobo_Canvas_Buf *)ORBit_small_alloc (TC_Bonobo_Canvas_Buf))
#define Bonobo_Canvas_Buf__freekids(m,d) ORBit_small_freekids (TC_Bonobo_Canvas_Buf,(m),(d))
#endif
#if !defined(_Bonobo_Canvas_Point_defined)
#define _Bonobo_Canvas_Point_defined 1
typedef struct Bonobo_Canvas_Point_type Bonobo_Canvas_Point;
struct Bonobo_Canvas_Point_type {
CORBA_double x;
CORBA_double y;
};

#if !defined(TC_IMPL_TC_Bonobo_Canvas_Point_0)
#define TC_IMPL_TC_Bonobo_Canvas_Point_0 'B'
#define TC_IMPL_TC_Bonobo_Canvas_Point_1 'o'
#define TC_IMPL_TC_Bonobo_Canvas_Point_2 'n'
#define TC_IMPL_TC_Bonobo_Canvas_Point_3 'o'
#define TC_IMPL_TC_Bonobo_Canvas_Point_4 'b'
#define TC_IMPL_TC_Bonobo_Canvas_Point_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Canvas_Point_struct;
#define TC_Bonobo_Canvas_Point ((CORBA_TypeCode)&TC_Bonobo_Canvas_Point_struct)
#endif
#define Bonobo_Canvas_Point__alloc() ((Bonobo_Canvas_Point *)ORBit_small_alloc (TC_Bonobo_Canvas_Point))
#define Bonobo_Canvas_Point__freekids(m,d) ORBit_small_freekids (TC_Bonobo_Canvas_Point,(m),(d))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_Bonobo_Canvas_Point)
#define ORBIT_DECL_CORBA_sequence_Bonobo_Canvas_Point 1
#define ORBIT_IMPL_CORBA_sequence_Bonobo_Canvas_Point_0 'B'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_Canvas_Point_1 'o'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_Canvas_Point_2 'n'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_Canvas_Point_3 'o'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_Canvas_Point_4 'b'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_Canvas_Point_5 'o'
#if !defined(_CORBA_sequence_Bonobo_Canvas_Point_defined)
#define _CORBA_sequence_Bonobo_Canvas_Point_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; Bonobo_Canvas_Point* _buffer; CORBA_boolean _release; } CORBA_sequence_Bonobo_Canvas_Point;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_Bonobo_Canvas_Point_0)
#define TC_IMPL_TC_CORBA_sequence_Bonobo_Canvas_Point_0 'B'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_Canvas_Point_1 'o'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_Canvas_Point_2 'n'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_Canvas_Point_3 'o'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_Canvas_Point_4 'b'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_Canvas_Point_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_CORBA_sequence_Bonobo_Canvas_Point_struct;
#define TC_CORBA_sequence_Bonobo_Canvas_Point ((CORBA_TypeCode)&TC_CORBA_sequence_Bonobo_Canvas_Point_struct)
#endif
#define CORBA_sequence_Bonobo_Canvas_Point__alloc() ((CORBA_sequence_Bonobo_Canvas_Point *)ORBit_small_alloc (TC_CORBA_sequence_Bonobo_Canvas_Point))
#define CORBA_sequence_Bonobo_Canvas_Point__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_Bonobo_Canvas_Point,(m),(d))
#define CORBA_sequence_Bonobo_Canvas_Point_allocbuf(l) ((Bonobo_Canvas_Point*)ORBit_small_allocbuf (TC_CORBA_sequence_Bonobo_Canvas_Point, (l)))
#define CORBA_sequence_Bonobo_Canvas_Point_allocbuf(l) ((Bonobo_Canvas_Point*)ORBit_small_allocbuf (TC_CORBA_sequence_Bonobo_Canvas_Point, (l)))
#endif
#if !defined(_Bonobo_Canvas_Points_defined)
#define _Bonobo_Canvas_Points_defined 1
typedef CORBA_sequence_Bonobo_Canvas_Point Bonobo_Canvas_Points;
#define Bonobo_Canvas_Points_marshal(x,y,z) CORBA_sequence_Bonobo_Canvas_Point_marshal((x),(y),(z))
#define Bonobo_Canvas_Points_demarshal(x,y,z,i) CORBA_sequence_Bonobo_Canvas_Point_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_Bonobo_Canvas_Points_0)
#define TC_IMPL_TC_Bonobo_Canvas_Points_0 'B'
#define TC_IMPL_TC_Bonobo_Canvas_Points_1 'o'
#define TC_IMPL_TC_Bonobo_Canvas_Points_2 'n'
#define TC_IMPL_TC_Bonobo_Canvas_Points_3 'o'
#define TC_IMPL_TC_Bonobo_Canvas_Points_4 'b'
#define TC_IMPL_TC_Bonobo_Canvas_Points_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Canvas_Points_struct;
#define TC_Bonobo_Canvas_Points ((CORBA_TypeCode)&TC_Bonobo_Canvas_Points_struct)
#endif
#define Bonobo_Canvas_Points__alloc() ((Bonobo_Canvas_Points *)ORBit_small_alloc (TC_CORBA_sequence_Bonobo_Canvas_Point))
#define Bonobo_Canvas_Points__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_Bonobo_Canvas_Point,(m),(d))
#define Bonobo_Canvas_Points_allocbuf(l) ((Bonobo_Canvas_Point*)ORBit_small_allocbuf (TC_CORBA_sequence_Bonobo_Canvas_Point, (l)))
#endif
#if !defined(_Bonobo_Canvas_SVPSegment_defined)
#define _Bonobo_Canvas_SVPSegment_defined 1
typedef struct Bonobo_Canvas_SVPSegment_type Bonobo_Canvas_SVPSegment;
struct Bonobo_Canvas_SVPSegment_type {
CORBA_boolean up;
Bonobo_Canvas_DRect bbox;
Bonobo_Canvas_Points points;
};

#if !defined(TC_IMPL_TC_Bonobo_Canvas_SVPSegment_0)
#define TC_IMPL_TC_Bonobo_Canvas_SVPSegment_0 'B'
#define TC_IMPL_TC_Bonobo_Canvas_SVPSegment_1 'o'
#define TC_IMPL_TC_Bonobo_Canvas_SVPSegment_2 'n'
#define TC_IMPL_TC_Bonobo_Canvas_SVPSegment_3 'o'
#define TC_IMPL_TC_Bonobo_Canvas_SVPSegment_4 'b'
#define TC_IMPL_TC_Bonobo_Canvas_SVPSegment_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Canvas_SVPSegment_struct;
#define TC_Bonobo_Canvas_SVPSegment ((CORBA_TypeCode)&TC_Bonobo_Canvas_SVPSegment_struct)
#endif
#define Bonobo_Canvas_SVPSegment__alloc() ((Bonobo_Canvas_SVPSegment *)ORBit_small_alloc (TC_Bonobo_Canvas_SVPSegment))
#define Bonobo_Canvas_SVPSegment__freekids(m,d) ORBit_small_freekids (TC_Bonobo_Canvas_SVPSegment,(m),(d))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_Bonobo_Canvas_SVPSegment)
#define ORBIT_DECL_CORBA_sequence_Bonobo_Canvas_SVPSegment 1
#define ORBIT_IMPL_CORBA_sequence_Bonobo_Canvas_SVPSegment_0 'B'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_Canvas_SVPSegment_1 'o'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_Canvas_SVPSegment_2 'n'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_Canvas_SVPSegment_3 'o'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_Canvas_SVPSegment_4 'b'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_Canvas_SVPSegment_5 'o'
#if !defined(_CORBA_sequence_Bonobo_Canvas_SVPSegment_defined)
#define _CORBA_sequence_Bonobo_Canvas_SVPSegment_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; Bonobo_Canvas_SVPSegment* _buffer; CORBA_boolean _release; } CORBA_sequence_Bonobo_Canvas_SVPSegment;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_Bonobo_Canvas_SVPSegment_0)
#define TC_IMPL_TC_CORBA_sequence_Bonobo_Canvas_SVPSegment_0 'B'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_Canvas_SVPSegment_1 'o'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_Canvas_SVPSegment_2 'n'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_Canvas_SVPSegment_3 'o'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_Canvas_SVPSegment_4 'b'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_Canvas_SVPSegment_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_CORBA_sequence_Bonobo_Canvas_SVPSegment_struct;
#define TC_CORBA_sequence_Bonobo_Canvas_SVPSegment ((CORBA_TypeCode)&TC_CORBA_sequence_Bonobo_Canvas_SVPSegment_struct)
#endif
#define CORBA_sequence_Bonobo_Canvas_SVPSegment__alloc() ((CORBA_sequence_Bonobo_Canvas_SVPSegment *)ORBit_small_alloc (TC_CORBA_sequence_Bonobo_Canvas_SVPSegment))
#define CORBA_sequence_Bonobo_Canvas_SVPSegment__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_Bonobo_Canvas_SVPSegment,(m),(d))
#define CORBA_sequence_Bonobo_Canvas_SVPSegment_allocbuf(l) ((Bonobo_Canvas_SVPSegment*)ORBit_small_allocbuf (TC_CORBA_sequence_Bonobo_Canvas_SVPSegment, (l)))
#define CORBA_sequence_Bonobo_Canvas_SVPSegment_allocbuf(l) ((Bonobo_Canvas_SVPSegment*)ORBit_small_allocbuf (TC_CORBA_sequence_Bonobo_Canvas_SVPSegment, (l)))
#endif
#if !defined(_Bonobo_Canvas_SVP_defined)
#define _Bonobo_Canvas_SVP_defined 1
typedef CORBA_sequence_Bonobo_Canvas_SVPSegment Bonobo_Canvas_SVP;
#define Bonobo_Canvas_SVP_marshal(x,y,z) CORBA_sequence_Bonobo_Canvas_SVPSegment_marshal((x),(y),(z))
#define Bonobo_Canvas_SVP_demarshal(x,y,z,i) CORBA_sequence_Bonobo_Canvas_SVPSegment_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_Bonobo_Canvas_SVP_0)
#define TC_IMPL_TC_Bonobo_Canvas_SVP_0 'B'
#define TC_IMPL_TC_Bonobo_Canvas_SVP_1 'o'
#define TC_IMPL_TC_Bonobo_Canvas_SVP_2 'n'
#define TC_IMPL_TC_Bonobo_Canvas_SVP_3 'o'
#define TC_IMPL_TC_Bonobo_Canvas_SVP_4 'b'
#define TC_IMPL_TC_Bonobo_Canvas_SVP_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Canvas_SVP_struct;
#define TC_Bonobo_Canvas_SVP ((CORBA_TypeCode)&TC_Bonobo_Canvas_SVP_struct)
#endif
#define Bonobo_Canvas_SVP__alloc() ((Bonobo_Canvas_SVP *)ORBit_small_alloc (TC_CORBA_sequence_Bonobo_Canvas_SVPSegment))
#define Bonobo_Canvas_SVP__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_Bonobo_Canvas_SVPSegment,(m),(d))
#define Bonobo_Canvas_SVP_allocbuf(l) ((Bonobo_Canvas_SVPSegment*)ORBit_small_allocbuf (TC_CORBA_sequence_Bonobo_Canvas_SVPSegment, (l)))
#endif
#if !defined(_Bonobo_Canvas_ArtUTA_defined)
#define _Bonobo_Canvas_ArtUTA_defined 1
typedef struct Bonobo_Canvas_ArtUTA_type Bonobo_Canvas_ArtUTA;
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_long)
#define ORBIT_DECL_CORBA_sequence_CORBA_long 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_long_0 'B'
#define ORBIT_IMPL_CORBA_sequence_CORBA_long_1 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_long_2 'n'
#define ORBIT_IMPL_CORBA_sequence_CORBA_long_3 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_long_4 'b'
#define ORBIT_IMPL_CORBA_sequence_CORBA_long_5 'o'
#if !defined(_CORBA_sequence_CORBA_long_defined)
#define _CORBA_sequence_CORBA_long_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; CORBA_long* _buffer; CORBA_boolean _release; } CORBA_sequence_CORBA_long;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_long_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_long_0 'B'
#define TC_IMPL_TC_CORBA_sequence_CORBA_long_1 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_long_2 'n'
#define TC_IMPL_TC_CORBA_sequence_CORBA_long_3 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_long_4 'b'
#define TC_IMPL_TC_CORBA_sequence_CORBA_long_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_long_struct;
#define TC_CORBA_sequence_CORBA_long ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_long_struct)
#endif
#define CORBA_sequence_CORBA_long__alloc() ((CORBA_sequence_CORBA_long *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_long))
#define CORBA_sequence_CORBA_long__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_long,(m),(d))
#define CORBA_sequence_CORBA_long_allocbuf(l) ((CORBA_long*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_long, (l)))
#define CORBA_sequence_CORBA_long_allocbuf(l) ((CORBA_long*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_long, (l)))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_Bonobo_Canvas_int32)
#define ORBIT_DECL_CORBA_sequence_Bonobo_Canvas_int32 1
#define ORBIT_IMPL_CORBA_sequence_Bonobo_Canvas_int32_0 'B'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_Canvas_int32_1 'o'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_Canvas_int32_2 'n'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_Canvas_int32_3 'o'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_Canvas_int32_4 'b'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_Canvas_int32_5 'o'
#if !defined(_CORBA_sequence_Bonobo_Canvas_int32_defined)
#define _CORBA_sequence_Bonobo_Canvas_int32_defined 1
typedef CORBA_sequence_CORBA_long CORBA_sequence_Bonobo_Canvas_int32;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_Bonobo_Canvas_int32_0)
#define TC_IMPL_TC_CORBA_sequence_Bonobo_Canvas_int32_0 'B'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_Canvas_int32_1 'o'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_Canvas_int32_2 'n'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_Canvas_int32_3 'o'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_Canvas_int32_4 'b'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_Canvas_int32_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_CORBA_sequence_Bonobo_Canvas_int32_struct;
#define TC_CORBA_sequence_Bonobo_Canvas_int32 ((CORBA_TypeCode)&TC_CORBA_sequence_Bonobo_Canvas_int32_struct)
#endif
#define CORBA_sequence_Bonobo_Canvas_int32__alloc CORBA_sequence_CORBA_long__alloc
#define CORBA_sequence_Bonobo_Canvas_int32__freekids CORBA_sequence_CORBA_long__freekids
#define CORBA_sequence_Bonobo_Canvas_int32_allocbuf CORBA_sequence_CORBA_long_allocbuf
#define CORBA_sequence_Bonobo_Canvas_int32_marshal(x,y,z) CORBA_sequence_CORBA_long_marshal((x),(y),(z))
#define CORBA_sequence_Bonobo_Canvas_int32_demarshal(x,y,z,i) CORBA_sequence_CORBA_long_demarshal((x),(y),(z),(i))
#endif
struct Bonobo_Canvas_ArtUTA_type {
CORBA_short x0;
CORBA_short y0;
CORBA_short width;
CORBA_short height;
CORBA_sequence_Bonobo_Canvas_int32 utiles;
};

#if !defined(TC_IMPL_TC_Bonobo_Canvas_ArtUTA_0)
#define TC_IMPL_TC_Bonobo_Canvas_ArtUTA_0 'B'
#define TC_IMPL_TC_Bonobo_Canvas_ArtUTA_1 'o'
#define TC_IMPL_TC_Bonobo_Canvas_ArtUTA_2 'n'
#define TC_IMPL_TC_Bonobo_Canvas_ArtUTA_3 'o'
#define TC_IMPL_TC_Bonobo_Canvas_ArtUTA_4 'b'
#define TC_IMPL_TC_Bonobo_Canvas_ArtUTA_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Canvas_ArtUTA_struct;
#define TC_Bonobo_Canvas_ArtUTA ((CORBA_TypeCode)&TC_Bonobo_Canvas_ArtUTA_struct)
#endif
#define Bonobo_Canvas_ArtUTA__alloc() ((Bonobo_Canvas_ArtUTA *)ORBit_small_alloc (TC_Bonobo_Canvas_ArtUTA))
#define Bonobo_Canvas_ArtUTA__freekids(m,d) ORBit_small_freekids (TC_Bonobo_Canvas_ArtUTA,(m),(d))
#endif
#if !defined(_Bonobo_Canvas_State_defined)
#define _Bonobo_Canvas_State_defined 1
typedef struct Bonobo_Canvas_State_type Bonobo_Canvas_State;
struct Bonobo_Canvas_State_type {
Bonobo_Canvas_affine item_aff;
CORBA_double pixels_per_unit;
CORBA_double canvas_scroll_x1;
CORBA_double canvas_scroll_y1;
CORBA_long zoom_xofs;
CORBA_long zoom_yofs;
CORBA_long xoffset;
CORBA_long yoffset;
};

#if !defined(TC_IMPL_TC_Bonobo_Canvas_State_0)
#define TC_IMPL_TC_Bonobo_Canvas_State_0 'B'
#define TC_IMPL_TC_Bonobo_Canvas_State_1 'o'
#define TC_IMPL_TC_Bonobo_Canvas_State_2 'n'
#define TC_IMPL_TC_Bonobo_Canvas_State_3 'o'
#define TC_IMPL_TC_Bonobo_Canvas_State_4 'b'
#define TC_IMPL_TC_Bonobo_Canvas_State_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Canvas_State_struct;
#define TC_Bonobo_Canvas_State ((CORBA_TypeCode)&TC_Bonobo_Canvas_State_struct)
#endif
#define Bonobo_Canvas_State__alloc() ((Bonobo_Canvas_State *)ORBit_small_alloc (TC_Bonobo_Canvas_State))
#define Bonobo_Canvas_State__freekids(m,d) ORBit_small_freekids (TC_Bonobo_Canvas_State,(m),(d))
#endif
#if !defined(ORBIT_DECL_Bonobo_Canvas_Component) && !defined(_Bonobo_Canvas_Component_defined)
#define ORBIT_DECL_Bonobo_Canvas_Component 1
#define _Bonobo_Canvas_Component_defined 1
#define Bonobo_Canvas_Component__freekids CORBA_Object__freekids
typedef CORBA_Object Bonobo_Canvas_Component;
extern CORBA_unsigned_long Bonobo_Canvas_Component__classid;
#if !defined(TC_IMPL_TC_Bonobo_Canvas_Component_0)
#define TC_IMPL_TC_Bonobo_Canvas_Component_0 'B'
#define TC_IMPL_TC_Bonobo_Canvas_Component_1 'o'
#define TC_IMPL_TC_Bonobo_Canvas_Component_2 'n'
#define TC_IMPL_TC_Bonobo_Canvas_Component_3 'o'
#define TC_IMPL_TC_Bonobo_Canvas_Component_4 'b'
#define TC_IMPL_TC_Bonobo_Canvas_Component_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Canvas_Component_struct;
#define TC_Bonobo_Canvas_Component ((CORBA_TypeCode)&TC_Bonobo_Canvas_Component_struct)
#endif
#endif
#if !defined(ORBIT_DECL_Bonobo_Canvas_ComponentProxy) && !defined(_Bonobo_Canvas_ComponentProxy_defined)
#define ORBIT_DECL_Bonobo_Canvas_ComponentProxy 1
#define _Bonobo_Canvas_ComponentProxy_defined 1
#define Bonobo_Canvas_ComponentProxy__freekids CORBA_Object__freekids
typedef CORBA_Object Bonobo_Canvas_ComponentProxy;
extern CORBA_unsigned_long Bonobo_Canvas_ComponentProxy__classid;
#if !defined(TC_IMPL_TC_Bonobo_Canvas_ComponentProxy_0)
#define TC_IMPL_TC_Bonobo_Canvas_ComponentProxy_0 'B'
#define TC_IMPL_TC_Bonobo_Canvas_ComponentProxy_1 'o'
#define TC_IMPL_TC_Bonobo_Canvas_ComponentProxy_2 'n'
#define TC_IMPL_TC_Bonobo_Canvas_ComponentProxy_3 'o'
#define TC_IMPL_TC_Bonobo_Canvas_ComponentProxy_4 'b'
#define TC_IMPL_TC_Bonobo_Canvas_ComponentProxy_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Canvas_ComponentProxy_struct;
#define TC_Bonobo_Canvas_ComponentProxy ((CORBA_TypeCode)&TC_Bonobo_Canvas_ComponentProxy_struct)
#endif
#endif
#if !defined(ORBIT_DECL_Bonobo_ControlFactory) && !defined(_Bonobo_ControlFactory_defined)
#define ORBIT_DECL_Bonobo_ControlFactory 1
#define _Bonobo_ControlFactory_defined 1
#define Bonobo_ControlFactory__freekids CORBA_Object__freekids
typedef CORBA_Object Bonobo_ControlFactory;
extern CORBA_unsigned_long Bonobo_ControlFactory__classid;
#if !defined(TC_IMPL_TC_Bonobo_ControlFactory_0)
#define TC_IMPL_TC_Bonobo_ControlFactory_0 'B'
#define TC_IMPL_TC_Bonobo_ControlFactory_1 'o'
#define TC_IMPL_TC_Bonobo_ControlFactory_2 'n'
#define TC_IMPL_TC_Bonobo_ControlFactory_3 'o'
#define TC_IMPL_TC_Bonobo_ControlFactory_4 'b'
#define TC_IMPL_TC_Bonobo_ControlFactory_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_ControlFactory_struct;
#define TC_Bonobo_ControlFactory ((CORBA_TypeCode)&TC_Bonobo_ControlFactory_struct)
#endif
#endif
#if !defined(ORBIT_DECL_Bonobo_CanvasComponentFactory) && !defined(_Bonobo_CanvasComponentFactory_defined)
#define ORBIT_DECL_Bonobo_CanvasComponentFactory 1
#define _Bonobo_CanvasComponentFactory_defined 1
#define Bonobo_CanvasComponentFactory__freekids CORBA_Object__freekids
typedef CORBA_Object Bonobo_CanvasComponentFactory;
extern CORBA_unsigned_long Bonobo_CanvasComponentFactory__classid;
#if !defined(TC_IMPL_TC_Bonobo_CanvasComponentFactory_0)
#define TC_IMPL_TC_Bonobo_CanvasComponentFactory_0 'B'
#define TC_IMPL_TC_Bonobo_CanvasComponentFactory_1 'o'
#define TC_IMPL_TC_Bonobo_CanvasComponentFactory_2 'n'
#define TC_IMPL_TC_Bonobo_CanvasComponentFactory_3 'o'
#define TC_IMPL_TC_Bonobo_CanvasComponentFactory_4 'b'
#define TC_IMPL_TC_Bonobo_CanvasComponentFactory_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_CanvasComponentFactory_struct;
#define TC_Bonobo_CanvasComponentFactory ((CORBA_TypeCode)&TC_Bonobo_CanvasComponentFactory_struct)
#endif
#endif
#if !defined(ORBIT_DECL_Bonobo_Embeddable) && !defined(_Bonobo_Embeddable_defined)
#define ORBIT_DECL_Bonobo_Embeddable 1
#define _Bonobo_Embeddable_defined 1
#define Bonobo_Embeddable__freekids CORBA_Object__freekids
typedef CORBA_Object Bonobo_Embeddable;
extern CORBA_unsigned_long Bonobo_Embeddable__classid;
#if !defined(TC_IMPL_TC_Bonobo_Embeddable_0)
#define TC_IMPL_TC_Bonobo_Embeddable_0 'B'
#define TC_IMPL_TC_Bonobo_Embeddable_1 'o'
#define TC_IMPL_TC_Bonobo_Embeddable_2 'n'
#define TC_IMPL_TC_Bonobo_Embeddable_3 'o'
#define TC_IMPL_TC_Bonobo_Embeddable_4 'b'
#define TC_IMPL_TC_Bonobo_Embeddable_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Embeddable_struct;
#define TC_Bonobo_Embeddable ((CORBA_TypeCode)&TC_Bonobo_Embeddable_struct)
#endif
#endif
#if !defined(_Bonobo_PrintScissor_defined)
#define _Bonobo_PrintScissor_defined 1
typedef struct Bonobo_PrintScissor_type Bonobo_PrintScissor;
struct Bonobo_PrintScissor_type {
CORBA_double width_first_page;
CORBA_double width_per_page;
CORBA_double height_first_page;
CORBA_double height_per_page;
};

#if !defined(TC_IMPL_TC_Bonobo_PrintScissor_0)
#define TC_IMPL_TC_Bonobo_PrintScissor_0 'B'
#define TC_IMPL_TC_Bonobo_PrintScissor_1 'o'
#define TC_IMPL_TC_Bonobo_PrintScissor_2 'n'
#define TC_IMPL_TC_Bonobo_PrintScissor_3 'o'
#define TC_IMPL_TC_Bonobo_PrintScissor_4 'b'
#define TC_IMPL_TC_Bonobo_PrintScissor_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_PrintScissor_struct;
#define TC_Bonobo_PrintScissor ((CORBA_TypeCode)&TC_Bonobo_PrintScissor_struct)
#endif
#define Bonobo_PrintScissor__alloc() ((Bonobo_PrintScissor *)ORBit_small_alloc (TC_Bonobo_PrintScissor))
#define Bonobo_PrintScissor__freekids(m,d) ORBit_small_freekids (TC_Bonobo_PrintScissor,(m),(d))
#endif
#if !defined(_Bonobo_PrintDimensions_defined)
#define _Bonobo_PrintDimensions_defined 1
typedef struct Bonobo_PrintDimensions_type Bonobo_PrintDimensions;
struct Bonobo_PrintDimensions_type {
CORBA_double width;
CORBA_double height;
};

#if !defined(TC_IMPL_TC_Bonobo_PrintDimensions_0)
#define TC_IMPL_TC_Bonobo_PrintDimensions_0 'B'
#define TC_IMPL_TC_Bonobo_PrintDimensions_1 'o'
#define TC_IMPL_TC_Bonobo_PrintDimensions_2 'n'
#define TC_IMPL_TC_Bonobo_PrintDimensions_3 'o'
#define TC_IMPL_TC_Bonobo_PrintDimensions_4 'b'
#define TC_IMPL_TC_Bonobo_PrintDimensions_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_PrintDimensions_struct;
#define TC_Bonobo_PrintDimensions ((CORBA_TypeCode)&TC_Bonobo_PrintDimensions_struct)
#endif
#define Bonobo_PrintDimensions__alloc() ((Bonobo_PrintDimensions *)ORBit_small_alloc (TC_Bonobo_PrintDimensions))
#define Bonobo_PrintDimensions__freekids(m,d) ORBit_small_freekids (TC_Bonobo_PrintDimensions,(m),(d))
#endif
#if !defined(ORBIT_DECL_Bonobo_Print) && !defined(_Bonobo_Print_defined)
#define ORBIT_DECL_Bonobo_Print 1
#define _Bonobo_Print_defined 1
#define Bonobo_Print__freekids CORBA_Object__freekids
typedef CORBA_Object Bonobo_Print;
extern CORBA_unsigned_long Bonobo_Print__classid;
#if !defined(TC_IMPL_TC_Bonobo_Print_0)
#define TC_IMPL_TC_Bonobo_Print_0 'B'
#define TC_IMPL_TC_Bonobo_Print_1 'o'
#define TC_IMPL_TC_Bonobo_Print_2 'n'
#define TC_IMPL_TC_Bonobo_Print_3 'o'
#define TC_IMPL_TC_Bonobo_Print_4 'b'
#define TC_IMPL_TC_Bonobo_Print_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Print_struct;
#define TC_Bonobo_Print ((CORBA_TypeCode)&TC_Bonobo_Print_struct)
#endif
#endif
#if !defined(ORBIT_DECL_Bonobo_Clipboard) && !defined(_Bonobo_Clipboard_defined)
#define ORBIT_DECL_Bonobo_Clipboard 1
#define _Bonobo_Clipboard_defined 1
#define Bonobo_Clipboard__freekids CORBA_Object__freekids
typedef CORBA_Object Bonobo_Clipboard;
extern CORBA_unsigned_long Bonobo_Clipboard__classid;
#if !defined(TC_IMPL_TC_Bonobo_Clipboard_0)
#define TC_IMPL_TC_Bonobo_Clipboard_0 'B'
#define TC_IMPL_TC_Bonobo_Clipboard_1 'o'
#define TC_IMPL_TC_Bonobo_Clipboard_2 'n'
#define TC_IMPL_TC_Bonobo_Clipboard_3 'o'
#define TC_IMPL_TC_Bonobo_Clipboard_4 'b'
#define TC_IMPL_TC_Bonobo_Clipboard_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Clipboard_struct;
#define TC_Bonobo_Clipboard ((CORBA_TypeCode)&TC_Bonobo_Clipboard_struct)
#endif
#endif
#if !defined(ORBIT_DECL_Bonobo_ClipboardStore) && !defined(_Bonobo_ClipboardStore_defined)
#define ORBIT_DECL_Bonobo_ClipboardStore 1
#define _Bonobo_ClipboardStore_defined 1
#define Bonobo_ClipboardStore__freekids CORBA_Object__freekids
typedef CORBA_Object Bonobo_ClipboardStore;
extern CORBA_unsigned_long Bonobo_ClipboardStore__classid;
#if !defined(TC_IMPL_TC_Bonobo_ClipboardStore_0)
#define TC_IMPL_TC_Bonobo_ClipboardStore_0 'B'
#define TC_IMPL_TC_Bonobo_ClipboardStore_1 'o'
#define TC_IMPL_TC_Bonobo_ClipboardStore_2 'n'
#define TC_IMPL_TC_Bonobo_ClipboardStore_3 'o'
#define TC_IMPL_TC_Bonobo_ClipboardStore_4 'b'
#define TC_IMPL_TC_Bonobo_ClipboardStore_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_ClipboardStore_struct;
#define TC_Bonobo_ClipboardStore ((CORBA_TypeCode)&TC_Bonobo_ClipboardStore_struct)
#endif
#endif
#if !defined(ORBIT_DECL_Bonobo_Application) && !defined(_Bonobo_Application_defined)
#define ORBIT_DECL_Bonobo_Application 1
#define _Bonobo_Application_defined 1
#define Bonobo_Application__freekids CORBA_Object__freekids
typedef CORBA_Object Bonobo_Application;
extern CORBA_unsigned_long Bonobo_Application__classid;
#if !defined(TC_IMPL_TC_Bonobo_Application_0)
#define TC_IMPL_TC_Bonobo_Application_0 'B'
#define TC_IMPL_TC_Bonobo_Application_1 'o'
#define TC_IMPL_TC_Bonobo_Application_2 'n'
#define TC_IMPL_TC_Bonobo_Application_3 'o'
#define TC_IMPL_TC_Bonobo_Application_4 'b'
#define TC_IMPL_TC_Bonobo_Application_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Application_struct;
#define TC_Bonobo_Application ((CORBA_TypeCode)&TC_Bonobo_Application_struct)
#endif
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_any)
#define ORBIT_DECL_CORBA_sequence_CORBA_any 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_any_0 'B'
#define ORBIT_IMPL_CORBA_sequence_CORBA_any_1 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_any_2 'n'
#define ORBIT_IMPL_CORBA_sequence_CORBA_any_3 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_any_4 'b'
#define ORBIT_IMPL_CORBA_sequence_CORBA_any_5 'o'
#if !defined(_CORBA_sequence_CORBA_any_defined)
#define _CORBA_sequence_CORBA_any_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; CORBA_any* _buffer; CORBA_boolean _release; } CORBA_sequence_CORBA_any;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_any_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_any_0 'B'
#define TC_IMPL_TC_CORBA_sequence_CORBA_any_1 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_any_2 'n'
#define TC_IMPL_TC_CORBA_sequence_CORBA_any_3 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_any_4 'b'
#define TC_IMPL_TC_CORBA_sequence_CORBA_any_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_any_struct;
#define TC_CORBA_sequence_CORBA_any ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_any_struct)
#endif
#define CORBA_sequence_CORBA_any__alloc() ((CORBA_sequence_CORBA_any *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_any))
#define CORBA_sequence_CORBA_any__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_any,(m),(d))
#define CORBA_sequence_CORBA_any_allocbuf(l) ((CORBA_any*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_any, (l)))
#define CORBA_sequence_CORBA_any_allocbuf(l) ((CORBA_any*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_any, (l)))
#endif
#if !defined(_Bonobo_Application_ArgList_defined)
#define _Bonobo_Application_ArgList_defined 1
typedef CORBA_sequence_CORBA_any Bonobo_Application_ArgList;
#define Bonobo_Application_ArgList_marshal(x,y,z) CORBA_sequence_CORBA_any_marshal((x),(y),(z))
#define Bonobo_Application_ArgList_demarshal(x,y,z,i) CORBA_sequence_CORBA_any_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_Bonobo_Application_ArgList_0)
#define TC_IMPL_TC_Bonobo_Application_ArgList_0 'B'
#define TC_IMPL_TC_Bonobo_Application_ArgList_1 'o'
#define TC_IMPL_TC_Bonobo_Application_ArgList_2 'n'
#define TC_IMPL_TC_Bonobo_Application_ArgList_3 'o'
#define TC_IMPL_TC_Bonobo_Application_ArgList_4 'b'
#define TC_IMPL_TC_Bonobo_Application_ArgList_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Application_ArgList_struct;
#define TC_Bonobo_Application_ArgList ((CORBA_TypeCode)&TC_Bonobo_Application_ArgList_struct)
#endif
#define Bonobo_Application_ArgList__alloc() ((Bonobo_Application_ArgList *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_any))
#define Bonobo_Application_ArgList__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_any,(m),(d))
#define Bonobo_Application_ArgList_allocbuf(l) ((CORBA_any*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_any, (l)))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_string)
#define ORBIT_DECL_CORBA_sequence_CORBA_string 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_0 'B'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_1 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_2 'n'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_3 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_4 'b'
#define ORBIT_IMPL_CORBA_sequence_CORBA_string_5 'o'
#if !defined(_CORBA_sequence_CORBA_string_defined)
#define _CORBA_sequence_CORBA_string_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; CORBA_string* _buffer; CORBA_boolean _release; } CORBA_sequence_CORBA_string;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_string_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_0 'B'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_1 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_2 'n'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_3 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_4 'b'
#define TC_IMPL_TC_CORBA_sequence_CORBA_string_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_string_struct;
#define TC_CORBA_sequence_CORBA_string ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_string_struct)
#endif
#define CORBA_sequence_CORBA_string__alloc() ((CORBA_sequence_CORBA_string *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_string))
#define CORBA_sequence_CORBA_string__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_string,(m),(d))
#define CORBA_sequence_CORBA_string_allocbuf(l) ((CORBA_string*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_string, (l)))
#define CORBA_sequence_CORBA_string_allocbuf(l) ((CORBA_string*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_string, (l)))
#endif
#if !defined(_Bonobo_Application_argv_t_defined)
#define _Bonobo_Application_argv_t_defined 1
typedef CORBA_sequence_CORBA_string Bonobo_Application_argv_t;
#define Bonobo_Application_argv_t_marshal(x,y,z) CORBA_sequence_CORBA_string_marshal((x),(y),(z))
#define Bonobo_Application_argv_t_demarshal(x,y,z,i) CORBA_sequence_CORBA_string_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_Bonobo_Application_argv_t_0)
#define TC_IMPL_TC_Bonobo_Application_argv_t_0 'B'
#define TC_IMPL_TC_Bonobo_Application_argv_t_1 'o'
#define TC_IMPL_TC_Bonobo_Application_argv_t_2 'n'
#define TC_IMPL_TC_Bonobo_Application_argv_t_3 'o'
#define TC_IMPL_TC_Bonobo_Application_argv_t_4 'b'
#define TC_IMPL_TC_Bonobo_Application_argv_t_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Application_argv_t_struct;
#define TC_Bonobo_Application_argv_t ((CORBA_TypeCode)&TC_Bonobo_Application_argv_t_struct)
#endif
#define Bonobo_Application_argv_t__alloc() ((Bonobo_Application_argv_t *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_string))
#define Bonobo_Application_argv_t__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_string,(m),(d))
#define Bonobo_Application_argv_t_allocbuf(l) ((CORBA_string*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_string, (l)))
#endif
#if !defined(_Bonobo_Application_MessageDesc_defined)
#define _Bonobo_Application_MessageDesc_defined 1
typedef struct Bonobo_Application_MessageDesc_type Bonobo_Application_MessageDesc;
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_TypeCode)
#define ORBIT_DECL_CORBA_sequence_CORBA_TypeCode 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_TypeCode_0 'B'
#define ORBIT_IMPL_CORBA_sequence_CORBA_TypeCode_1 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_TypeCode_2 'n'
#define ORBIT_IMPL_CORBA_sequence_CORBA_TypeCode_3 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_TypeCode_4 'b'
#define ORBIT_IMPL_CORBA_sequence_CORBA_TypeCode_5 'o'
#if !defined(_CORBA_sequence_CORBA_TypeCode_defined)
#define _CORBA_sequence_CORBA_TypeCode_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; CORBA_TypeCode* _buffer; CORBA_boolean _release; } CORBA_sequence_CORBA_TypeCode;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_TypeCode_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_TypeCode_0 'B'
#define TC_IMPL_TC_CORBA_sequence_CORBA_TypeCode_1 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_TypeCode_2 'n'
#define TC_IMPL_TC_CORBA_sequence_CORBA_TypeCode_3 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_TypeCode_4 'b'
#define TC_IMPL_TC_CORBA_sequence_CORBA_TypeCode_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_TypeCode_struct;
#define TC_CORBA_sequence_CORBA_TypeCode ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_TypeCode_struct)
#endif
#define CORBA_sequence_CORBA_TypeCode__alloc() ((CORBA_sequence_CORBA_TypeCode *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_TypeCode))
#define CORBA_sequence_CORBA_TypeCode__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_TypeCode,(m),(d))
#define CORBA_sequence_CORBA_TypeCode_allocbuf(l) ((CORBA_TypeCode*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_TypeCode, (l)))
#define CORBA_sequence_CORBA_TypeCode_allocbuf(l) ((CORBA_TypeCode*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_TypeCode, (l)))
#endif
struct Bonobo_Application_MessageDesc_type {
CORBA_string name;
CORBA_sequence_CORBA_TypeCode types;
CORBA_TypeCode return_type;
CORBA_string description;
};

#if !defined(TC_IMPL_TC_Bonobo_Application_MessageDesc_0)
#define TC_IMPL_TC_Bonobo_Application_MessageDesc_0 'B'
#define TC_IMPL_TC_Bonobo_Application_MessageDesc_1 'o'
#define TC_IMPL_TC_Bonobo_Application_MessageDesc_2 'n'
#define TC_IMPL_TC_Bonobo_Application_MessageDesc_3 'o'
#define TC_IMPL_TC_Bonobo_Application_MessageDesc_4 'b'
#define TC_IMPL_TC_Bonobo_Application_MessageDesc_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Application_MessageDesc_struct;
#define TC_Bonobo_Application_MessageDesc ((CORBA_TypeCode)&TC_Bonobo_Application_MessageDesc_struct)
#endif
#define Bonobo_Application_MessageDesc__alloc() ((Bonobo_Application_MessageDesc *)ORBit_small_alloc (TC_Bonobo_Application_MessageDesc))
#define Bonobo_Application_MessageDesc__freekids(m,d) ORBit_small_freekids (TC_Bonobo_Application_MessageDesc,(m),(d))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_Bonobo_Application_MessageDesc)
#define ORBIT_DECL_CORBA_sequence_Bonobo_Application_MessageDesc 1
#define ORBIT_IMPL_CORBA_sequence_Bonobo_Application_MessageDesc_0 'B'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_Application_MessageDesc_1 'o'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_Application_MessageDesc_2 'n'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_Application_MessageDesc_3 'o'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_Application_MessageDesc_4 'b'
#define ORBIT_IMPL_CORBA_sequence_Bonobo_Application_MessageDesc_5 'o'
#if !defined(_CORBA_sequence_Bonobo_Application_MessageDesc_defined)
#define _CORBA_sequence_Bonobo_Application_MessageDesc_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; Bonobo_Application_MessageDesc* _buffer; CORBA_boolean _release; } CORBA_sequence_Bonobo_Application_MessageDesc;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_Bonobo_Application_MessageDesc_0)
#define TC_IMPL_TC_CORBA_sequence_Bonobo_Application_MessageDesc_0 'B'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_Application_MessageDesc_1 'o'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_Application_MessageDesc_2 'n'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_Application_MessageDesc_3 'o'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_Application_MessageDesc_4 'b'
#define TC_IMPL_TC_CORBA_sequence_Bonobo_Application_MessageDesc_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_CORBA_sequence_Bonobo_Application_MessageDesc_struct;
#define TC_CORBA_sequence_Bonobo_Application_MessageDesc ((CORBA_TypeCode)&TC_CORBA_sequence_Bonobo_Application_MessageDesc_struct)
#endif
#define CORBA_sequence_Bonobo_Application_MessageDesc__alloc() ((CORBA_sequence_Bonobo_Application_MessageDesc *)ORBit_small_alloc (TC_CORBA_sequence_Bonobo_Application_MessageDesc))
#define CORBA_sequence_Bonobo_Application_MessageDesc__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_Bonobo_Application_MessageDesc,(m),(d))
#define CORBA_sequence_Bonobo_Application_MessageDesc_allocbuf(l) ((Bonobo_Application_MessageDesc*)ORBit_small_allocbuf (TC_CORBA_sequence_Bonobo_Application_MessageDesc, (l)))
#define CORBA_sequence_Bonobo_Application_MessageDesc_allocbuf(l) ((Bonobo_Application_MessageDesc*)ORBit_small_allocbuf (TC_CORBA_sequence_Bonobo_Application_MessageDesc, (l)))
#endif
#if !defined(_Bonobo_Application_MessageList_defined)
#define _Bonobo_Application_MessageList_defined 1
typedef CORBA_sequence_Bonobo_Application_MessageDesc Bonobo_Application_MessageList;
#define Bonobo_Application_MessageList_marshal(x,y,z) CORBA_sequence_Bonobo_Application_MessageDesc_marshal((x),(y),(z))
#define Bonobo_Application_MessageList_demarshal(x,y,z,i) CORBA_sequence_Bonobo_Application_MessageDesc_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_Bonobo_Application_MessageList_0)
#define TC_IMPL_TC_Bonobo_Application_MessageList_0 'B'
#define TC_IMPL_TC_Bonobo_Application_MessageList_1 'o'
#define TC_IMPL_TC_Bonobo_Application_MessageList_2 'n'
#define TC_IMPL_TC_Bonobo_Application_MessageList_3 'o'
#define TC_IMPL_TC_Bonobo_Application_MessageList_4 'b'
#define TC_IMPL_TC_Bonobo_Application_MessageList_5 'o'
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_Bonobo_Application_MessageList_struct;
#define TC_Bonobo_Application_MessageList ((CORBA_TypeCode)&TC_Bonobo_Application_MessageList_struct)
#endif
#define Bonobo_Application_MessageList__alloc() ((Bonobo_Application_MessageList *)ORBit_small_alloc (TC_CORBA_sequence_Bonobo_Application_MessageDesc))
#define Bonobo_Application_MessageList__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_Bonobo_Application_MessageDesc,(m),(d))
#define Bonobo_Application_MessageList_allocbuf(l) ((Bonobo_Application_MessageDesc*)ORBit_small_allocbuf (TC_CORBA_sequence_Bonobo_Application_MessageDesc, (l)))
#endif

/** POA structures **/
#ifndef _defined_POA_Bonobo_Moniker
#define _defined_POA_Bonobo_Moniker 1
typedef struct {
  void *_private;
Bonobo_Moniker (*getParent)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*setParent)(PortableServer_Servant _servant, const Bonobo_Moniker parent, CORBA_Environment *ev);
CORBA_string (*getName)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*setName)(PortableServer_Servant _servant, const CORBA_char * name, CORBA_Environment *ev);
Bonobo_Unknown (*resolve)(PortableServer_Servant _servant, const Bonobo_ResolveOptions* options, const CORBA_char * requestedInterface, CORBA_Environment *ev);
CORBA_long (*equal)(PortableServer_Servant _servant, const CORBA_char * name, CORBA_Environment *ev);
void (*unImplemented1)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented2)(PortableServer_Servant _servant, CORBA_Environment *ev);
} POA_Bonobo_Moniker__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
  POA_Bonobo_Moniker__epv *Bonobo_Moniker_epv;
} POA_Bonobo_Moniker__vepv;
typedef struct {
  void *_private;
  POA_Bonobo_Moniker__vepv *vepv;
} POA_Bonobo_Moniker;
extern void POA_Bonobo_Moniker__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_Bonobo_Moniker__fini(PortableServer_Servant servant, CORBA_Environment *ev);
#endif /* _defined_POA_Bonobo_Moniker */
#ifndef _defined_POA_Bonobo_MonikerExtender
#define _defined_POA_Bonobo_MonikerExtender 1
typedef struct {
  void *_private;
Bonobo_Unknown (*resolve)(PortableServer_Servant _servant, const Bonobo_Moniker m, const Bonobo_ResolveOptions* options, const CORBA_char * name, const CORBA_char * requestedInterface, CORBA_Environment *ev);
void (*unImplemented1)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented2)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented3)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented4)(PortableServer_Servant _servant, CORBA_Environment *ev);
} POA_Bonobo_MonikerExtender__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
  POA_Bonobo_MonikerExtender__epv *Bonobo_MonikerExtender_epv;
} POA_Bonobo_MonikerExtender__vepv;
typedef struct {
  void *_private;
  POA_Bonobo_MonikerExtender__vepv *vepv;
} POA_Bonobo_MonikerExtender;
extern void POA_Bonobo_MonikerExtender__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_Bonobo_MonikerExtender__fini(PortableServer_Servant servant, CORBA_Environment *ev);
#endif /* _defined_POA_Bonobo_MonikerExtender */
#ifndef _defined_POA_Bonobo_Stream
#define _defined_POA_Bonobo_Stream 1
typedef struct {
  void *_private;
Bonobo_StorageInfo* (*getInfo)(PortableServer_Servant _servant, const Bonobo_StorageInfoFields mask, CORBA_Environment *ev);
void (*setInfo)(PortableServer_Servant _servant, const Bonobo_StorageInfo* info, const Bonobo_StorageInfoFields mask, CORBA_Environment *ev);
void (*read)(PortableServer_Servant _servant, const CORBA_long count, Bonobo_Stream_iobuf** buffer, CORBA_Environment *ev);
void (*write)(PortableServer_Servant _servant, const Bonobo_Stream_iobuf* buffer, CORBA_Environment *ev);
CORBA_long (*seek)(PortableServer_Servant _servant, const CORBA_long offset, const Bonobo_Stream_SeekType whence, CORBA_Environment *ev);
void (*truncate)(PortableServer_Servant _servant, const CORBA_long length, CORBA_Environment *ev);
void (*commit)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*revert)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented1)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented2)(PortableServer_Servant _servant, CORBA_Environment *ev);
} POA_Bonobo_Stream__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
  POA_Bonobo_Stream__epv *Bonobo_Stream_epv;
} POA_Bonobo_Stream__vepv;
typedef struct {
  void *_private;
  POA_Bonobo_Stream__vepv *vepv;
} POA_Bonobo_Stream;
extern void POA_Bonobo_Stream__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_Bonobo_Stream__fini(PortableServer_Servant servant, CORBA_Environment *ev);
#endif /* _defined_POA_Bonobo_Stream */
#ifndef _defined_POA_Bonobo_Storage
#define _defined_POA_Bonobo_Storage 1
typedef struct {
  void *_private;
Bonobo_StorageInfo* (*getInfo)(PortableServer_Servant _servant, const CORBA_char * path, const Bonobo_StorageInfoFields mask, CORBA_Environment *ev);
void (*setInfo)(PortableServer_Servant _servant, const CORBA_char * path, const Bonobo_StorageInfo* info, const Bonobo_StorageInfoFields mask, CORBA_Environment *ev);
Bonobo_Stream (*openStream)(PortableServer_Servant _servant, const CORBA_char * path, const Bonobo_Storage_OpenMode mode, CORBA_Environment *ev);
Bonobo_Storage (*openStorage)(PortableServer_Servant _servant, const CORBA_char * path, const Bonobo_Storage_OpenMode mode, CORBA_Environment *ev);
void (*copyTo)(PortableServer_Servant _servant, const Bonobo_Storage target, CORBA_Environment *ev);
Bonobo_Storage_DirectoryList* (*listContents)(PortableServer_Servant _servant, const CORBA_char * path, const Bonobo_StorageInfoFields mask, CORBA_Environment *ev);
void (*erase)(PortableServer_Servant _servant, const CORBA_char * path, CORBA_Environment *ev);
void (*rename)(PortableServer_Servant _servant, const CORBA_char * path_name, const CORBA_char * new_path_name, CORBA_Environment *ev);
void (*commit)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*revert)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented1)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented2)(PortableServer_Servant _servant, CORBA_Environment *ev);
} POA_Bonobo_Storage__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
  POA_Bonobo_Storage__epv *Bonobo_Storage_epv;
} POA_Bonobo_Storage__vepv;
typedef struct {
  void *_private;
  POA_Bonobo_Storage__vepv *vepv;
} POA_Bonobo_Storage;
extern void POA_Bonobo_Storage__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_Bonobo_Storage__fini(PortableServer_Servant servant, CORBA_Environment *ev);
#endif /* _defined_POA_Bonobo_Storage */
#ifndef _defined_POA_Bonobo_MonikerContext
#define _defined_POA_Bonobo_MonikerContext 1
typedef struct {
  void *_private;
Bonobo_Unknown (*getObject)(PortableServer_Servant _servant, const CORBA_char * name, const CORBA_char * repoId, CORBA_Environment *ev);
Bonobo_Moniker (*createFromName)(PortableServer_Servant _servant, const CORBA_char * name, CORBA_Environment *ev);
Bonobo_MonikerExtender (*getExtender)(PortableServer_Servant _servant, const CORBA_char * monikerPrefix, const CORBA_char * interfaceId, CORBA_Environment *ev);
void (*unImplemented1)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented2)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented3)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented4)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented5)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented6)(PortableServer_Servant _servant, CORBA_Environment *ev);
} POA_Bonobo_MonikerContext__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
  POA_Bonobo_MonikerContext__epv *Bonobo_MonikerContext_epv;
} POA_Bonobo_MonikerContext__vepv;
typedef struct {
  void *_private;
  POA_Bonobo_MonikerContext__vepv *vepv;
} POA_Bonobo_MonikerContext;
extern void POA_Bonobo_MonikerContext__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_Bonobo_MonikerContext__fini(PortableServer_Servant servant, CORBA_Environment *ev);
#endif /* _defined_POA_Bonobo_MonikerContext */
#ifndef _defined_POA_Bonobo_RunningContext
#define _defined_POA_Bonobo_RunningContext 1
typedef struct {
  void *_private;
void (*addObject)(PortableServer_Servant _servant, const CORBA_Object obj, CORBA_Environment *ev);
void (*removeObject)(PortableServer_Servant _servant, const CORBA_Object obj, CORBA_Environment *ev);
void (*addKey)(PortableServer_Servant _servant, const CORBA_char * key, CORBA_Environment *ev);
void (*removeKey)(PortableServer_Servant _servant, const CORBA_char * key, CORBA_Environment *ev);
void (*atExitUnref)(PortableServer_Servant _servant, const CORBA_Object obj, CORBA_Environment *ev);
void (*unImplemented1)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented2)(PortableServer_Servant _servant, CORBA_Environment *ev);
} POA_Bonobo_RunningContext__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
  POA_Bonobo_RunningContext__epv *Bonobo_RunningContext_epv;
} POA_Bonobo_RunningContext__vepv;
typedef struct {
  void *_private;
  POA_Bonobo_RunningContext__vepv *vepv;
} POA_Bonobo_RunningContext;
extern void POA_Bonobo_RunningContext__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_Bonobo_RunningContext__fini(PortableServer_Servant servant, CORBA_Environment *ev);
#endif /* _defined_POA_Bonobo_RunningContext */
#ifndef _defined_POA_Bonobo_Persist
#define _defined_POA_Bonobo_Persist 1
typedef struct {
  void *_private;
Bonobo_Persist_ContentTypeList* (*getContentTypes)(PortableServer_Servant _servant, CORBA_Environment *ev);
Bonobo_Persist_IID (*getIId)(PortableServer_Servant _servant, CORBA_Environment *ev);
CORBA_boolean (*isDirty)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented1)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented2)(PortableServer_Servant _servant, CORBA_Environment *ev);
} POA_Bonobo_Persist__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
  POA_Bonobo_Persist__epv *Bonobo_Persist_epv;
} POA_Bonobo_Persist__vepv;
typedef struct {
  void *_private;
  POA_Bonobo_Persist__vepv *vepv;
} POA_Bonobo_Persist;
extern void POA_Bonobo_Persist__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_Bonobo_Persist__fini(PortableServer_Servant servant, CORBA_Environment *ev);
#endif /* _defined_POA_Bonobo_Persist */
#ifndef _defined_POA_Bonobo_PersistFile
#define _defined_POA_Bonobo_PersistFile 1
typedef struct {
  void *_private;
void (*load)(PortableServer_Servant _servant, const CORBA_char * uri, CORBA_Environment *ev);
void (*save)(PortableServer_Servant _servant, const CORBA_char * uri, CORBA_Environment *ev);
CORBA_string (*getCurrentFile)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented3)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented4)(PortableServer_Servant _servant, CORBA_Environment *ev);
} POA_Bonobo_PersistFile__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
  POA_Bonobo_Persist__epv *Bonobo_Persist_epv;
  POA_Bonobo_PersistFile__epv *Bonobo_PersistFile_epv;
} POA_Bonobo_PersistFile__vepv;
typedef struct {
  void *_private;
  POA_Bonobo_PersistFile__vepv *vepv;
} POA_Bonobo_PersistFile;
extern void POA_Bonobo_PersistFile__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_Bonobo_PersistFile__fini(PortableServer_Servant servant, CORBA_Environment *ev);
#endif /* _defined_POA_Bonobo_PersistFile */
#ifndef _defined_POA_Bonobo_PersistStorage
#define _defined_POA_Bonobo_PersistStorage 1
typedef struct {
  void *_private;
void (*load)(PortableServer_Servant _servant, const Bonobo_Storage storage, CORBA_Environment *ev);
void (*save)(PortableServer_Servant _servant, const Bonobo_Storage storage, const CORBA_boolean same_as_loaded, CORBA_Environment *ev);
} POA_Bonobo_PersistStorage__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
  POA_Bonobo_Persist__epv *Bonobo_Persist_epv;
  POA_Bonobo_PersistStorage__epv *Bonobo_PersistStorage_epv;
} POA_Bonobo_PersistStorage__vepv;
typedef struct {
  void *_private;
  POA_Bonobo_PersistStorage__vepv *vepv;
} POA_Bonobo_PersistStorage;
extern void POA_Bonobo_PersistStorage__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_Bonobo_PersistStorage__fini(PortableServer_Servant servant, CORBA_Environment *ev);
#endif /* _defined_POA_Bonobo_PersistStorage */
#ifndef _defined_POA_Bonobo_PersistStream
#define _defined_POA_Bonobo_PersistStream 1
typedef struct {
  void *_private;
void (*load)(PortableServer_Servant _servant, const Bonobo_Stream stream, const CORBA_char * type, CORBA_Environment *ev);
void (*save)(PortableServer_Servant _servant, const Bonobo_Stream stream, const CORBA_char * type, CORBA_Environment *ev);
void (*unImplemented3)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented4)(PortableServer_Servant _servant, CORBA_Environment *ev);
} POA_Bonobo_PersistStream__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
  POA_Bonobo_Persist__epv *Bonobo_Persist_epv;
  POA_Bonobo_PersistStream__epv *Bonobo_PersistStream_epv;
} POA_Bonobo_PersistStream__vepv;
typedef struct {
  void *_private;
  POA_Bonobo_PersistStream__vepv *vepv;
} POA_Bonobo_PersistStream;
extern void POA_Bonobo_PersistStream__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_Bonobo_PersistStream__fini(PortableServer_Servant servant, CORBA_Environment *ev);
#endif /* _defined_POA_Bonobo_PersistStream */
#ifndef _defined_POA_Bonobo_Listener
#define _defined_POA_Bonobo_Listener 1
typedef struct {
  void *_private;
void (*event)(PortableServer_Servant _servant, const CORBA_char * event_name, const CORBA_any* args, CORBA_Environment *ev);
void (*unImplemented)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented2)(PortableServer_Servant _servant, CORBA_Environment *ev);
} POA_Bonobo_Listener__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
  POA_Bonobo_Listener__epv *Bonobo_Listener_epv;
} POA_Bonobo_Listener__vepv;
typedef struct {
  void *_private;
  POA_Bonobo_Listener__vepv *vepv;
} POA_Bonobo_Listener;
extern void POA_Bonobo_Listener__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_Bonobo_Listener__fini(PortableServer_Servant servant, CORBA_Environment *ev);
#endif /* _defined_POA_Bonobo_Listener */
#ifndef _defined_POA_Bonobo_EventSource
#define _defined_POA_Bonobo_EventSource 1
typedef struct {
  void *_private;
void (*addListener)(PortableServer_Servant _servant, const Bonobo_Listener l, CORBA_Environment *ev);
void (*addListenerWithMask)(PortableServer_Servant _servant, const Bonobo_Listener l, const CORBA_char * event_mask, CORBA_Environment *ev);
void (*removeListener)(PortableServer_Servant _servant, const Bonobo_Listener l, CORBA_Environment *ev);
void (*unImplemented)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented2)(PortableServer_Servant _servant, CORBA_Environment *ev);
} POA_Bonobo_EventSource__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
  POA_Bonobo_EventSource__epv *Bonobo_EventSource_epv;
} POA_Bonobo_EventSource__vepv;
typedef struct {
  void *_private;
  POA_Bonobo_EventSource__vepv *vepv;
} POA_Bonobo_EventSource;
extern void POA_Bonobo_EventSource__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_Bonobo_EventSource__fini(PortableServer_Servant servant, CORBA_Environment *ev);
#endif /* _defined_POA_Bonobo_EventSource */
#ifndef _defined_POA_Bonobo_UIComponent
#define _defined_POA_Bonobo_UIComponent 1
typedef struct {
  void *_private;
void (*setContainer)(PortableServer_Servant _servant, const Bonobo_UIContainer container, CORBA_Environment *ev);
void (*unsetContainer)(PortableServer_Servant _servant, CORBA_Environment *ev);
CORBA_string (*_get_name)(PortableServer_Servant _servant, CORBA_Environment *ev);
CORBA_string (*describeVerbs)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*execVerb)(PortableServer_Servant _servant, const CORBA_char * cname, CORBA_Environment *ev);
void (*uiEvent)(PortableServer_Servant _servant, const CORBA_char * id, const Bonobo_UIComponent_EventType type, const CORBA_char * state, CORBA_Environment *ev);
void (*unImplemented)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented2)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented3)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented4)(PortableServer_Servant _servant, CORBA_Environment *ev);
} POA_Bonobo_UIComponent__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
  POA_Bonobo_UIComponent__epv *Bonobo_UIComponent_epv;
} POA_Bonobo_UIComponent__vepv;
typedef struct {
  void *_private;
  POA_Bonobo_UIComponent__vepv *vepv;
} POA_Bonobo_UIComponent;
extern void POA_Bonobo_UIComponent__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_Bonobo_UIComponent__fini(PortableServer_Servant servant, CORBA_Environment *ev);
#endif /* _defined_POA_Bonobo_UIComponent */
#ifndef _defined_POA_Bonobo_UIContainer
#define _defined_POA_Bonobo_UIContainer 1
typedef struct {
  void *_private;
void (*registerComponent)(PortableServer_Servant _servant, const CORBA_char * component_name, const Bonobo_UIComponent component, CORBA_Environment *ev);
void (*deregisterComponent)(PortableServer_Servant _servant, const CORBA_char * component_name, CORBA_Environment *ev);
void (*freeze)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*thaw)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*setAttr)(PortableServer_Servant _servant, const CORBA_char * path, const CORBA_char * attr, const CORBA_char * value, const CORBA_char * component_name, CORBA_Environment *ev);
CORBA_string (*getAttr)(PortableServer_Servant _servant, const CORBA_char * path, const CORBA_char * attr, CORBA_Environment *ev);
void (*setNode)(PortableServer_Servant _servant, const CORBA_char * path, const CORBA_char * xml, const CORBA_char * component_name, CORBA_Environment *ev);
CORBA_string (*getNode)(PortableServer_Servant _servant, const CORBA_char * path, const CORBA_boolean nodeOnly, CORBA_Environment *ev);
void (*removeNode)(PortableServer_Servant _servant, const CORBA_char * path, const CORBA_char * by_component_name, CORBA_Environment *ev);
CORBA_boolean (*exists)(PortableServer_Servant _servant, const CORBA_char * path, CORBA_Environment *ev);
void (*execVerb)(PortableServer_Servant _servant, const CORBA_char * cname, CORBA_Environment *ev);
void (*uiEvent)(PortableServer_Servant _servant, const CORBA_char * id, const Bonobo_UIComponent_EventType type, const CORBA_char * state, CORBA_Environment *ev);
void (*setObject)(PortableServer_Servant _servant, const CORBA_char * path, const Bonobo_Unknown control, CORBA_Environment *ev);
Bonobo_Unknown (*getObject)(PortableServer_Servant _servant, const CORBA_char * path, CORBA_Environment *ev);
void (*unImplemented)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented2)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented3)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented4)(PortableServer_Servant _servant, CORBA_Environment *ev);
} POA_Bonobo_UIContainer__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
  POA_Bonobo_UIContainer__epv *Bonobo_UIContainer_epv;
} POA_Bonobo_UIContainer__vepv;
typedef struct {
  void *_private;
  POA_Bonobo_UIContainer__vepv *vepv;
} POA_Bonobo_UIContainer;
extern void POA_Bonobo_UIContainer__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_Bonobo_UIContainer__fini(PortableServer_Servant servant, CORBA_Environment *ev);
#endif /* _defined_POA_Bonobo_UIContainer */
#ifndef _defined_POA_Bonobo_PropertyBag
#define _defined_POA_Bonobo_PropertyBag 1
typedef struct {
  void *_private;
Bonobo_KeyList* (*getKeys)(PortableServer_Servant _servant, const CORBA_char * filter, CORBA_Environment *ev);
CORBA_TypeCode (*getType)(PortableServer_Servant _servant, const CORBA_char * key, CORBA_Environment *ev);
CORBA_any* (*getValue)(PortableServer_Servant _servant, const CORBA_char * key, CORBA_Environment *ev);
void (*setValue)(PortableServer_Servant _servant, const CORBA_char * key, const CORBA_any* value, CORBA_Environment *ev);
Bonobo_PropertySet* (*getValues)(PortableServer_Servant _servant, const CORBA_char * filter, CORBA_Environment *ev);
void (*setValues)(PortableServer_Servant _servant, const Bonobo_PropertySet* set, CORBA_Environment *ev);
CORBA_any* (*getDefault)(PortableServer_Servant _servant, const CORBA_char * key, CORBA_Environment *ev);
CORBA_string (*getDocTitle)(PortableServer_Servant _servant, const CORBA_char * key, CORBA_Environment *ev);
CORBA_string (*getDoc)(PortableServer_Servant _servant, const CORBA_char * key, CORBA_Environment *ev);
Bonobo_PropertyFlags (*getFlags)(PortableServer_Servant _servant, const CORBA_char * key, CORBA_Environment *ev);
void (*unImplemented1)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented2)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented3)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented4)(PortableServer_Servant _servant, CORBA_Environment *ev);
} POA_Bonobo_PropertyBag__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
  POA_Bonobo_PropertyBag__epv *Bonobo_PropertyBag_epv;
} POA_Bonobo_PropertyBag__vepv;
typedef struct {
  void *_private;
  POA_Bonobo_PropertyBag__vepv *vepv;
} POA_Bonobo_PropertyBag;
extern void POA_Bonobo_PropertyBag__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_Bonobo_PropertyBag__fini(PortableServer_Servant servant, CORBA_Environment *ev);
#endif /* _defined_POA_Bonobo_PropertyBag */
#ifndef _defined_POA_Bonobo_ConfigDatabase
#define _defined_POA_Bonobo_ConfigDatabase 1
typedef struct {
  void *_private;
CORBA_boolean (*_get_isWriteable)(PortableServer_Servant _servant, CORBA_Environment *ev);
Bonobo_KeyList* (*getDirs)(PortableServer_Servant _servant, const CORBA_char * dir, CORBA_Environment *ev);
CORBA_boolean (*hasDir)(PortableServer_Servant _servant, const CORBA_char * dir, CORBA_Environment *ev);
void (*removeValue)(PortableServer_Servant _servant, const CORBA_char * key, CORBA_Environment *ev);
void (*removeDir)(PortableServer_Servant _servant, const CORBA_char * dir, CORBA_Environment *ev);
void (*addDatabase)(PortableServer_Servant _servant, const Bonobo_ConfigDatabase db, const CORBA_char * key, const Bonobo_ConfigDatabase_DBFlags flags, CORBA_Environment *ev);
void (*sync)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented5)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented6)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented7)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented8)(PortableServer_Servant _servant, CORBA_Environment *ev);
} POA_Bonobo_ConfigDatabase__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
  POA_Bonobo_PropertyBag__epv *Bonobo_PropertyBag_epv;
  POA_Bonobo_ConfigDatabase__epv *Bonobo_ConfigDatabase_epv;
} POA_Bonobo_ConfigDatabase__vepv;
typedef struct {
  void *_private;
  POA_Bonobo_ConfigDatabase__vepv *vepv;
} POA_Bonobo_ConfigDatabase;
extern void POA_Bonobo_ConfigDatabase__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_Bonobo_ConfigDatabase__fini(PortableServer_Servant servant, CORBA_Environment *ev);
#endif /* _defined_POA_Bonobo_ConfigDatabase */
#ifndef _defined_POA_Bonobo_ControlFrame
#define _defined_POA_Bonobo_ControlFrame 1
typedef struct {
  void *_private;
Bonobo_Gdk_WindowId (*getToplevelId)(PortableServer_Servant _servant, CORBA_Environment *ev);
Bonobo_PropertyBag (*getAmbientProperties)(PortableServer_Servant _servant, CORBA_Environment *ev);
Bonobo_UIContainer (*getUIContainer)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*notifyActivated)(PortableServer_Servant _servant, const CORBA_boolean state, CORBA_Environment *ev);
void (*queueResize)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*activateURI)(PortableServer_Servant _servant, const CORBA_char * uri, const CORBA_boolean relative, CORBA_Environment *ev);
Bonobo_Unknown (*getParentAccessible)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented2)(PortableServer_Servant _servant, CORBA_Environment *ev);
} POA_Bonobo_ControlFrame__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
  POA_Bonobo_ControlFrame__epv *Bonobo_ControlFrame_epv;
} POA_Bonobo_ControlFrame__vepv;
typedef struct {
  void *_private;
  POA_Bonobo_ControlFrame__vepv *vepv;
} POA_Bonobo_ControlFrame;
extern void POA_Bonobo_ControlFrame__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_Bonobo_ControlFrame__fini(PortableServer_Servant servant, CORBA_Environment *ev);
#endif /* _defined_POA_Bonobo_ControlFrame */
#ifndef _defined_POA_Bonobo_Control
#define _defined_POA_Bonobo_Control 1
typedef struct {
  void *_private;
Bonobo_PropertyBag (*getProperties)(PortableServer_Servant _servant, CORBA_Environment *ev);
Bonobo_Gtk_Requisition (*getDesiredSize)(PortableServer_Servant _servant, CORBA_Environment *ev);
Bonobo_Unknown (*getAccessible)(PortableServer_Servant _servant, CORBA_Environment *ev);
Bonobo_Gdk_WindowId (*getWindowId)(PortableServer_Servant _servant, const CORBA_char * cookie, CORBA_Environment *ev);
Bonobo_UIContainer (*getPopupContainer)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*setFrame)(PortableServer_Servant _servant, const Bonobo_ControlFrame frame, CORBA_Environment *ev);
void (*setSize)(PortableServer_Servant _servant, const CORBA_short width, const CORBA_short height, CORBA_Environment *ev);
void (*setState)(PortableServer_Servant _servant, const Bonobo_Gtk_State state, CORBA_Environment *ev);
void (*activate)(PortableServer_Servant _servant, const CORBA_boolean activate, CORBA_Environment *ev);
CORBA_boolean (*focus)(PortableServer_Servant _servant, const Bonobo_Gtk_Direction direction, CORBA_Environment *ev);
void (*unImplemented)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented2)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented3)(PortableServer_Servant _servant, CORBA_Environment *ev);
} POA_Bonobo_Control__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
  POA_Bonobo_Control__epv *Bonobo_Control_epv;
} POA_Bonobo_Control__vepv;
typedef struct {
  void *_private;
  POA_Bonobo_Control__vepv *vepv;
} POA_Bonobo_Control;
extern void POA_Bonobo_Control__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_Bonobo_Control__fini(PortableServer_Servant servant, CORBA_Environment *ev);
#endif /* _defined_POA_Bonobo_Control */
#ifndef _defined_POA_Bonobo_PropertyControl
#define _defined_POA_Bonobo_PropertyControl 1
typedef struct {
  void *_private;
CORBA_long (*_get_pageCount)(PortableServer_Servant _servant, CORBA_Environment *ev);
Bonobo_Control (*getControl)(PortableServer_Servant _servant, const CORBA_long pagenumber, CORBA_Environment *ev);
void (*notifyAction)(PortableServer_Servant _servant, const CORBA_long pagenumber, const Bonobo_PropertyControl_Action action, CORBA_Environment *ev);
void (*unImplemented)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented2)(PortableServer_Servant _servant, CORBA_Environment *ev);
} POA_Bonobo_PropertyControl__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
  POA_Bonobo_PropertyControl__epv *Bonobo_PropertyControl_epv;
} POA_Bonobo_PropertyControl__vepv;
typedef struct {
  void *_private;
  POA_Bonobo_PropertyControl__vepv *vepv;
} POA_Bonobo_PropertyControl;
extern void POA_Bonobo_PropertyControl__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_Bonobo_PropertyControl__fini(PortableServer_Servant servant, CORBA_Environment *ev);
#endif /* _defined_POA_Bonobo_PropertyControl */
#ifndef _defined_POA_Bonobo_ZoomableFrame
#define _defined_POA_Bonobo_ZoomableFrame 1
typedef struct {
  void *_private;
void (*onLevelChanged)(PortableServer_Servant _servant, const CORBA_float zoom_level, CORBA_Environment *ev);
void (*onParametersChanged)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented1)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented2)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented3)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented4)(PortableServer_Servant _servant, CORBA_Environment *ev);
} POA_Bonobo_ZoomableFrame__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
  POA_Bonobo_ZoomableFrame__epv *Bonobo_ZoomableFrame_epv;
} POA_Bonobo_ZoomableFrame__vepv;
typedef struct {
  void *_private;
  POA_Bonobo_ZoomableFrame__vepv *vepv;
} POA_Bonobo_ZoomableFrame;
extern void POA_Bonobo_ZoomableFrame__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_Bonobo_ZoomableFrame__fini(PortableServer_Servant servant, CORBA_Environment *ev);
#endif /* _defined_POA_Bonobo_ZoomableFrame */
#ifndef _defined_POA_Bonobo_Zoomable
#define _defined_POA_Bonobo_Zoomable 1
typedef struct {
  void *_private;
CORBA_float (*_get_level)(PortableServer_Servant _servant, CORBA_Environment *ev);
CORBA_float (*_get_minLevel)(PortableServer_Servant _servant, CORBA_Environment *ev);
CORBA_float (*_get_maxLevel)(PortableServer_Servant _servant, CORBA_Environment *ev);
CORBA_boolean (*_get_hasMinLevel)(PortableServer_Servant _servant, CORBA_Environment *ev);
CORBA_boolean (*_get_hasMaxLevel)(PortableServer_Servant _servant, CORBA_Environment *ev);
CORBA_boolean (*_get_isContinuous)(PortableServer_Servant _servant, CORBA_Environment *ev);
Bonobo_ZoomLevelList* (*_get_preferredLevels)(PortableServer_Servant _servant, CORBA_Environment *ev);
Bonobo_ZoomLevelNameList* (*_get_preferredLevelNames)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*zoomIn)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*zoomOut)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*zoomFit)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*zoomDefault)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*setLevel)(PortableServer_Servant _servant, const CORBA_float zoom_level, CORBA_Environment *ev);
void (*setFrame)(PortableServer_Servant _servant, const Bonobo_ZoomableFrame zoomable_frame, CORBA_Environment *ev);
void (*unImplemented1)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented2)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented3)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented4)(PortableServer_Servant _servant, CORBA_Environment *ev);
} POA_Bonobo_Zoomable__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
  POA_Bonobo_Zoomable__epv *Bonobo_Zoomable_epv;
} POA_Bonobo_Zoomable__vepv;
typedef struct {
  void *_private;
  POA_Bonobo_Zoomable__vepv *vepv;
} POA_Bonobo_Zoomable;
extern void POA_Bonobo_Zoomable__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_Bonobo_Zoomable__fini(PortableServer_Servant servant, CORBA_Environment *ev);
#endif /* _defined_POA_Bonobo_Zoomable */
#ifndef _defined_POA_Bonobo_ItemContainer
#define _defined_POA_Bonobo_ItemContainer 1
typedef struct {
  void *_private;
Bonobo_ItemContainer_ObjectNames* (*enumObjects)(PortableServer_Servant _servant, CORBA_Environment *ev);
Bonobo_Unknown (*getObjectByName)(PortableServer_Servant _servant, const CORBA_char * item_name, const CORBA_boolean only_if_exists, CORBA_Environment *ev);
void (*unImplemented1)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented2)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented3)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented4)(PortableServer_Servant _servant, CORBA_Environment *ev);
} POA_Bonobo_ItemContainer__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
  POA_Bonobo_ItemContainer__epv *Bonobo_ItemContainer_epv;
} POA_Bonobo_ItemContainer__vepv;
typedef struct {
  void *_private;
  POA_Bonobo_ItemContainer__vepv *vepv;
} POA_Bonobo_ItemContainer;
extern void POA_Bonobo_ItemContainer__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_Bonobo_ItemContainer__fini(PortableServer_Servant servant, CORBA_Environment *ev);
#endif /* _defined_POA_Bonobo_ItemContainer */
#ifndef _defined_POA_Bonobo_Canvas_Component
#define _defined_POA_Bonobo_Canvas_Component 1
typedef struct {
  void *_private;
Bonobo_Canvas_ArtUTA* (*update)(PortableServer_Servant _servant, const Bonobo_Canvas_State* state, const Bonobo_Canvas_affine aff, const Bonobo_Canvas_SVP* clip_path, const CORBA_long flags, CORBA_double* x1, CORBA_double* y1, CORBA_double* x2, CORBA_double* y2, CORBA_Environment *ev);
void (*realize)(PortableServer_Servant _servant, const CORBA_char * drawable, CORBA_Environment *ev);
void (*unrealize)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*map)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unmap)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*draw)(PortableServer_Servant _servant, const Bonobo_Canvas_State* state, const CORBA_char * drawable, const CORBA_short x, const CORBA_short y, const CORBA_short width, const CORBA_short height, CORBA_Environment *ev);
void (*render)(PortableServer_Servant _servant, Bonobo_Canvas_Buf* buf, CORBA_Environment *ev);
CORBA_boolean (*contains)(PortableServer_Servant _servant, const CORBA_double x, const CORBA_double y, CORBA_Environment *ev);
void (*bounds)(PortableServer_Servant _servant, const Bonobo_Canvas_State* state, CORBA_double* x1, CORBA_double* x2, CORBA_double* y1, CORBA_double* y2, CORBA_Environment *ev);
CORBA_boolean (*event)(PortableServer_Servant _servant, const Bonobo_Canvas_State* state, const Bonobo_Gdk_Event* event, CORBA_Environment *ev);
void (*setCanvasSize)(PortableServer_Servant _servant, const CORBA_short x, const CORBA_short y, const CORBA_short width, const CORBA_short height, CORBA_Environment *ev);
void (*setBounds)(PortableServer_Servant _servant, const Bonobo_Canvas_DRect* bbox, CORBA_Environment *ev);
void (*unImplemented1)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented2)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented3)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented4)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented5)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented6)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented7)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented8)(PortableServer_Servant _servant, CORBA_Environment *ev);
} POA_Bonobo_Canvas_Component__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
  POA_Bonobo_Canvas_Component__epv *Bonobo_Canvas_Component_epv;
} POA_Bonobo_Canvas_Component__vepv;
typedef struct {
  void *_private;
  POA_Bonobo_Canvas_Component__vepv *vepv;
} POA_Bonobo_Canvas_Component;
extern void POA_Bonobo_Canvas_Component__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_Bonobo_Canvas_Component__fini(PortableServer_Servant servant, CORBA_Environment *ev);
#endif /* _defined_POA_Bonobo_Canvas_Component */
#ifndef _defined_POA_Bonobo_Canvas_ComponentProxy
#define _defined_POA_Bonobo_Canvas_ComponentProxy 1
typedef struct {
  void *_private;
void (*requestUpdate)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*grabFocus)(PortableServer_Servant _servant, const CORBA_unsigned_long mask, const CORBA_long cursor, const CORBA_unsigned_long time, CORBA_Environment *ev);
void (*ungrabFocus)(PortableServer_Servant _servant, const CORBA_unsigned_long time, CORBA_Environment *ev);
Bonobo_UIContainer (*getUIContainer)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented1)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented2)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented3)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented4)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented5)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented6)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented7)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented8)(PortableServer_Servant _servant, CORBA_Environment *ev);
} POA_Bonobo_Canvas_ComponentProxy__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_Bonobo_Canvas_ComponentProxy__epv *Bonobo_Canvas_ComponentProxy_epv;
} POA_Bonobo_Canvas_ComponentProxy__vepv;
typedef struct {
  void *_private;
  POA_Bonobo_Canvas_ComponentProxy__vepv *vepv;
} POA_Bonobo_Canvas_ComponentProxy;
extern void POA_Bonobo_Canvas_ComponentProxy__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_Bonobo_Canvas_ComponentProxy__fini(PortableServer_Servant servant, CORBA_Environment *ev);
#endif /* _defined_POA_Bonobo_Canvas_ComponentProxy */
#ifndef _defined_POA_Bonobo_ControlFactory
#define _defined_POA_Bonobo_ControlFactory 1
typedef struct {
  void *_private;
Bonobo_Control (*createControl)(PortableServer_Servant _servant, const Bonobo_ControlFrame frame, const Bonobo_UIContainer uic, CORBA_Environment *ev);
void (*unImplemented1)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented2)(PortableServer_Servant _servant, CORBA_Environment *ev);
} POA_Bonobo_ControlFactory__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
  POA_Bonobo_ControlFactory__epv *Bonobo_ControlFactory_epv;
} POA_Bonobo_ControlFactory__vepv;
typedef struct {
  void *_private;
  POA_Bonobo_ControlFactory__vepv *vepv;
} POA_Bonobo_ControlFactory;
extern void POA_Bonobo_ControlFactory__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_Bonobo_ControlFactory__fini(PortableServer_Servant servant, CORBA_Environment *ev);
#endif /* _defined_POA_Bonobo_ControlFactory */
#ifndef _defined_POA_Bonobo_CanvasComponentFactory
#define _defined_POA_Bonobo_CanvasComponentFactory 1
typedef struct {
  void *_private;
Bonobo_Canvas_Component (*createCanvasComponent)(PortableServer_Servant _servant, const CORBA_boolean aa, const Bonobo_Canvas_ComponentProxy proxy, CORBA_Environment *ev);
void (*unImplemented1)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented2)(PortableServer_Servant _servant, CORBA_Environment *ev);
} POA_Bonobo_CanvasComponentFactory__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
  POA_Bonobo_CanvasComponentFactory__epv *Bonobo_CanvasComponentFactory_epv;
} POA_Bonobo_CanvasComponentFactory__vepv;
typedef struct {
  void *_private;
  POA_Bonobo_CanvasComponentFactory__vepv *vepv;
} POA_Bonobo_CanvasComponentFactory;
extern void POA_Bonobo_CanvasComponentFactory__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_Bonobo_CanvasComponentFactory__fini(PortableServer_Servant servant, CORBA_Environment *ev);
#endif /* _defined_POA_Bonobo_CanvasComponentFactory */
#ifndef _defined_POA_Bonobo_Embeddable
#define _defined_POA_Bonobo_Embeddable 1
typedef struct {
  void *_private;
void (*unImplemented1)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented2)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented3)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented4)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented5)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented6)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented7)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented8)(PortableServer_Servant _servant, CORBA_Environment *ev);
} POA_Bonobo_Embeddable__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
  POA_Bonobo_Embeddable__epv *Bonobo_Embeddable_epv;
} POA_Bonobo_Embeddable__vepv;
typedef struct {
  void *_private;
  POA_Bonobo_Embeddable__vepv *vepv;
} POA_Bonobo_Embeddable;
extern void POA_Bonobo_Embeddable__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_Bonobo_Embeddable__fini(PortableServer_Servant servant, CORBA_Environment *ev);
#endif /* _defined_POA_Bonobo_Embeddable */
#ifndef _defined_POA_Bonobo_Print
#define _defined_POA_Bonobo_Print 1
typedef struct {
  void *_private;
Bonobo_Stream (*render)(PortableServer_Servant _servant, const Bonobo_PrintDimensions* pd, const Bonobo_PrintScissor* scissor, CORBA_Environment *ev);
void (*unImplemented1)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented2)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented3)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented4)(PortableServer_Servant _servant, CORBA_Environment *ev);
} POA_Bonobo_Print__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
  POA_Bonobo_Print__epv *Bonobo_Print_epv;
} POA_Bonobo_Print__vepv;
typedef struct {
  void *_private;
  POA_Bonobo_Print__vepv *vepv;
} POA_Bonobo_Print;
extern void POA_Bonobo_Print__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_Bonobo_Print__fini(PortableServer_Servant servant, CORBA_Environment *ev);
#endif /* _defined_POA_Bonobo_Print */
#ifndef _defined_POA_Bonobo_Clipboard
#define _defined_POA_Bonobo_Clipboard 1
typedef struct {
  void *_private;
void (*setClipboard)(PortableServer_Servant _servant, const Bonobo_Moniker pasting_moniker, const Bonobo_Moniker linking_moniker, CORBA_Environment *ev);
Bonobo_Moniker (*paste)(PortableServer_Servant _servant, CORBA_Environment *ev);
Bonobo_Moniker (*link)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented1)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented2)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented3)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented4)(PortableServer_Servant _servant, CORBA_Environment *ev);
} POA_Bonobo_Clipboard__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
  POA_Bonobo_Clipboard__epv *Bonobo_Clipboard_epv;
} POA_Bonobo_Clipboard__vepv;
typedef struct {
  void *_private;
  POA_Bonobo_Clipboard__vepv *vepv;
} POA_Bonobo_Clipboard;
extern void POA_Bonobo_Clipboard__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_Bonobo_Clipboard__fini(PortableServer_Servant servant, CORBA_Environment *ev);
#endif /* _defined_POA_Bonobo_Clipboard */
#ifndef _defined_POA_Bonobo_ClipboardStore
#define _defined_POA_Bonobo_ClipboardStore 1
typedef struct {
  void *_private;
void (*fetchStream)(PortableServer_Servant _servant, const Bonobo_PersistStream source, const Bonobo_Moniker linking_moniker, CORBA_Environment *ev);
void (*fetchStorage)(PortableServer_Servant _servant, const Bonobo_PersistStorage source, const Bonobo_Moniker linking_moniker, CORBA_Environment *ev);
void (*unImplemented1)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented2)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented3)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unImplemented4)(PortableServer_Servant _servant, CORBA_Environment *ev);
} POA_Bonobo_ClipboardStore__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
  POA_Bonobo_ClipboardStore__epv *Bonobo_ClipboardStore_epv;
} POA_Bonobo_ClipboardStore__vepv;
typedef struct {
  void *_private;
  POA_Bonobo_ClipboardStore__vepv *vepv;
} POA_Bonobo_ClipboardStore;
extern void POA_Bonobo_ClipboardStore__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_Bonobo_ClipboardStore__fini(PortableServer_Servant servant, CORBA_Environment *ev);
#endif /* _defined_POA_Bonobo_ClipboardStore */
#ifndef _defined_POA_Bonobo_Application
#define _defined_POA_Bonobo_Application 1
typedef struct {
  void *_private;
CORBA_any* (*message)(PortableServer_Servant _servant, const CORBA_char * msg, const Bonobo_Application_ArgList* args, CORBA_Environment *ev);
CORBA_long (*newInstance)(PortableServer_Servant _servant, const Bonobo_Application_argv_t* argv, CORBA_Environment *ev);
Bonobo_Application_MessageList* (*listMessages)(PortableServer_Servant _servant, CORBA_Environment *ev);
CORBA_string (*getName)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unimplemented1)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unimplemented2)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unimplemented3)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unimplemented4)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unimplemented5)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unimplemented6)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unimplemented7)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*unimplemented8)(PortableServer_Servant _servant, CORBA_Environment *ev);
} POA_Bonobo_Application__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
  POA_Bonobo_Application__epv *Bonobo_Application_epv;
} POA_Bonobo_Application__vepv;
typedef struct {
  void *_private;
  POA_Bonobo_Application__vepv *vepv;
} POA_Bonobo_Application;
extern void POA_Bonobo_Application__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_Bonobo_Application__fini(PortableServer_Servant servant, CORBA_Environment *ev);
#endif /* _defined_POA_Bonobo_Application */

/** skel prototypes **/
void _ORBIT_skel_small_Bonobo_Moniker_getParent(POA_Bonobo_Moniker *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, Bonobo_Moniker (*_impl_getParent)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Moniker_setParent(POA_Bonobo_Moniker *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_setParent)(PortableServer_Servant _servant, const Bonobo_Moniker parent, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Moniker_getName(POA_Bonobo_Moniker *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_string (*_impl_getName)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Moniker_setName(POA_Bonobo_Moniker *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_setName)(PortableServer_Servant _servant, const CORBA_char * name, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Moniker_resolve(POA_Bonobo_Moniker *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, Bonobo_Unknown (*_impl_resolve)(PortableServer_Servant _servant, const Bonobo_ResolveOptions* options, const CORBA_char * requestedInterface, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Moniker_equal(POA_Bonobo_Moniker *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_long (*_impl_equal)(PortableServer_Servant _servant, const CORBA_char * name, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Moniker_unImplemented1(POA_Bonobo_Moniker *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented1)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Moniker_unImplemented2(POA_Bonobo_Moniker *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented2)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_MonikerExtender_resolve(POA_Bonobo_MonikerExtender *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, Bonobo_Unknown (*_impl_resolve)(PortableServer_Servant _servant, const Bonobo_Moniker m, const Bonobo_ResolveOptions* options, const CORBA_char * name, const CORBA_char * requestedInterface, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_MonikerExtender_unImplemented1(POA_Bonobo_MonikerExtender *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented1)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_MonikerExtender_unImplemented2(POA_Bonobo_MonikerExtender *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented2)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_MonikerExtender_unImplemented3(POA_Bonobo_MonikerExtender *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented3)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_MonikerExtender_unImplemented4(POA_Bonobo_MonikerExtender *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented4)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Stream_getInfo(POA_Bonobo_Stream *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, Bonobo_StorageInfo* (*_impl_getInfo)(PortableServer_Servant _servant, const Bonobo_StorageInfoFields mask, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Stream_setInfo(POA_Bonobo_Stream *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_setInfo)(PortableServer_Servant _servant, const Bonobo_StorageInfo* info, const Bonobo_StorageInfoFields mask, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Stream_read(POA_Bonobo_Stream *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_read)(PortableServer_Servant _servant, const CORBA_long count, Bonobo_Stream_iobuf** buffer, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Stream_write(POA_Bonobo_Stream *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_write)(PortableServer_Servant _servant, const Bonobo_Stream_iobuf* buffer, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Stream_seek(POA_Bonobo_Stream *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_long (*_impl_seek)(PortableServer_Servant _servant, const CORBA_long offset, const Bonobo_Stream_SeekType whence, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Stream_truncate(POA_Bonobo_Stream *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_truncate)(PortableServer_Servant _servant, const CORBA_long length, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Stream_commit(POA_Bonobo_Stream *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_commit)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Stream_revert(POA_Bonobo_Stream *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_revert)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Stream_unImplemented1(POA_Bonobo_Stream *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented1)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Stream_unImplemented2(POA_Bonobo_Stream *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented2)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Storage_getInfo(POA_Bonobo_Storage *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, Bonobo_StorageInfo* (*_impl_getInfo)(PortableServer_Servant _servant, const CORBA_char * path, const Bonobo_StorageInfoFields mask, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Storage_setInfo(POA_Bonobo_Storage *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_setInfo)(PortableServer_Servant _servant, const CORBA_char * path, const Bonobo_StorageInfo* info, const Bonobo_StorageInfoFields mask, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Storage_openStream(POA_Bonobo_Storage *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, Bonobo_Stream (*_impl_openStream)(PortableServer_Servant _servant, const CORBA_char * path, const Bonobo_Storage_OpenMode mode, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Storage_openStorage(POA_Bonobo_Storage *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, Bonobo_Storage (*_impl_openStorage)(PortableServer_Servant _servant, const CORBA_char * path, const Bonobo_Storage_OpenMode mode, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Storage_copyTo(POA_Bonobo_Storage *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_copyTo)(PortableServer_Servant _servant, const Bonobo_Storage target, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Storage_listContents(POA_Bonobo_Storage *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, Bonobo_Storage_DirectoryList* (*_impl_listContents)(PortableServer_Servant _servant, const CORBA_char * path, const Bonobo_StorageInfoFields mask, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Storage_erase(POA_Bonobo_Storage *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_erase)(PortableServer_Servant _servant, const CORBA_char * path, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Storage_rename(POA_Bonobo_Storage *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_rename)(PortableServer_Servant _servant, const CORBA_char * path_name, const CORBA_char * new_path_name, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Storage_commit(POA_Bonobo_Storage *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_commit)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Storage_revert(POA_Bonobo_Storage *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_revert)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Storage_unImplemented1(POA_Bonobo_Storage *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented1)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Storage_unImplemented2(POA_Bonobo_Storage *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented2)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_MonikerContext_getObject(POA_Bonobo_MonikerContext *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, Bonobo_Unknown (*_impl_getObject)(PortableServer_Servant _servant, const CORBA_char * name, const CORBA_char * repoId, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_MonikerContext_createFromName(POA_Bonobo_MonikerContext *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, Bonobo_Moniker (*_impl_createFromName)(PortableServer_Servant _servant, const CORBA_char * name, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_MonikerContext_getExtender(POA_Bonobo_MonikerContext *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, Bonobo_MonikerExtender (*_impl_getExtender)(PortableServer_Servant _servant, const CORBA_char * monikerPrefix, const CORBA_char * interfaceId, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_MonikerContext_unImplemented1(POA_Bonobo_MonikerContext *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented1)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_MonikerContext_unImplemented2(POA_Bonobo_MonikerContext *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented2)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_MonikerContext_unImplemented3(POA_Bonobo_MonikerContext *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented3)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_MonikerContext_unImplemented4(POA_Bonobo_MonikerContext *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented4)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_MonikerContext_unImplemented5(POA_Bonobo_MonikerContext *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented5)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_MonikerContext_unImplemented6(POA_Bonobo_MonikerContext *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented6)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_RunningContext_addObject(POA_Bonobo_RunningContext *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_addObject)(PortableServer_Servant _servant, const CORBA_Object obj, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_RunningContext_removeObject(POA_Bonobo_RunningContext *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_removeObject)(PortableServer_Servant _servant, const CORBA_Object obj, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_RunningContext_addKey(POA_Bonobo_RunningContext *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_addKey)(PortableServer_Servant _servant, const CORBA_char * key, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_RunningContext_removeKey(POA_Bonobo_RunningContext *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_removeKey)(PortableServer_Servant _servant, const CORBA_char * key, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_RunningContext_atExitUnref(POA_Bonobo_RunningContext *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_atExitUnref)(PortableServer_Servant _servant, const CORBA_Object obj, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_RunningContext_unImplemented1(POA_Bonobo_RunningContext *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented1)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_RunningContext_unImplemented2(POA_Bonobo_RunningContext *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented2)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Persist_getContentTypes(POA_Bonobo_Persist *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, Bonobo_Persist_ContentTypeList* (*_impl_getContentTypes)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Persist_getIId(POA_Bonobo_Persist *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, Bonobo_Persist_IID (*_impl_getIId)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Persist_isDirty(POA_Bonobo_Persist *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_boolean (*_impl_isDirty)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Persist_unImplemented1(POA_Bonobo_Persist *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented1)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Persist_unImplemented2(POA_Bonobo_Persist *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented2)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_PersistFile_load(POA_Bonobo_PersistFile *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_load)(PortableServer_Servant _servant, const CORBA_char * uri, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_PersistFile_save(POA_Bonobo_PersistFile *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_save)(PortableServer_Servant _servant, const CORBA_char * uri, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_PersistFile_getCurrentFile(POA_Bonobo_PersistFile *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_string (*_impl_getCurrentFile)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_PersistFile_unImplemented3(POA_Bonobo_PersistFile *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented3)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_PersistFile_unImplemented4(POA_Bonobo_PersistFile *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented4)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_PersistStorage_load(POA_Bonobo_PersistStorage *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_load)(PortableServer_Servant _servant, const Bonobo_Storage storage, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_PersistStorage_save(POA_Bonobo_PersistStorage *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_save)(PortableServer_Servant _servant, const Bonobo_Storage storage, const CORBA_boolean same_as_loaded, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_PersistStream_load(POA_Bonobo_PersistStream *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_load)(PortableServer_Servant _servant, const Bonobo_Stream stream, const CORBA_char * type, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_PersistStream_save(POA_Bonobo_PersistStream *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_save)(PortableServer_Servant _servant, const Bonobo_Stream stream, const CORBA_char * type, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_PersistStream_unImplemented3(POA_Bonobo_PersistStream *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented3)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_PersistStream_unImplemented4(POA_Bonobo_PersistStream *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented4)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Listener_event(POA_Bonobo_Listener *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_event)(PortableServer_Servant _servant, const CORBA_char * event_name, const CORBA_any* args, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Listener_unImplemented(POA_Bonobo_Listener *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Listener_unImplemented2(POA_Bonobo_Listener *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented2)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_EventSource_addListener(POA_Bonobo_EventSource *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_addListener)(PortableServer_Servant _servant, const Bonobo_Listener l, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_EventSource_addListenerWithMask(POA_Bonobo_EventSource *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_addListenerWithMask)(PortableServer_Servant _servant, const Bonobo_Listener l, const CORBA_char * event_mask, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_EventSource_removeListener(POA_Bonobo_EventSource *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_removeListener)(PortableServer_Servant _servant, const Bonobo_Listener l, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_EventSource_unImplemented(POA_Bonobo_EventSource *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_EventSource_unImplemented2(POA_Bonobo_EventSource *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented2)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_UIComponent_setContainer(POA_Bonobo_UIComponent *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_setContainer)(PortableServer_Servant _servant, const Bonobo_UIContainer container, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_UIComponent_unsetContainer(POA_Bonobo_UIComponent *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unsetContainer)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_UIComponent__get_name(POA_Bonobo_UIComponent *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_string (*_impl__get_name)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_UIComponent_describeVerbs(POA_Bonobo_UIComponent *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_string (*_impl_describeVerbs)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_UIComponent_execVerb(POA_Bonobo_UIComponent *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_execVerb)(PortableServer_Servant _servant, const CORBA_char * cname, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_UIComponent_uiEvent(POA_Bonobo_UIComponent *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_uiEvent)(PortableServer_Servant _servant, const CORBA_char * id, const Bonobo_UIComponent_EventType type, const CORBA_char * state, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_UIComponent_unImplemented(POA_Bonobo_UIComponent *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_UIComponent_unImplemented2(POA_Bonobo_UIComponent *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented2)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_UIComponent_unImplemented3(POA_Bonobo_UIComponent *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented3)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_UIComponent_unImplemented4(POA_Bonobo_UIComponent *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented4)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_UIContainer_registerComponent(POA_Bonobo_UIContainer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_registerComponent)(PortableServer_Servant _servant, const CORBA_char * component_name, const Bonobo_UIComponent component, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_UIContainer_deregisterComponent(POA_Bonobo_UIContainer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_deregisterComponent)(PortableServer_Servant _servant, const CORBA_char * component_name, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_UIContainer_freeze(POA_Bonobo_UIContainer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_freeze)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_UIContainer_thaw(POA_Bonobo_UIContainer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_thaw)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_UIContainer_setAttr(POA_Bonobo_UIContainer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_setAttr)(PortableServer_Servant _servant, const CORBA_char * path, const CORBA_char * attr, const CORBA_char * value, const CORBA_char * component_name, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_UIContainer_getAttr(POA_Bonobo_UIContainer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_string (*_impl_getAttr)(PortableServer_Servant _servant, const CORBA_char * path, const CORBA_char * attr, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_UIContainer_setNode(POA_Bonobo_UIContainer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_setNode)(PortableServer_Servant _servant, const CORBA_char * path, const CORBA_char * xml, const CORBA_char * component_name, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_UIContainer_getNode(POA_Bonobo_UIContainer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_string (*_impl_getNode)(PortableServer_Servant _servant, const CORBA_char * path, const CORBA_boolean nodeOnly, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_UIContainer_removeNode(POA_Bonobo_UIContainer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_removeNode)(PortableServer_Servant _servant, const CORBA_char * path, const CORBA_char * by_component_name, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_UIContainer_exists(POA_Bonobo_UIContainer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_boolean (*_impl_exists)(PortableServer_Servant _servant, const CORBA_char * path, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_UIContainer_execVerb(POA_Bonobo_UIContainer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_execVerb)(PortableServer_Servant _servant, const CORBA_char * cname, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_UIContainer_uiEvent(POA_Bonobo_UIContainer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_uiEvent)(PortableServer_Servant _servant, const CORBA_char * id, const Bonobo_UIComponent_EventType type, const CORBA_char * state, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_UIContainer_setObject(POA_Bonobo_UIContainer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_setObject)(PortableServer_Servant _servant, const CORBA_char * path, const Bonobo_Unknown control, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_UIContainer_getObject(POA_Bonobo_UIContainer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, Bonobo_Unknown (*_impl_getObject)(PortableServer_Servant _servant, const CORBA_char * path, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_UIContainer_unImplemented(POA_Bonobo_UIContainer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_UIContainer_unImplemented2(POA_Bonobo_UIContainer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented2)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_UIContainer_unImplemented3(POA_Bonobo_UIContainer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented3)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_UIContainer_unImplemented4(POA_Bonobo_UIContainer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented4)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_PropertyBag_getKeys(POA_Bonobo_PropertyBag *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, Bonobo_KeyList* (*_impl_getKeys)(PortableServer_Servant _servant, const CORBA_char * filter, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_PropertyBag_getType(POA_Bonobo_PropertyBag *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_TypeCode (*_impl_getType)(PortableServer_Servant _servant, const CORBA_char * key, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_PropertyBag_getValue(POA_Bonobo_PropertyBag *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_any* (*_impl_getValue)(PortableServer_Servant _servant, const CORBA_char * key, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_PropertyBag_setValue(POA_Bonobo_PropertyBag *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_setValue)(PortableServer_Servant _servant, const CORBA_char * key, const CORBA_any* value, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_PropertyBag_getValues(POA_Bonobo_PropertyBag *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, Bonobo_PropertySet* (*_impl_getValues)(PortableServer_Servant _servant, const CORBA_char * filter, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_PropertyBag_setValues(POA_Bonobo_PropertyBag *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_setValues)(PortableServer_Servant _servant, const Bonobo_PropertySet* set, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_PropertyBag_getDefault(POA_Bonobo_PropertyBag *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_any* (*_impl_getDefault)(PortableServer_Servant _servant, const CORBA_char * key, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_PropertyBag_getDocTitle(POA_Bonobo_PropertyBag *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_string (*_impl_getDocTitle)(PortableServer_Servant _servant, const CORBA_char * key, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_PropertyBag_getDoc(POA_Bonobo_PropertyBag *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_string (*_impl_getDoc)(PortableServer_Servant _servant, const CORBA_char * key, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_PropertyBag_getFlags(POA_Bonobo_PropertyBag *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, Bonobo_PropertyFlags (*_impl_getFlags)(PortableServer_Servant _servant, const CORBA_char * key, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_PropertyBag_unImplemented1(POA_Bonobo_PropertyBag *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented1)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_PropertyBag_unImplemented2(POA_Bonobo_PropertyBag *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented2)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_PropertyBag_unImplemented3(POA_Bonobo_PropertyBag *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented3)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_PropertyBag_unImplemented4(POA_Bonobo_PropertyBag *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented4)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_ConfigDatabase__get_isWriteable(POA_Bonobo_ConfigDatabase *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_boolean (*_impl__get_isWriteable)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_ConfigDatabase_getDirs(POA_Bonobo_ConfigDatabase *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, Bonobo_KeyList* (*_impl_getDirs)(PortableServer_Servant _servant, const CORBA_char * dir, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_ConfigDatabase_hasDir(POA_Bonobo_ConfigDatabase *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_boolean (*_impl_hasDir)(PortableServer_Servant _servant, const CORBA_char * dir, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_ConfigDatabase_removeValue(POA_Bonobo_ConfigDatabase *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_removeValue)(PortableServer_Servant _servant, const CORBA_char * key, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_ConfigDatabase_removeDir(POA_Bonobo_ConfigDatabase *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_removeDir)(PortableServer_Servant _servant, const CORBA_char * dir, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_ConfigDatabase_addDatabase(POA_Bonobo_ConfigDatabase *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_addDatabase)(PortableServer_Servant _servant, const Bonobo_ConfigDatabase db, const CORBA_char * key, const Bonobo_ConfigDatabase_DBFlags flags, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_ConfigDatabase_sync(POA_Bonobo_ConfigDatabase *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_sync)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_ConfigDatabase_unImplemented5(POA_Bonobo_ConfigDatabase *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented5)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_ConfigDatabase_unImplemented6(POA_Bonobo_ConfigDatabase *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented6)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_ConfigDatabase_unImplemented7(POA_Bonobo_ConfigDatabase *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented7)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_ConfigDatabase_unImplemented8(POA_Bonobo_ConfigDatabase *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented8)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_ControlFrame_getToplevelId(POA_Bonobo_ControlFrame *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, Bonobo_Gdk_WindowId (*_impl_getToplevelId)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_ControlFrame_getAmbientProperties(POA_Bonobo_ControlFrame *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, Bonobo_PropertyBag (*_impl_getAmbientProperties)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_ControlFrame_getUIContainer(POA_Bonobo_ControlFrame *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, Bonobo_UIContainer (*_impl_getUIContainer)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_ControlFrame_notifyActivated(POA_Bonobo_ControlFrame *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_notifyActivated)(PortableServer_Servant _servant, const CORBA_boolean state, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_ControlFrame_queueResize(POA_Bonobo_ControlFrame *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_queueResize)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_ControlFrame_activateURI(POA_Bonobo_ControlFrame *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_activateURI)(PortableServer_Servant _servant, const CORBA_char * uri, const CORBA_boolean relative, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_ControlFrame_getParentAccessible(POA_Bonobo_ControlFrame *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, Bonobo_Unknown (*_impl_getParentAccessible)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_ControlFrame_unImplemented(POA_Bonobo_ControlFrame *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_ControlFrame_unImplemented2(POA_Bonobo_ControlFrame *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented2)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Control_getProperties(POA_Bonobo_Control *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, Bonobo_PropertyBag (*_impl_getProperties)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Control_getDesiredSize(POA_Bonobo_Control *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, Bonobo_Gtk_Requisition (*_impl_getDesiredSize)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Control_getAccessible(POA_Bonobo_Control *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, Bonobo_Unknown (*_impl_getAccessible)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Control_getWindowId(POA_Bonobo_Control *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, Bonobo_Gdk_WindowId (*_impl_getWindowId)(PortableServer_Servant _servant, const CORBA_char * cookie, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Control_getPopupContainer(POA_Bonobo_Control *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, Bonobo_UIContainer (*_impl_getPopupContainer)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Control_setFrame(POA_Bonobo_Control *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_setFrame)(PortableServer_Servant _servant, const Bonobo_ControlFrame frame, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Control_setSize(POA_Bonobo_Control *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_setSize)(PortableServer_Servant _servant, const CORBA_short width, const CORBA_short height, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Control_setState(POA_Bonobo_Control *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_setState)(PortableServer_Servant _servant, const Bonobo_Gtk_State state, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Control_activate(POA_Bonobo_Control *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_activate)(PortableServer_Servant _servant, const CORBA_boolean activate, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Control_focus(POA_Bonobo_Control *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_boolean (*_impl_focus)(PortableServer_Servant _servant, const Bonobo_Gtk_Direction direction, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Control_unImplemented(POA_Bonobo_Control *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Control_unImplemented2(POA_Bonobo_Control *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented2)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Control_unImplemented3(POA_Bonobo_Control *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented3)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_PropertyControl__get_pageCount(POA_Bonobo_PropertyControl *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_long (*_impl__get_pageCount)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_PropertyControl_getControl(POA_Bonobo_PropertyControl *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, Bonobo_Control (*_impl_getControl)(PortableServer_Servant _servant, const CORBA_long pagenumber, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_PropertyControl_notifyAction(POA_Bonobo_PropertyControl *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_notifyAction)(PortableServer_Servant _servant, const CORBA_long pagenumber, const Bonobo_PropertyControl_Action action, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_PropertyControl_unImplemented(POA_Bonobo_PropertyControl *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_PropertyControl_unImplemented2(POA_Bonobo_PropertyControl *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented2)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_ZoomableFrame_onLevelChanged(POA_Bonobo_ZoomableFrame *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_onLevelChanged)(PortableServer_Servant _servant, const CORBA_float zoom_level, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_ZoomableFrame_onParametersChanged(POA_Bonobo_ZoomableFrame *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_onParametersChanged)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_ZoomableFrame_unImplemented1(POA_Bonobo_ZoomableFrame *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented1)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_ZoomableFrame_unImplemented2(POA_Bonobo_ZoomableFrame *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented2)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_ZoomableFrame_unImplemented3(POA_Bonobo_ZoomableFrame *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented3)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_ZoomableFrame_unImplemented4(POA_Bonobo_ZoomableFrame *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented4)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Zoomable__get_level(POA_Bonobo_Zoomable *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_float (*_impl__get_level)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Zoomable__get_minLevel(POA_Bonobo_Zoomable *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_float (*_impl__get_minLevel)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Zoomable__get_maxLevel(POA_Bonobo_Zoomable *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_float (*_impl__get_maxLevel)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Zoomable__get_hasMinLevel(POA_Bonobo_Zoomable *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_boolean (*_impl__get_hasMinLevel)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Zoomable__get_hasMaxLevel(POA_Bonobo_Zoomable *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_boolean (*_impl__get_hasMaxLevel)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Zoomable__get_isContinuous(POA_Bonobo_Zoomable *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_boolean (*_impl__get_isContinuous)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Zoomable__get_preferredLevels(POA_Bonobo_Zoomable *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, Bonobo_ZoomLevelList* (*_impl__get_preferredLevels)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Zoomable__get_preferredLevelNames(POA_Bonobo_Zoomable *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, Bonobo_ZoomLevelNameList* (*_impl__get_preferredLevelNames)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Zoomable_zoomIn(POA_Bonobo_Zoomable *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_zoomIn)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Zoomable_zoomOut(POA_Bonobo_Zoomable *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_zoomOut)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Zoomable_zoomFit(POA_Bonobo_Zoomable *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_zoomFit)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Zoomable_zoomDefault(POA_Bonobo_Zoomable *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_zoomDefault)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Zoomable_setLevel(POA_Bonobo_Zoomable *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_setLevel)(PortableServer_Servant _servant, const CORBA_float zoom_level, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Zoomable_setFrame(POA_Bonobo_Zoomable *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_setFrame)(PortableServer_Servant _servant, const Bonobo_ZoomableFrame zoomable_frame, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Zoomable_unImplemented1(POA_Bonobo_Zoomable *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented1)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Zoomable_unImplemented2(POA_Bonobo_Zoomable *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented2)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Zoomable_unImplemented3(POA_Bonobo_Zoomable *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented3)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Zoomable_unImplemented4(POA_Bonobo_Zoomable *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented4)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_ItemContainer_enumObjects(POA_Bonobo_ItemContainer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, Bonobo_ItemContainer_ObjectNames* (*_impl_enumObjects)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_ItemContainer_getObjectByName(POA_Bonobo_ItemContainer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, Bonobo_Unknown (*_impl_getObjectByName)(PortableServer_Servant _servant, const CORBA_char * item_name, const CORBA_boolean only_if_exists, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_ItemContainer_unImplemented1(POA_Bonobo_ItemContainer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented1)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_ItemContainer_unImplemented2(POA_Bonobo_ItemContainer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented2)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_ItemContainer_unImplemented3(POA_Bonobo_ItemContainer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented3)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_ItemContainer_unImplemented4(POA_Bonobo_ItemContainer *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented4)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Canvas_Component_update(POA_Bonobo_Canvas_Component *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, Bonobo_Canvas_ArtUTA* (*_impl_update)(PortableServer_Servant _servant, const Bonobo_Canvas_State* state, const Bonobo_Canvas_affine aff, const Bonobo_Canvas_SVP* clip_path, const CORBA_long flags, CORBA_double* x1, CORBA_double* y1, CORBA_double* x2, CORBA_double* y2, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Canvas_Component_realize(POA_Bonobo_Canvas_Component *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_realize)(PortableServer_Servant _servant, const CORBA_char * drawable, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Canvas_Component_unrealize(POA_Bonobo_Canvas_Component *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unrealize)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Canvas_Component_map(POA_Bonobo_Canvas_Component *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_map)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Canvas_Component_unmap(POA_Bonobo_Canvas_Component *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unmap)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Canvas_Component_draw(POA_Bonobo_Canvas_Component *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_draw)(PortableServer_Servant _servant, const Bonobo_Canvas_State* state, const CORBA_char * drawable, const CORBA_short x, const CORBA_short y, const CORBA_short width, const CORBA_short height, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Canvas_Component_render(POA_Bonobo_Canvas_Component *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_render)(PortableServer_Servant _servant, Bonobo_Canvas_Buf* buf, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Canvas_Component_contains(POA_Bonobo_Canvas_Component *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_boolean (*_impl_contains)(PortableServer_Servant _servant, const CORBA_double x, const CORBA_double y, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Canvas_Component_bounds(POA_Bonobo_Canvas_Component *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_bounds)(PortableServer_Servant _servant, const Bonobo_Canvas_State* state, CORBA_double* x1, CORBA_double* x2, CORBA_double* y1, CORBA_double* y2, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Canvas_Component_event(POA_Bonobo_Canvas_Component *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_boolean (*_impl_event)(PortableServer_Servant _servant, const Bonobo_Canvas_State* state, const Bonobo_Gdk_Event* event, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Canvas_Component_setCanvasSize(POA_Bonobo_Canvas_Component *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_setCanvasSize)(PortableServer_Servant _servant, const CORBA_short x, const CORBA_short y, const CORBA_short width, const CORBA_short height, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Canvas_Component_setBounds(POA_Bonobo_Canvas_Component *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_setBounds)(PortableServer_Servant _servant, const Bonobo_Canvas_DRect* bbox, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Canvas_Component_unImplemented1(POA_Bonobo_Canvas_Component *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented1)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Canvas_Component_unImplemented2(POA_Bonobo_Canvas_Component *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented2)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Canvas_Component_unImplemented3(POA_Bonobo_Canvas_Component *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented3)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Canvas_Component_unImplemented4(POA_Bonobo_Canvas_Component *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented4)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Canvas_Component_unImplemented5(POA_Bonobo_Canvas_Component *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented5)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Canvas_Component_unImplemented6(POA_Bonobo_Canvas_Component *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented6)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Canvas_Component_unImplemented7(POA_Bonobo_Canvas_Component *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented7)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Canvas_Component_unImplemented8(POA_Bonobo_Canvas_Component *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented8)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Canvas_ComponentProxy_requestUpdate(POA_Bonobo_Canvas_ComponentProxy *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_requestUpdate)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Canvas_ComponentProxy_grabFocus(POA_Bonobo_Canvas_ComponentProxy *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_grabFocus)(PortableServer_Servant _servant, const CORBA_unsigned_long mask, const CORBA_long cursor, const CORBA_unsigned_long time, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Canvas_ComponentProxy_ungrabFocus(POA_Bonobo_Canvas_ComponentProxy *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_ungrabFocus)(PortableServer_Servant _servant, const CORBA_unsigned_long time, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Canvas_ComponentProxy_getUIContainer(POA_Bonobo_Canvas_ComponentProxy *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, Bonobo_UIContainer (*_impl_getUIContainer)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Canvas_ComponentProxy_unImplemented1(POA_Bonobo_Canvas_ComponentProxy *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented1)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Canvas_ComponentProxy_unImplemented2(POA_Bonobo_Canvas_ComponentProxy *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented2)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Canvas_ComponentProxy_unImplemented3(POA_Bonobo_Canvas_ComponentProxy *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented3)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Canvas_ComponentProxy_unImplemented4(POA_Bonobo_Canvas_ComponentProxy *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented4)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Canvas_ComponentProxy_unImplemented5(POA_Bonobo_Canvas_ComponentProxy *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented5)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Canvas_ComponentProxy_unImplemented6(POA_Bonobo_Canvas_ComponentProxy *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented6)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Canvas_ComponentProxy_unImplemented7(POA_Bonobo_Canvas_ComponentProxy *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented7)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Canvas_ComponentProxy_unImplemented8(POA_Bonobo_Canvas_ComponentProxy *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented8)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_ControlFactory_createControl(POA_Bonobo_ControlFactory *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, Bonobo_Control (*_impl_createControl)(PortableServer_Servant _servant, const Bonobo_ControlFrame frame, const Bonobo_UIContainer uic, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_ControlFactory_unImplemented1(POA_Bonobo_ControlFactory *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented1)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_ControlFactory_unImplemented2(POA_Bonobo_ControlFactory *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented2)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_CanvasComponentFactory_createCanvasComponent(POA_Bonobo_CanvasComponentFactory *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, Bonobo_Canvas_Component (*_impl_createCanvasComponent)(PortableServer_Servant _servant, const CORBA_boolean aa, const Bonobo_Canvas_ComponentProxy proxy, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_CanvasComponentFactory_unImplemented1(POA_Bonobo_CanvasComponentFactory *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented1)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_CanvasComponentFactory_unImplemented2(POA_Bonobo_CanvasComponentFactory *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented2)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Embeddable_unImplemented1(POA_Bonobo_Embeddable *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented1)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Embeddable_unImplemented2(POA_Bonobo_Embeddable *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented2)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Embeddable_unImplemented3(POA_Bonobo_Embeddable *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented3)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Embeddable_unImplemented4(POA_Bonobo_Embeddable *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented4)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Embeddable_unImplemented5(POA_Bonobo_Embeddable *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented5)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Embeddable_unImplemented6(POA_Bonobo_Embeddable *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented6)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Embeddable_unImplemented7(POA_Bonobo_Embeddable *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented7)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Embeddable_unImplemented8(POA_Bonobo_Embeddable *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented8)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Print_render(POA_Bonobo_Print *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, Bonobo_Stream (*_impl_render)(PortableServer_Servant _servant, const Bonobo_PrintDimensions* pd, const Bonobo_PrintScissor* scissor, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Print_unImplemented1(POA_Bonobo_Print *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented1)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Print_unImplemented2(POA_Bonobo_Print *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented2)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Print_unImplemented3(POA_Bonobo_Print *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented3)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Print_unImplemented4(POA_Bonobo_Print *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented4)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Clipboard_setClipboard(POA_Bonobo_Clipboard *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_setClipboard)(PortableServer_Servant _servant, const Bonobo_Moniker pasting_moniker, const Bonobo_Moniker linking_moniker, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Clipboard_paste(POA_Bonobo_Clipboard *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, Bonobo_Moniker (*_impl_paste)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Clipboard_link(POA_Bonobo_Clipboard *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, Bonobo_Moniker (*_impl_link)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Clipboard_unImplemented1(POA_Bonobo_Clipboard *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented1)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Clipboard_unImplemented2(POA_Bonobo_Clipboard *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented2)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Clipboard_unImplemented3(POA_Bonobo_Clipboard *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented3)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Clipboard_unImplemented4(POA_Bonobo_Clipboard *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented4)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_ClipboardStore_fetchStream(POA_Bonobo_ClipboardStore *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_fetchStream)(PortableServer_Servant _servant, const Bonobo_PersistStream source, const Bonobo_Moniker linking_moniker, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_ClipboardStore_fetchStorage(POA_Bonobo_ClipboardStore *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_fetchStorage)(PortableServer_Servant _servant, const Bonobo_PersistStorage source, const Bonobo_Moniker linking_moniker, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_ClipboardStore_unImplemented1(POA_Bonobo_ClipboardStore *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented1)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_ClipboardStore_unImplemented2(POA_Bonobo_ClipboardStore *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented2)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_ClipboardStore_unImplemented3(POA_Bonobo_ClipboardStore *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented3)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_ClipboardStore_unImplemented4(POA_Bonobo_ClipboardStore *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unImplemented4)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Application_message(POA_Bonobo_Application *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_any* (*_impl_message)(PortableServer_Servant _servant, const CORBA_char * msg, const Bonobo_Application_ArgList* args, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Application_newInstance(POA_Bonobo_Application *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_long (*_impl_newInstance)(PortableServer_Servant _servant, const Bonobo_Application_argv_t* argv, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Application_listMessages(POA_Bonobo_Application *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, Bonobo_Application_MessageList* (*_impl_listMessages)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Application_getName(POA_Bonobo_Application *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_string (*_impl_getName)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Application_unimplemented1(POA_Bonobo_Application *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unimplemented1)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Application_unimplemented2(POA_Bonobo_Application *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unimplemented2)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Application_unimplemented3(POA_Bonobo_Application *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unimplemented3)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Application_unimplemented4(POA_Bonobo_Application *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unimplemented4)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Application_unimplemented5(POA_Bonobo_Application *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unimplemented5)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Application_unimplemented6(POA_Bonobo_Application *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unimplemented6)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Application_unimplemented7(POA_Bonobo_Application *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unimplemented7)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_Bonobo_Application_unimplemented8(POA_Bonobo_Application *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_unimplemented8)(PortableServer_Servant _servant, CORBA_Environment *ev));

/** stub prototypes **/
#define Bonobo_Moniker_ref Bonobo_Unknown_ref
#define Bonobo_Moniker_unref Bonobo_Unknown_unref
#define Bonobo_Moniker_queryInterface Bonobo_Unknown_queryInterface
Bonobo_Moniker Bonobo_Moniker_getParent(Bonobo_Moniker _obj, CORBA_Environment *ev);
void Bonobo_Moniker_setParent(Bonobo_Moniker _obj, const Bonobo_Moniker parent, CORBA_Environment *ev);
CORBA_string Bonobo_Moniker_getName(Bonobo_Moniker _obj, CORBA_Environment *ev);
void Bonobo_Moniker_setName(Bonobo_Moniker _obj, const CORBA_char * name, CORBA_Environment *ev);
Bonobo_Unknown Bonobo_Moniker_resolve(Bonobo_Moniker _obj, const Bonobo_ResolveOptions* options, const CORBA_char * requestedInterface, CORBA_Environment *ev);
CORBA_long Bonobo_Moniker_equal(Bonobo_Moniker _obj, const CORBA_char * name, CORBA_Environment *ev);
void Bonobo_Moniker_unImplemented1(Bonobo_Moniker _obj, CORBA_Environment *ev);
void Bonobo_Moniker_unImplemented2(Bonobo_Moniker _obj, CORBA_Environment *ev);
#define Bonobo_MonikerExtender_ref Bonobo_Unknown_ref
#define Bonobo_MonikerExtender_unref Bonobo_Unknown_unref
#define Bonobo_MonikerExtender_queryInterface Bonobo_Unknown_queryInterface
Bonobo_Unknown Bonobo_MonikerExtender_resolve(Bonobo_MonikerExtender _obj, const Bonobo_Moniker m, const Bonobo_ResolveOptions* options, const CORBA_char * name, const CORBA_char * requestedInterface, CORBA_Environment *ev);
void Bonobo_MonikerExtender_unImplemented1(Bonobo_MonikerExtender _obj, CORBA_Environment *ev);
void Bonobo_MonikerExtender_unImplemented2(Bonobo_MonikerExtender _obj, CORBA_Environment *ev);
void Bonobo_MonikerExtender_unImplemented3(Bonobo_MonikerExtender _obj, CORBA_Environment *ev);
void Bonobo_MonikerExtender_unImplemented4(Bonobo_MonikerExtender _obj, CORBA_Environment *ev);
#define Bonobo_Stream_ref Bonobo_Unknown_ref
#define Bonobo_Stream_unref Bonobo_Unknown_unref
#define Bonobo_Stream_queryInterface Bonobo_Unknown_queryInterface
Bonobo_StorageInfo* Bonobo_Stream_getInfo(Bonobo_Stream _obj, const Bonobo_StorageInfoFields mask, CORBA_Environment *ev);
void Bonobo_Stream_setInfo(Bonobo_Stream _obj, const Bonobo_StorageInfo* info, const Bonobo_StorageInfoFields mask, CORBA_Environment *ev);
void Bonobo_Stream_read(Bonobo_Stream _obj, const CORBA_long count, Bonobo_Stream_iobuf** buffer, CORBA_Environment *ev);
void Bonobo_Stream_write(Bonobo_Stream _obj, const Bonobo_Stream_iobuf* buffer, CORBA_Environment *ev);
CORBA_long Bonobo_Stream_seek(Bonobo_Stream _obj, const CORBA_long offset, const Bonobo_Stream_SeekType whence, CORBA_Environment *ev);
void Bonobo_Stream_truncate(Bonobo_Stream _obj, const CORBA_long length, CORBA_Environment *ev);
void Bonobo_Stream_commit(Bonobo_Stream _obj, CORBA_Environment *ev);
void Bonobo_Stream_revert(Bonobo_Stream _obj, CORBA_Environment *ev);
void Bonobo_Stream_unImplemented1(Bonobo_Stream _obj, CORBA_Environment *ev);
void Bonobo_Stream_unImplemented2(Bonobo_Stream _obj, CORBA_Environment *ev);
#define Bonobo_Storage_ref Bonobo_Unknown_ref
#define Bonobo_Storage_unref Bonobo_Unknown_unref
#define Bonobo_Storage_queryInterface Bonobo_Unknown_queryInterface
Bonobo_StorageInfo* Bonobo_Storage_getInfo(Bonobo_Storage _obj, const CORBA_char * path, const Bonobo_StorageInfoFields mask, CORBA_Environment *ev);
void Bonobo_Storage_setInfo(Bonobo_Storage _obj, const CORBA_char * path, const Bonobo_StorageInfo* info, const Bonobo_StorageInfoFields mask, CORBA_Environment *ev);
Bonobo_Stream Bonobo_Storage_openStream(Bonobo_Storage _obj, const CORBA_char * path, const Bonobo_Storage_OpenMode mode, CORBA_Environment *ev);
Bonobo_Storage Bonobo_Storage_openStorage(Bonobo_Storage _obj, const CORBA_char * path, const Bonobo_Storage_OpenMode mode, CORBA_Environment *ev);
void Bonobo_Storage_copyTo(Bonobo_Storage _obj, const Bonobo_Storage target, CORBA_Environment *ev);
Bonobo_Storage_DirectoryList* Bonobo_Storage_listContents(Bonobo_Storage _obj, const CORBA_char * path, const Bonobo_StorageInfoFields mask, CORBA_Environment *ev);
void Bonobo_Storage_erase(Bonobo_Storage _obj, const CORBA_char * path, CORBA_Environment *ev);
void Bonobo_Storage_rename(Bonobo_Storage _obj, const CORBA_char * path_name, const CORBA_char * new_path_name, CORBA_Environment *ev);
void Bonobo_Storage_commit(Bonobo_Storage _obj, CORBA_Environment *ev);
void Bonobo_Storage_revert(Bonobo_Storage _obj, CORBA_Environment *ev);
void Bonobo_Storage_unImplemented1(Bonobo_Storage _obj, CORBA_Environment *ev);
void Bonobo_Storage_unImplemented2(Bonobo_Storage _obj, CORBA_Environment *ev);
#define Bonobo_MonikerContext_ref Bonobo_Unknown_ref
#define Bonobo_MonikerContext_unref Bonobo_Unknown_unref
#define Bonobo_MonikerContext_queryInterface Bonobo_Unknown_queryInterface
Bonobo_Unknown Bonobo_MonikerContext_getObject(Bonobo_MonikerContext _obj, const CORBA_char * name, const CORBA_char * repoId, CORBA_Environment *ev);
Bonobo_Moniker Bonobo_MonikerContext_createFromName(Bonobo_MonikerContext _obj, const CORBA_char * name, CORBA_Environment *ev);
Bonobo_MonikerExtender Bonobo_MonikerContext_getExtender(Bonobo_MonikerContext _obj, const CORBA_char * monikerPrefix, const CORBA_char * interfaceId, CORBA_Environment *ev);
void Bonobo_MonikerContext_unImplemented1(Bonobo_MonikerContext _obj, CORBA_Environment *ev);
void Bonobo_MonikerContext_unImplemented2(Bonobo_MonikerContext _obj, CORBA_Environment *ev);
void Bonobo_MonikerContext_unImplemented3(Bonobo_MonikerContext _obj, CORBA_Environment *ev);
void Bonobo_MonikerContext_unImplemented4(Bonobo_MonikerContext _obj, CORBA_Environment *ev);
void Bonobo_MonikerContext_unImplemented5(Bonobo_MonikerContext _obj, CORBA_Environment *ev);
void Bonobo_MonikerContext_unImplemented6(Bonobo_MonikerContext _obj, CORBA_Environment *ev);
#define Bonobo_RunningContext_ref Bonobo_Unknown_ref
#define Bonobo_RunningContext_unref Bonobo_Unknown_unref
#define Bonobo_RunningContext_queryInterface Bonobo_Unknown_queryInterface
void Bonobo_RunningContext_addObject(Bonobo_RunningContext _obj, const CORBA_Object obj, CORBA_Environment *ev);
void Bonobo_RunningContext_removeObject(Bonobo_RunningContext _obj, const CORBA_Object obj, CORBA_Environment *ev);
void Bonobo_RunningContext_addKey(Bonobo_RunningContext _obj, const CORBA_char * key, CORBA_Environment *ev);
void Bonobo_RunningContext_removeKey(Bonobo_RunningContext _obj, const CORBA_char * key, CORBA_Environment *ev);
void Bonobo_RunningContext_atExitUnref(Bonobo_RunningContext _obj, const CORBA_Object obj, CORBA_Environment *ev);
void Bonobo_RunningContext_unImplemented1(Bonobo_RunningContext _obj, CORBA_Environment *ev);
void Bonobo_RunningContext_unImplemented2(Bonobo_RunningContext _obj, CORBA_Environment *ev);
#define Bonobo_Persist_ref Bonobo_Unknown_ref
#define Bonobo_Persist_unref Bonobo_Unknown_unref
#define Bonobo_Persist_queryInterface Bonobo_Unknown_queryInterface
Bonobo_Persist_ContentTypeList* Bonobo_Persist_getContentTypes(Bonobo_Persist _obj, CORBA_Environment *ev);
Bonobo_Persist_IID Bonobo_Persist_getIId(Bonobo_Persist _obj, CORBA_Environment *ev);
CORBA_boolean Bonobo_Persist_isDirty(Bonobo_Persist _obj, CORBA_Environment *ev);
void Bonobo_Persist_unImplemented1(Bonobo_Persist _obj, CORBA_Environment *ev);
void Bonobo_Persist_unImplemented2(Bonobo_Persist _obj, CORBA_Environment *ev);
#define Bonobo_PersistFile_ref Bonobo_Unknown_ref
#define Bonobo_PersistFile_unref Bonobo_Unknown_unref
#define Bonobo_PersistFile_queryInterface Bonobo_Unknown_queryInterface
#define Bonobo_PersistFile_getContentTypes Bonobo_Persist_getContentTypes
#define Bonobo_PersistFile_getIId Bonobo_Persist_getIId
#define Bonobo_PersistFile_isDirty Bonobo_Persist_isDirty
#define Bonobo_PersistFile_unImplemented1 Bonobo_Persist_unImplemented1
#define Bonobo_PersistFile_unImplemented2 Bonobo_Persist_unImplemented2
void Bonobo_PersistFile_load(Bonobo_PersistFile _obj, const CORBA_char * uri, CORBA_Environment *ev);
void Bonobo_PersistFile_save(Bonobo_PersistFile _obj, const CORBA_char * uri, CORBA_Environment *ev);
CORBA_string Bonobo_PersistFile_getCurrentFile(Bonobo_PersistFile _obj, CORBA_Environment *ev);
void Bonobo_PersistFile_unImplemented3(Bonobo_PersistFile _obj, CORBA_Environment *ev);
void Bonobo_PersistFile_unImplemented4(Bonobo_PersistFile _obj, CORBA_Environment *ev);
#define Bonobo_PersistStorage_ref Bonobo_Unknown_ref
#define Bonobo_PersistStorage_unref Bonobo_Unknown_unref
#define Bonobo_PersistStorage_queryInterface Bonobo_Unknown_queryInterface
#define Bonobo_PersistStorage_getContentTypes Bonobo_Persist_getContentTypes
#define Bonobo_PersistStorage_getIId Bonobo_Persist_getIId
#define Bonobo_PersistStorage_isDirty Bonobo_Persist_isDirty
#define Bonobo_PersistStorage_unImplemented1 Bonobo_Persist_unImplemented1
#define Bonobo_PersistStorage_unImplemented2 Bonobo_Persist_unImplemented2
void Bonobo_PersistStorage_load(Bonobo_PersistStorage _obj, const Bonobo_Storage storage, CORBA_Environment *ev);
void Bonobo_PersistStorage_save(Bonobo_PersistStorage _obj, const Bonobo_Storage storage, const CORBA_boolean same_as_loaded, CORBA_Environment *ev);
#define Bonobo_PersistStream_ref Bonobo_Unknown_ref
#define Bonobo_PersistStream_unref Bonobo_Unknown_unref
#define Bonobo_PersistStream_queryInterface Bonobo_Unknown_queryInterface
#define Bonobo_PersistStream_getContentTypes Bonobo_Persist_getContentTypes
#define Bonobo_PersistStream_getIId Bonobo_Persist_getIId
#define Bonobo_PersistStream_isDirty Bonobo_Persist_isDirty
#define Bonobo_PersistStream_unImplemented1 Bonobo_Persist_unImplemented1
#define Bonobo_PersistStream_unImplemented2 Bonobo_Persist_unImplemented2
void Bonobo_PersistStream_load(Bonobo_PersistStream _obj, const Bonobo_Stream stream, const CORBA_char * type, CORBA_Environment *ev);
void Bonobo_PersistStream_save(Bonobo_PersistStream _obj, const Bonobo_Stream stream, const CORBA_char * type, CORBA_Environment *ev);
void Bonobo_PersistStream_unImplemented3(Bonobo_PersistStream _obj, CORBA_Environment *ev);
void Bonobo_PersistStream_unImplemented4(Bonobo_PersistStream _obj, CORBA_Environment *ev);
#define Bonobo_Listener_ref Bonobo_Unknown_ref
#define Bonobo_Listener_unref Bonobo_Unknown_unref
#define Bonobo_Listener_queryInterface Bonobo_Unknown_queryInterface
void Bonobo_Listener_event(Bonobo_Listener _obj, const CORBA_char * event_name, const CORBA_any* args, CORBA_Environment *ev);
void Bonobo_Listener_unImplemented(Bonobo_Listener _obj, CORBA_Environment *ev);
void Bonobo_Listener_unImplemented2(Bonobo_Listener _obj, CORBA_Environment *ev);
#define Bonobo_EventSource_ref Bonobo_Unknown_ref
#define Bonobo_EventSource_unref Bonobo_Unknown_unref
#define Bonobo_EventSource_queryInterface Bonobo_Unknown_queryInterface
void Bonobo_EventSource_addListener(Bonobo_EventSource _obj, const Bonobo_Listener l, CORBA_Environment *ev);
void Bonobo_EventSource_addListenerWithMask(Bonobo_EventSource _obj, const Bonobo_Listener l, const CORBA_char * event_mask, CORBA_Environment *ev);
void Bonobo_EventSource_removeListener(Bonobo_EventSource _obj, const Bonobo_Listener l, CORBA_Environment *ev);
void Bonobo_EventSource_unImplemented(Bonobo_EventSource _obj, CORBA_Environment *ev);
void Bonobo_EventSource_unImplemented2(Bonobo_EventSource _obj, CORBA_Environment *ev);
#define Bonobo_UIComponent_ref Bonobo_Unknown_ref
#define Bonobo_UIComponent_unref Bonobo_Unknown_unref
#define Bonobo_UIComponent_queryInterface Bonobo_Unknown_queryInterface
void Bonobo_UIComponent_setContainer(Bonobo_UIComponent _obj, const Bonobo_UIContainer container, CORBA_Environment *ev);
void Bonobo_UIComponent_unsetContainer(Bonobo_UIComponent _obj, CORBA_Environment *ev);
CORBA_string Bonobo_UIComponent__get_name(Bonobo_UIComponent _obj, CORBA_Environment *ev);
CORBA_string Bonobo_UIComponent_describeVerbs(Bonobo_UIComponent _obj, CORBA_Environment *ev);
void Bonobo_UIComponent_execVerb(Bonobo_UIComponent _obj, const CORBA_char * cname, CORBA_Environment *ev);
void Bonobo_UIComponent_uiEvent(Bonobo_UIComponent _obj, const CORBA_char * id, const Bonobo_UIComponent_EventType type, const CORBA_char * state, CORBA_Environment *ev);
void Bonobo_UIComponent_unImplemented(Bonobo_UIComponent _obj, CORBA_Environment *ev);
void Bonobo_UIComponent_unImplemented2(Bonobo_UIComponent _obj, CORBA_Environment *ev);
void Bonobo_UIComponent_unImplemented3(Bonobo_UIComponent _obj, CORBA_Environment *ev);
void Bonobo_UIComponent_unImplemented4(Bonobo_UIComponent _obj, CORBA_Environment *ev);
#define Bonobo_UIContainer_ref Bonobo_Unknown_ref
#define Bonobo_UIContainer_unref Bonobo_Unknown_unref
#define Bonobo_UIContainer_queryInterface Bonobo_Unknown_queryInterface
void Bonobo_UIContainer_registerComponent(Bonobo_UIContainer _obj, const CORBA_char * component_name, const Bonobo_UIComponent component, CORBA_Environment *ev);
void Bonobo_UIContainer_deregisterComponent(Bonobo_UIContainer _obj, const CORBA_char * component_name, CORBA_Environment *ev);
void Bonobo_UIContainer_freeze(Bonobo_UIContainer _obj, CORBA_Environment *ev);
void Bonobo_UIContainer_thaw(Bonobo_UIContainer _obj, CORBA_Environment *ev);
void Bonobo_UIContainer_setAttr(Bonobo_UIContainer _obj, const CORBA_char * path, const CORBA_char * attr, const CORBA_char * value, const CORBA_char * component_name, CORBA_Environment *ev);
CORBA_string Bonobo_UIContainer_getAttr(Bonobo_UIContainer _obj, const CORBA_char * path, const CORBA_char * attr, CORBA_Environment *ev);
void Bonobo_UIContainer_setNode(Bonobo_UIContainer _obj, const CORBA_char * path, const CORBA_char * xml, const CORBA_char * component_name, CORBA_Environment *ev);
CORBA_string Bonobo_UIContainer_getNode(Bonobo_UIContainer _obj, const CORBA_char * path, const CORBA_boolean nodeOnly, CORBA_Environment *ev);
void Bonobo_UIContainer_removeNode(Bonobo_UIContainer _obj, const CORBA_char * path, const CORBA_char * by_component_name, CORBA_Environment *ev);
CORBA_boolean Bonobo_UIContainer_exists(Bonobo_UIContainer _obj, const CORBA_char * path, CORBA_Environment *ev);
void Bonobo_UIContainer_execVerb(Bonobo_UIContainer _obj, const CORBA_char * cname, CORBA_Environment *ev);
void Bonobo_UIContainer_uiEvent(Bonobo_UIContainer _obj, const CORBA_char * id, const Bonobo_UIComponent_EventType type, const CORBA_char * state, CORBA_Environment *ev);
void Bonobo_UIContainer_setObject(Bonobo_UIContainer _obj, const CORBA_char * path, const Bonobo_Unknown control, CORBA_Environment *ev);
Bonobo_Unknown Bonobo_UIContainer_getObject(Bonobo_UIContainer _obj, const CORBA_char * path, CORBA_Environment *ev);
void Bonobo_UIContainer_unImplemented(Bonobo_UIContainer _obj, CORBA_Environment *ev);
void Bonobo_UIContainer_unImplemented2(Bonobo_UIContainer _obj, CORBA_Environment *ev);
void Bonobo_UIContainer_unImplemented3(Bonobo_UIContainer _obj, CORBA_Environment *ev);
void Bonobo_UIContainer_unImplemented4(Bonobo_UIContainer _obj, CORBA_Environment *ev);
#define Bonobo_PropertyBag_ref Bonobo_Unknown_ref
#define Bonobo_PropertyBag_unref Bonobo_Unknown_unref
#define Bonobo_PropertyBag_queryInterface Bonobo_Unknown_queryInterface
Bonobo_KeyList* Bonobo_PropertyBag_getKeys(Bonobo_PropertyBag _obj, const CORBA_char * filter, CORBA_Environment *ev);
CORBA_TypeCode Bonobo_PropertyBag_getType(Bonobo_PropertyBag _obj, const CORBA_char * key, CORBA_Environment *ev);
CORBA_any* Bonobo_PropertyBag_getValue(Bonobo_PropertyBag _obj, const CORBA_char * key, CORBA_Environment *ev);
void Bonobo_PropertyBag_setValue(Bonobo_PropertyBag _obj, const CORBA_char * key, const CORBA_any* value, CORBA_Environment *ev);
Bonobo_PropertySet* Bonobo_PropertyBag_getValues(Bonobo_PropertyBag _obj, const CORBA_char * filter, CORBA_Environment *ev);
void Bonobo_PropertyBag_setValues(Bonobo_PropertyBag _obj, const Bonobo_PropertySet* set, CORBA_Environment *ev);
CORBA_any* Bonobo_PropertyBag_getDefault(Bonobo_PropertyBag _obj, const CORBA_char * key, CORBA_Environment *ev);
CORBA_string Bonobo_PropertyBag_getDocTitle(Bonobo_PropertyBag _obj, const CORBA_char * key, CORBA_Environment *ev);
CORBA_string Bonobo_PropertyBag_getDoc(Bonobo_PropertyBag _obj, const CORBA_char * key, CORBA_Environment *ev);
Bonobo_PropertyFlags Bonobo_PropertyBag_getFlags(Bonobo_PropertyBag _obj, const CORBA_char * key, CORBA_Environment *ev);
void Bonobo_PropertyBag_unImplemented1(Bonobo_PropertyBag _obj, CORBA_Environment *ev);
void Bonobo_PropertyBag_unImplemented2(Bonobo_PropertyBag _obj, CORBA_Environment *ev);
void Bonobo_PropertyBag_unImplemented3(Bonobo_PropertyBag _obj, CORBA_Environment *ev);
void Bonobo_PropertyBag_unImplemented4(Bonobo_PropertyBag _obj, CORBA_Environment *ev);
#define Bonobo_ConfigDatabase_ref Bonobo_Unknown_ref
#define Bonobo_ConfigDatabase_unref Bonobo_Unknown_unref
#define Bonobo_ConfigDatabase_queryInterface Bonobo_Unknown_queryInterface
#define Bonobo_ConfigDatabase_getKeys Bonobo_PropertyBag_getKeys
#define Bonobo_ConfigDatabase_getType Bonobo_PropertyBag_getType
#define Bonobo_ConfigDatabase_getValue Bonobo_PropertyBag_getValue
#define Bonobo_ConfigDatabase_setValue Bonobo_PropertyBag_setValue
#define Bonobo_ConfigDatabase_getValues Bonobo_PropertyBag_getValues
#define Bonobo_ConfigDatabase_setValues Bonobo_PropertyBag_setValues
#define Bonobo_ConfigDatabase_getDefault Bonobo_PropertyBag_getDefault
#define Bonobo_ConfigDatabase_getDocTitle Bonobo_PropertyBag_getDocTitle
#define Bonobo_ConfigDatabase_getDoc Bonobo_PropertyBag_getDoc
#define Bonobo_ConfigDatabase_getFlags Bonobo_PropertyBag_getFlags
#define Bonobo_ConfigDatabase_unImplemented1 Bonobo_PropertyBag_unImplemented1
#define Bonobo_ConfigDatabase_unImplemented2 Bonobo_PropertyBag_unImplemented2
#define Bonobo_ConfigDatabase_unImplemented3 Bonobo_PropertyBag_unImplemented3
#define Bonobo_ConfigDatabase_unImplemented4 Bonobo_PropertyBag_unImplemented4
CORBA_boolean Bonobo_ConfigDatabase__get_isWriteable(Bonobo_ConfigDatabase _obj, CORBA_Environment *ev);
Bonobo_KeyList* Bonobo_ConfigDatabase_getDirs(Bonobo_ConfigDatabase _obj, const CORBA_char * dir, CORBA_Environment *ev);
CORBA_boolean Bonobo_ConfigDatabase_hasDir(Bonobo_ConfigDatabase _obj, const CORBA_char * dir, CORBA_Environment *ev);
void Bonobo_ConfigDatabase_removeValue(Bonobo_ConfigDatabase _obj, const CORBA_char * key, CORBA_Environment *ev);
void Bonobo_ConfigDatabase_removeDir(Bonobo_ConfigDatabase _obj, const CORBA_char * dir, CORBA_Environment *ev);
void Bonobo_ConfigDatabase_addDatabase(Bonobo_ConfigDatabase _obj, const Bonobo_ConfigDatabase db, const CORBA_char * key, const Bonobo_ConfigDatabase_DBFlags flags, CORBA_Environment *ev);
void Bonobo_ConfigDatabase_sync(Bonobo_ConfigDatabase _obj, CORBA_Environment *ev);
void Bonobo_ConfigDatabase_unImplemented5(Bonobo_ConfigDatabase _obj, CORBA_Environment *ev);
void Bonobo_ConfigDatabase_unImplemented6(Bonobo_ConfigDatabase _obj, CORBA_Environment *ev);
void Bonobo_ConfigDatabase_unImplemented7(Bonobo_ConfigDatabase _obj, CORBA_Environment *ev);
void Bonobo_ConfigDatabase_unImplemented8(Bonobo_ConfigDatabase _obj, CORBA_Environment *ev);
#define Bonobo_ControlFrame_ref Bonobo_Unknown_ref
#define Bonobo_ControlFrame_unref Bonobo_Unknown_unref
#define Bonobo_ControlFrame_queryInterface Bonobo_Unknown_queryInterface
Bonobo_Gdk_WindowId Bonobo_ControlFrame_getToplevelId(Bonobo_ControlFrame _obj, CORBA_Environment *ev);
Bonobo_PropertyBag Bonobo_ControlFrame_getAmbientProperties(Bonobo_ControlFrame _obj, CORBA_Environment *ev);
Bonobo_UIContainer Bonobo_ControlFrame_getUIContainer(Bonobo_ControlFrame _obj, CORBA_Environment *ev);
void Bonobo_ControlFrame_notifyActivated(Bonobo_ControlFrame _obj, const CORBA_boolean state, CORBA_Environment *ev);
void Bonobo_ControlFrame_queueResize(Bonobo_ControlFrame _obj, CORBA_Environment *ev);
void Bonobo_ControlFrame_activateURI(Bonobo_ControlFrame _obj, const CORBA_char * uri, const CORBA_boolean relative, CORBA_Environment *ev);
Bonobo_Unknown Bonobo_ControlFrame_getParentAccessible(Bonobo_ControlFrame _obj, CORBA_Environment *ev);
void Bonobo_ControlFrame_unImplemented(Bonobo_ControlFrame _obj, CORBA_Environment *ev);
void Bonobo_ControlFrame_unImplemented2(Bonobo_ControlFrame _obj, CORBA_Environment *ev);
#define Bonobo_Control_ref Bonobo_Unknown_ref
#define Bonobo_Control_unref Bonobo_Unknown_unref
#define Bonobo_Control_queryInterface Bonobo_Unknown_queryInterface
Bonobo_PropertyBag Bonobo_Control_getProperties(Bonobo_Control _obj, CORBA_Environment *ev);
Bonobo_Gtk_Requisition Bonobo_Control_getDesiredSize(Bonobo_Control _obj, CORBA_Environment *ev);
Bonobo_Unknown Bonobo_Control_getAccessible(Bonobo_Control _obj, CORBA_Environment *ev);
Bonobo_Gdk_WindowId Bonobo_Control_getWindowId(Bonobo_Control _obj, const CORBA_char * cookie, CORBA_Environment *ev);
Bonobo_UIContainer Bonobo_Control_getPopupContainer(Bonobo_Control _obj, CORBA_Environment *ev);
void Bonobo_Control_setFrame(Bonobo_Control _obj, const Bonobo_ControlFrame frame, CORBA_Environment *ev);
void Bonobo_Control_setSize(Bonobo_Control _obj, const CORBA_short width, const CORBA_short height, CORBA_Environment *ev);
void Bonobo_Control_setState(Bonobo_Control _obj, const Bonobo_Gtk_State state, CORBA_Environment *ev);
void Bonobo_Control_activate(Bonobo_Control _obj, const CORBA_boolean activate, CORBA_Environment *ev);
CORBA_boolean Bonobo_Control_focus(Bonobo_Control _obj, const Bonobo_Gtk_Direction direction, CORBA_Environment *ev);
void Bonobo_Control_unImplemented(Bonobo_Control _obj, CORBA_Environment *ev);
void Bonobo_Control_unImplemented2(Bonobo_Control _obj, CORBA_Environment *ev);
void Bonobo_Control_unImplemented3(Bonobo_Control _obj, CORBA_Environment *ev);
#define Bonobo_PropertyControl_ref Bonobo_Unknown_ref
#define Bonobo_PropertyControl_unref Bonobo_Unknown_unref
#define Bonobo_PropertyControl_queryInterface Bonobo_Unknown_queryInterface
CORBA_long Bonobo_PropertyControl__get_pageCount(Bonobo_PropertyControl _obj, CORBA_Environment *ev);
Bonobo_Control Bonobo_PropertyControl_getControl(Bonobo_PropertyControl _obj, const CORBA_long pagenumber, CORBA_Environment *ev);
void Bonobo_PropertyControl_notifyAction(Bonobo_PropertyControl _obj, const CORBA_long pagenumber, const Bonobo_PropertyControl_Action action, CORBA_Environment *ev);
void Bonobo_PropertyControl_unImplemented(Bonobo_PropertyControl _obj, CORBA_Environment *ev);
void Bonobo_PropertyControl_unImplemented2(Bonobo_PropertyControl _obj, CORBA_Environment *ev);
#define Bonobo_ZoomableFrame_ref Bonobo_Unknown_ref
#define Bonobo_ZoomableFrame_unref Bonobo_Unknown_unref
#define Bonobo_ZoomableFrame_queryInterface Bonobo_Unknown_queryInterface
void Bonobo_ZoomableFrame_onLevelChanged(Bonobo_ZoomableFrame _obj, const CORBA_float zoom_level, CORBA_Environment *ev);
void Bonobo_ZoomableFrame_onParametersChanged(Bonobo_ZoomableFrame _obj, CORBA_Environment *ev);
void Bonobo_ZoomableFrame_unImplemented1(Bonobo_ZoomableFrame _obj, CORBA_Environment *ev);
void Bonobo_ZoomableFrame_unImplemented2(Bonobo_ZoomableFrame _obj, CORBA_Environment *ev);
void Bonobo_ZoomableFrame_unImplemented3(Bonobo_ZoomableFrame _obj, CORBA_Environment *ev);
void Bonobo_ZoomableFrame_unImplemented4(Bonobo_ZoomableFrame _obj, CORBA_Environment *ev);
#define Bonobo_Zoomable_ref Bonobo_Unknown_ref
#define Bonobo_Zoomable_unref Bonobo_Unknown_unref
#define Bonobo_Zoomable_queryInterface Bonobo_Unknown_queryInterface
CORBA_float Bonobo_Zoomable__get_level(Bonobo_Zoomable _obj, CORBA_Environment *ev);
CORBA_float Bonobo_Zoomable__get_minLevel(Bonobo_Zoomable _obj, CORBA_Environment *ev);
CORBA_float Bonobo_Zoomable__get_maxLevel(Bonobo_Zoomable _obj, CORBA_Environment *ev);
CORBA_boolean Bonobo_Zoomable__get_hasMinLevel(Bonobo_Zoomable _obj, CORBA_Environment *ev);
CORBA_boolean Bonobo_Zoomable__get_hasMaxLevel(Bonobo_Zoomable _obj, CORBA_Environment *ev);
CORBA_boolean Bonobo_Zoomable__get_isContinuous(Bonobo_Zoomable _obj, CORBA_Environment *ev);
Bonobo_ZoomLevelList* Bonobo_Zoomable__get_preferredLevels(Bonobo_Zoomable _obj, CORBA_Environment *ev);
Bonobo_ZoomLevelNameList* Bonobo_Zoomable__get_preferredLevelNames(Bonobo_Zoomable _obj, CORBA_Environment *ev);
void Bonobo_Zoomable_zoomIn(Bonobo_Zoomable _obj, CORBA_Environment *ev);
void Bonobo_Zoomable_zoomOut(Bonobo_Zoomable _obj, CORBA_Environment *ev);
void Bonobo_Zoomable_zoomFit(Bonobo_Zoomable _obj, CORBA_Environment *ev);
void Bonobo_Zoomable_zoomDefault(Bonobo_Zoomable _obj, CORBA_Environment *ev);
void Bonobo_Zoomable_setLevel(Bonobo_Zoomable _obj, const CORBA_float zoom_level, CORBA_Environment *ev);
void Bonobo_Zoomable_setFrame(Bonobo_Zoomable _obj, const Bonobo_ZoomableFrame zoomable_frame, CORBA_Environment *ev);
void Bonobo_Zoomable_unImplemented1(Bonobo_Zoomable _obj, CORBA_Environment *ev);
void Bonobo_Zoomable_unImplemented2(Bonobo_Zoomable _obj, CORBA_Environment *ev);
void Bonobo_Zoomable_unImplemented3(Bonobo_Zoomable _obj, CORBA_Environment *ev);
void Bonobo_Zoomable_unImplemented4(Bonobo_Zoomable _obj, CORBA_Environment *ev);
#define Bonobo_ItemContainer_ref Bonobo_Unknown_ref
#define Bonobo_ItemContainer_unref Bonobo_Unknown_unref
#define Bonobo_ItemContainer_queryInterface Bonobo_Unknown_queryInterface
Bonobo_ItemContainer_ObjectNames* Bonobo_ItemContainer_enumObjects(Bonobo_ItemContainer _obj, CORBA_Environment *ev);
Bonobo_Unknown Bonobo_ItemContainer_getObjectByName(Bonobo_ItemContainer _obj, const CORBA_char * item_name, const CORBA_boolean only_if_exists, CORBA_Environment *ev);
void Bonobo_ItemContainer_unImplemented1(Bonobo_ItemContainer _obj, CORBA_Environment *ev);
void Bonobo_ItemContainer_unImplemented2(Bonobo_ItemContainer _obj, CORBA_Environment *ev);
void Bonobo_ItemContainer_unImplemented3(Bonobo_ItemContainer _obj, CORBA_Environment *ev);
void Bonobo_ItemContainer_unImplemented4(Bonobo_ItemContainer _obj, CORBA_Environment *ev);
#define Bonobo_Canvas_Component_ref Bonobo_Unknown_ref
#define Bonobo_Canvas_Component_unref Bonobo_Unknown_unref
#define Bonobo_Canvas_Component_queryInterface Bonobo_Unknown_queryInterface
Bonobo_Canvas_ArtUTA* Bonobo_Canvas_Component_update(Bonobo_Canvas_Component _obj, const Bonobo_Canvas_State* state, const Bonobo_Canvas_affine aff, const Bonobo_Canvas_SVP* clip_path, const CORBA_long flags, CORBA_double* x1, CORBA_double* y1, CORBA_double* x2, CORBA_double* y2, CORBA_Environment *ev);
void Bonobo_Canvas_Component_realize(Bonobo_Canvas_Component _obj, const CORBA_char * drawable, CORBA_Environment *ev);
void Bonobo_Canvas_Component_unrealize(Bonobo_Canvas_Component _obj, CORBA_Environment *ev);
void Bonobo_Canvas_Component_map(Bonobo_Canvas_Component _obj, CORBA_Environment *ev);
void Bonobo_Canvas_Component_unmap(Bonobo_Canvas_Component _obj, CORBA_Environment *ev);
void Bonobo_Canvas_Component_draw(Bonobo_Canvas_Component _obj, const Bonobo_Canvas_State* state, const CORBA_char * drawable, const CORBA_short x, const CORBA_short y, const CORBA_short width, const CORBA_short height, CORBA_Environment *ev);
void Bonobo_Canvas_Component_render(Bonobo_Canvas_Component _obj, Bonobo_Canvas_Buf* buf, CORBA_Environment *ev);
CORBA_boolean Bonobo_Canvas_Component_contains(Bonobo_Canvas_Component _obj, const CORBA_double x, const CORBA_double y, CORBA_Environment *ev);
void Bonobo_Canvas_Component_bounds(Bonobo_Canvas_Component _obj, const Bonobo_Canvas_State* state, CORBA_double* x1, CORBA_double* x2, CORBA_double* y1, CORBA_double* y2, CORBA_Environment *ev);
CORBA_boolean Bonobo_Canvas_Component_event(Bonobo_Canvas_Component _obj, const Bonobo_Canvas_State* state, const Bonobo_Gdk_Event* event, CORBA_Environment *ev);
void Bonobo_Canvas_Component_setCanvasSize(Bonobo_Canvas_Component _obj, const CORBA_short x, const CORBA_short y, const CORBA_short width, const CORBA_short height, CORBA_Environment *ev);
void Bonobo_Canvas_Component_setBounds(Bonobo_Canvas_Component _obj, const Bonobo_Canvas_DRect* bbox, CORBA_Environment *ev);
void Bonobo_Canvas_Component_unImplemented1(Bonobo_Canvas_Component _obj, CORBA_Environment *ev);
void Bonobo_Canvas_Component_unImplemented2(Bonobo_Canvas_Component _obj, CORBA_Environment *ev);
void Bonobo_Canvas_Component_unImplemented3(Bonobo_Canvas_Component _obj, CORBA_Environment *ev);
void Bonobo_Canvas_Component_unImplemented4(Bonobo_Canvas_Component _obj, CORBA_Environment *ev);
void Bonobo_Canvas_Component_unImplemented5(Bonobo_Canvas_Component _obj, CORBA_Environment *ev);
void Bonobo_Canvas_Component_unImplemented6(Bonobo_Canvas_Component _obj, CORBA_Environment *ev);
void Bonobo_Canvas_Component_unImplemented7(Bonobo_Canvas_Component _obj, CORBA_Environment *ev);
void Bonobo_Canvas_Component_unImplemented8(Bonobo_Canvas_Component _obj, CORBA_Environment *ev);
void Bonobo_Canvas_ComponentProxy_requestUpdate(Bonobo_Canvas_ComponentProxy _obj, CORBA_Environment *ev);
void Bonobo_Canvas_ComponentProxy_grabFocus(Bonobo_Canvas_ComponentProxy _obj, const CORBA_unsigned_long mask, const CORBA_long cursor, const CORBA_unsigned_long time, CORBA_Environment *ev);
void Bonobo_Canvas_ComponentProxy_ungrabFocus(Bonobo_Canvas_ComponentProxy _obj, const CORBA_unsigned_long time, CORBA_Environment *ev);
Bonobo_UIContainer Bonobo_Canvas_ComponentProxy_getUIContainer(Bonobo_Canvas_ComponentProxy _obj, CORBA_Environment *ev);
void Bonobo_Canvas_ComponentProxy_unImplemented1(Bonobo_Canvas_ComponentProxy _obj, CORBA_Environment *ev);
void Bonobo_Canvas_ComponentProxy_unImplemented2(Bonobo_Canvas_ComponentProxy _obj, CORBA_Environment *ev);
void Bonobo_Canvas_ComponentProxy_unImplemented3(Bonobo_Canvas_ComponentProxy _obj, CORBA_Environment *ev);
void Bonobo_Canvas_ComponentProxy_unImplemented4(Bonobo_Canvas_ComponentProxy _obj, CORBA_Environment *ev);
void Bonobo_Canvas_ComponentProxy_unImplemented5(Bonobo_Canvas_ComponentProxy _obj, CORBA_Environment *ev);
void Bonobo_Canvas_ComponentProxy_unImplemented6(Bonobo_Canvas_ComponentProxy _obj, CORBA_Environment *ev);
void Bonobo_Canvas_ComponentProxy_unImplemented7(Bonobo_Canvas_ComponentProxy _obj, CORBA_Environment *ev);
void Bonobo_Canvas_ComponentProxy_unImplemented8(Bonobo_Canvas_ComponentProxy _obj, CORBA_Environment *ev);
#define Bonobo_ControlFactory_ref Bonobo_Unknown_ref
#define Bonobo_ControlFactory_unref Bonobo_Unknown_unref
#define Bonobo_ControlFactory_queryInterface Bonobo_Unknown_queryInterface
Bonobo_Control Bonobo_ControlFactory_createControl(Bonobo_ControlFactory _obj, const Bonobo_ControlFrame frame, const Bonobo_UIContainer uic, CORBA_Environment *ev);
void Bonobo_ControlFactory_unImplemented1(Bonobo_ControlFactory _obj, CORBA_Environment *ev);
void Bonobo_ControlFactory_unImplemented2(Bonobo_ControlFactory _obj, CORBA_Environment *ev);
#define Bonobo_CanvasComponentFactory_ref Bonobo_Unknown_ref
#define Bonobo_CanvasComponentFactory_unref Bonobo_Unknown_unref
#define Bonobo_CanvasComponentFactory_queryInterface Bonobo_Unknown_queryInterface
Bonobo_Canvas_Component Bonobo_CanvasComponentFactory_createCanvasComponent(Bonobo_CanvasComponentFactory _obj, const CORBA_boolean aa, const Bonobo_Canvas_ComponentProxy proxy, CORBA_Environment *ev);
void Bonobo_CanvasComponentFactory_unImplemented1(Bonobo_CanvasComponentFactory _obj, CORBA_Environment *ev);
void Bonobo_CanvasComponentFactory_unImplemented2(Bonobo_CanvasComponentFactory _obj, CORBA_Environment *ev);
#define Bonobo_Embeddable_ref Bonobo_Unknown_ref
#define Bonobo_Embeddable_unref Bonobo_Unknown_unref
#define Bonobo_Embeddable_queryInterface Bonobo_Unknown_queryInterface
void Bonobo_Embeddable_unImplemented1(Bonobo_Embeddable _obj, CORBA_Environment *ev);
void Bonobo_Embeddable_unImplemented2(Bonobo_Embeddable _obj, CORBA_Environment *ev);
void Bonobo_Embeddable_unImplemented3(Bonobo_Embeddable _obj, CORBA_Environment *ev);
void Bonobo_Embeddable_unImplemented4(Bonobo_Embeddable _obj, CORBA_Environment *ev);
void Bonobo_Embeddable_unImplemented5(Bonobo_Embeddable _obj, CORBA_Environment *ev);
void Bonobo_Embeddable_unImplemented6(Bonobo_Embeddable _obj, CORBA_Environment *ev);
void Bonobo_Embeddable_unImplemented7(Bonobo_Embeddable _obj, CORBA_Environment *ev);
void Bonobo_Embeddable_unImplemented8(Bonobo_Embeddable _obj, CORBA_Environment *ev);
#define Bonobo_Print_ref Bonobo_Unknown_ref
#define Bonobo_Print_unref Bonobo_Unknown_unref
#define Bonobo_Print_queryInterface Bonobo_Unknown_queryInterface
Bonobo_Stream Bonobo_Print_render(Bonobo_Print _obj, const Bonobo_PrintDimensions* pd, const Bonobo_PrintScissor* scissor, CORBA_Environment *ev);
void Bonobo_Print_unImplemented1(Bonobo_Print _obj, CORBA_Environment *ev);
void Bonobo_Print_unImplemented2(Bonobo_Print _obj, CORBA_Environment *ev);
void Bonobo_Print_unImplemented3(Bonobo_Print _obj, CORBA_Environment *ev);
void Bonobo_Print_unImplemented4(Bonobo_Print _obj, CORBA_Environment *ev);
#define Bonobo_Clipboard_ref Bonobo_Unknown_ref
#define Bonobo_Clipboard_unref Bonobo_Unknown_unref
#define Bonobo_Clipboard_queryInterface Bonobo_Unknown_queryInterface
void Bonobo_Clipboard_setClipboard(Bonobo_Clipboard _obj, const Bonobo_Moniker pasting_moniker, const Bonobo_Moniker linking_moniker, CORBA_Environment *ev);
Bonobo_Moniker Bonobo_Clipboard_paste(Bonobo_Clipboard _obj, CORBA_Environment *ev);
Bonobo_Moniker Bonobo_Clipboard_link(Bonobo_Clipboard _obj, CORBA_Environment *ev);
void Bonobo_Clipboard_unImplemented1(Bonobo_Clipboard _obj, CORBA_Environment *ev);
void Bonobo_Clipboard_unImplemented2(Bonobo_Clipboard _obj, CORBA_Environment *ev);
void Bonobo_Clipboard_unImplemented3(Bonobo_Clipboard _obj, CORBA_Environment *ev);
void Bonobo_Clipboard_unImplemented4(Bonobo_Clipboard _obj, CORBA_Environment *ev);
#define Bonobo_ClipboardStore_ref Bonobo_Unknown_ref
#define Bonobo_ClipboardStore_unref Bonobo_Unknown_unref
#define Bonobo_ClipboardStore_queryInterface Bonobo_Unknown_queryInterface
void Bonobo_ClipboardStore_fetchStream(Bonobo_ClipboardStore _obj, const Bonobo_PersistStream source, const Bonobo_Moniker linking_moniker, CORBA_Environment *ev);
void Bonobo_ClipboardStore_fetchStorage(Bonobo_ClipboardStore _obj, const Bonobo_PersistStorage source, const Bonobo_Moniker linking_moniker, CORBA_Environment *ev);
void Bonobo_ClipboardStore_unImplemented1(Bonobo_ClipboardStore _obj, CORBA_Environment *ev);
void Bonobo_ClipboardStore_unImplemented2(Bonobo_ClipboardStore _obj, CORBA_Environment *ev);
void Bonobo_ClipboardStore_unImplemented3(Bonobo_ClipboardStore _obj, CORBA_Environment *ev);
void Bonobo_ClipboardStore_unImplemented4(Bonobo_ClipboardStore _obj, CORBA_Environment *ev);
#define Bonobo_Application_ref Bonobo_Unknown_ref
#define Bonobo_Application_unref Bonobo_Unknown_unref
#define Bonobo_Application_queryInterface Bonobo_Unknown_queryInterface
CORBA_any* Bonobo_Application_message(Bonobo_Application _obj, const CORBA_char * msg, const Bonobo_Application_ArgList* args, CORBA_Environment *ev);
CORBA_long Bonobo_Application_newInstance(Bonobo_Application _obj, const Bonobo_Application_argv_t* argv, CORBA_Environment *ev);
Bonobo_Application_MessageList* Bonobo_Application_listMessages(Bonobo_Application _obj, CORBA_Environment *ev);
CORBA_string Bonobo_Application_getName(Bonobo_Application _obj, CORBA_Environment *ev);
void Bonobo_Application_unimplemented1(Bonobo_Application _obj, CORBA_Environment *ev);
void Bonobo_Application_unimplemented2(Bonobo_Application _obj, CORBA_Environment *ev);
void Bonobo_Application_unimplemented3(Bonobo_Application _obj, CORBA_Environment *ev);
void Bonobo_Application_unimplemented4(Bonobo_Application _obj, CORBA_Environment *ev);
void Bonobo_Application_unimplemented5(Bonobo_Application _obj, CORBA_Environment *ev);
void Bonobo_Application_unimplemented6(Bonobo_Application _obj, CORBA_Environment *ev);
void Bonobo_Application_unimplemented7(Bonobo_Application _obj, CORBA_Environment *ev);
void Bonobo_Application_unimplemented8(Bonobo_Application _obj, CORBA_Environment *ev);
#include <orbit/orb-core/orbit-interface.h>

#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static 
#else
extern 
#endif
ORBit_IInterface Bonobo_Moniker__iinterface;
#define Bonobo_Moniker_IMETHODS_LEN 8
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static 
#else
extern 
#endif
ORBit_IMethod Bonobo_Moniker__imethods[Bonobo_Moniker_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static 
#else
extern 
#endif
ORBit_IInterface Bonobo_MonikerExtender__iinterface;
#define Bonobo_MonikerExtender_IMETHODS_LEN 5
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static 
#else
extern 
#endif
ORBit_IMethod Bonobo_MonikerExtender__imethods[Bonobo_MonikerExtender_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static 
#else
extern 
#endif
ORBit_IInterface Bonobo_Stream__iinterface;
#define Bonobo_Stream_IMETHODS_LEN 10
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static 
#else
extern 
#endif
ORBit_IMethod Bonobo_Stream__imethods[Bonobo_Stream_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static 
#else
extern 
#endif
ORBit_IInterface Bonobo_Storage__iinterface;
#define Bonobo_Storage_IMETHODS_LEN 12
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static 
#else
extern 
#endif
ORBit_IMethod Bonobo_Storage__imethods[Bonobo_Storage_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static 
#else
extern 
#endif
ORBit_IInterface Bonobo_MonikerContext__iinterface;
#define Bonobo_MonikerContext_IMETHODS_LEN 9
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static 
#else
extern 
#endif
ORBit_IMethod Bonobo_MonikerContext__imethods[Bonobo_MonikerContext_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static 
#else
extern 
#endif
ORBit_IInterface Bonobo_RunningContext__iinterface;
#define Bonobo_RunningContext_IMETHODS_LEN 7
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static 
#else
extern 
#endif
ORBit_IMethod Bonobo_RunningContext__imethods[Bonobo_RunningContext_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static 
#else
extern 
#endif
ORBit_IInterface Bonobo_Persist__iinterface;
#define Bonobo_Persist_IMETHODS_LEN 5
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static 
#else
extern 
#endif
ORBit_IMethod Bonobo_Persist__imethods[Bonobo_Persist_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static 
#else
extern 
#endif
ORBit_IInterface Bonobo_PersistFile__iinterface;
#define Bonobo_PersistFile_IMETHODS_LEN 5
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static 
#else
extern 
#endif
ORBit_IMethod Bonobo_PersistFile__imethods[Bonobo_PersistFile_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static 
#else
extern 
#endif
ORBit_IInterface Bonobo_PersistStorage__iinterface;
#define Bonobo_PersistStorage_IMETHODS_LEN 2
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static 
#else
extern 
#endif
ORBit_IMethod Bonobo_PersistStorage__imethods[Bonobo_PersistStorage_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static 
#else
extern 
#endif
ORBit_IInterface Bonobo_PersistStream__iinterface;
#define Bonobo_PersistStream_IMETHODS_LEN 4
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static 
#else
extern 
#endif
ORBit_IMethod Bonobo_PersistStream__imethods[Bonobo_PersistStream_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static 
#else
extern 
#endif
ORBit_IInterface Bonobo_Listener__iinterface;
#define Bonobo_Listener_IMETHODS_LEN 3
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static 
#else
extern 
#endif
ORBit_IMethod Bonobo_Listener__imethods[Bonobo_Listener_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static 
#else
extern 
#endif
ORBit_IInterface Bonobo_EventSource__iinterface;
#define Bonobo_EventSource_IMETHODS_LEN 5
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static 
#else
extern 
#endif
ORBit_IMethod Bonobo_EventSource__imethods[Bonobo_EventSource_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static 
#else
extern 
#endif
ORBit_IInterface Bonobo_UIComponent__iinterface;
#define Bonobo_UIComponent_IMETHODS_LEN 10
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static 
#else
extern 
#endif
ORBit_IMethod Bonobo_UIComponent__imethods[Bonobo_UIComponent_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static 
#else
extern 
#endif
ORBit_IInterface Bonobo_UIContainer__iinterface;
#define Bonobo_UIContainer_IMETHODS_LEN 18
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static 
#else
extern 
#endif
ORBit_IMethod Bonobo_UIContainer__imethods[Bonobo_UIContainer_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static 
#else
extern 
#endif
ORBit_IInterface Bonobo_PropertyBag__iinterface;
#define Bonobo_PropertyBag_IMETHODS_LEN 14
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static 
#else
extern 
#endif
ORBit_IMethod Bonobo_PropertyBag__imethods[Bonobo_PropertyBag_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static 
#else
extern 
#endif
ORBit_IInterface Bonobo_ConfigDatabase__iinterface;
#define Bonobo_ConfigDatabase_IMETHODS_LEN 11
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static 
#else
extern 
#endif
ORBit_IMethod Bonobo_ConfigDatabase__imethods[Bonobo_ConfigDatabase_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static 
#else
extern 
#endif
ORBit_IInterface Bonobo_ControlFrame__iinterface;
#define Bonobo_ControlFrame_IMETHODS_LEN 9
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static 
#else
extern 
#endif
ORBit_IMethod Bonobo_ControlFrame__imethods[Bonobo_ControlFrame_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static 
#else
extern 
#endif
ORBit_IInterface Bonobo_Control__iinterface;
#define Bonobo_Control_IMETHODS_LEN 13
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static 
#else
extern 
#endif
ORBit_IMethod Bonobo_Control__imethods[Bonobo_Control_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static 
#else
extern 
#endif
ORBit_IInterface Bonobo_PropertyControl__iinterface;
#define Bonobo_PropertyControl_IMETHODS_LEN 5
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static 
#else
extern 
#endif
ORBit_IMethod Bonobo_PropertyControl__imethods[Bonobo_PropertyControl_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static 
#else
extern 
#endif
ORBit_IInterface Bonobo_ZoomableFrame__iinterface;
#define Bonobo_ZoomableFrame_IMETHODS_LEN 6
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static 
#else
extern 
#endif
ORBit_IMethod Bonobo_ZoomableFrame__imethods[Bonobo_ZoomableFrame_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static 
#else
extern 
#endif
ORBit_IInterface Bonobo_Zoomable__iinterface;
#define Bonobo_Zoomable_IMETHODS_LEN 18
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static 
#else
extern 
#endif
ORBit_IMethod Bonobo_Zoomable__imethods[Bonobo_Zoomable_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static 
#else
extern 
#endif
ORBit_IInterface Bonobo_ItemContainer__iinterface;
#define Bonobo_ItemContainer_IMETHODS_LEN 6
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static 
#else
extern 
#endif
ORBit_IMethod Bonobo_ItemContainer__imethods[Bonobo_ItemContainer_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static 
#else
extern 
#endif
ORBit_IInterface Bonobo_Canvas_Component__iinterface;
#define Bonobo_Canvas_Component_IMETHODS_LEN 20
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static 
#else
extern 
#endif
ORBit_IMethod Bonobo_Canvas_Component__imethods[Bonobo_Canvas_Component_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static 
#else
extern 
#endif
ORBit_IInterface Bonobo_Canvas_ComponentProxy__iinterface;
#define Bonobo_Canvas_ComponentProxy_IMETHODS_LEN 12
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static 
#else
extern 
#endif
ORBit_IMethod Bonobo_Canvas_ComponentProxy__imethods[Bonobo_Canvas_ComponentProxy_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static 
#else
extern 
#endif
ORBit_IInterface Bonobo_ControlFactory__iinterface;
#define Bonobo_ControlFactory_IMETHODS_LEN 3
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static 
#else
extern 
#endif
ORBit_IMethod Bonobo_ControlFactory__imethods[Bonobo_ControlFactory_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static 
#else
extern 
#endif
ORBit_IInterface Bonobo_CanvasComponentFactory__iinterface;
#define Bonobo_CanvasComponentFactory_IMETHODS_LEN 3
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static 
#else
extern 
#endif
ORBit_IMethod Bonobo_CanvasComponentFactory__imethods[Bonobo_CanvasComponentFactory_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static 
#else
extern 
#endif
ORBit_IInterface Bonobo_Embeddable__iinterface;
#define Bonobo_Embeddable_IMETHODS_LEN 8
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static 
#else
extern 
#endif
ORBit_IMethod Bonobo_Embeddable__imethods[Bonobo_Embeddable_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static 
#else
extern 
#endif
ORBit_IInterface Bonobo_Print__iinterface;
#define Bonobo_Print_IMETHODS_LEN 5
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static 
#else
extern 
#endif
ORBit_IMethod Bonobo_Print__imethods[Bonobo_Print_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static 
#else
extern 
#endif
ORBit_IInterface Bonobo_Clipboard__iinterface;
#define Bonobo_Clipboard_IMETHODS_LEN 7
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static 
#else
extern 
#endif
ORBit_IMethod Bonobo_Clipboard__imethods[Bonobo_Clipboard_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static 
#else
extern 
#endif
ORBit_IInterface Bonobo_ClipboardStore__iinterface;
#define Bonobo_ClipboardStore_IMETHODS_LEN 6
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static 
#else
extern 
#endif
ORBit_IMethod Bonobo_ClipboardStore__imethods[Bonobo_ClipboardStore_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static 
#else
extern 
#endif
ORBit_IInterface Bonobo_Application__iinterface;
#define Bonobo_Application_IMETHODS_LEN 12
#ifdef ORBIT_IDL_C_IMODULE_Bonobo
static 
#else
extern 
#endif
ORBit_IMethod Bonobo_Application__imethods[Bonobo_Application_IMETHODS_LEN];

/** IMethods index */

#ifndef __Bonobo_Moniker__imethods_index
#define __Bonobo_Moniker__imethods_index
typedef enum {
	Bonobo_Moniker_getParent__imethods_index,
	Bonobo_Moniker_setParent__imethods_index,
	Bonobo_Moniker_getName__imethods_index,
	Bonobo_Moniker_setName__imethods_index,
	Bonobo_Moniker_resolve__imethods_index,
	Bonobo_Moniker_equal__imethods_index,
	Bonobo_Moniker_unImplemented1__imethods_index,
	Bonobo_Moniker_unImplemented2__imethods_index
} Bonobo_Moniker__imethods_index;
#endif /* __Bonobo_Moniker__imethods_index */

#ifndef __Bonobo_MonikerExtender__imethods_index
#define __Bonobo_MonikerExtender__imethods_index
typedef enum {
	Bonobo_MonikerExtender_resolve__imethods_index,
	Bonobo_MonikerExtender_unImplemented1__imethods_index,
	Bonobo_MonikerExtender_unImplemented2__imethods_index,
	Bonobo_MonikerExtender_unImplemented3__imethods_index,
	Bonobo_MonikerExtender_unImplemented4__imethods_index
} Bonobo_MonikerExtender__imethods_index;
#endif /* __Bonobo_MonikerExtender__imethods_index */

#ifndef __Bonobo_Stream__imethods_index
#define __Bonobo_Stream__imethods_index
typedef enum {
	Bonobo_Stream_getInfo__imethods_index,
	Bonobo_Stream_setInfo__imethods_index,
	Bonobo_Stream_read__imethods_index,
	Bonobo_Stream_write__imethods_index,
	Bonobo_Stream_seek__imethods_index,
	Bonobo_Stream_truncate__imethods_index,
	Bonobo_Stream_commit__imethods_index,
	Bonobo_Stream_revert__imethods_index,
	Bonobo_Stream_unImplemented1__imethods_index,
	Bonobo_Stream_unImplemented2__imethods_index
} Bonobo_Stream__imethods_index;
#endif /* __Bonobo_Stream__imethods_index */

#ifndef __Bonobo_Storage__imethods_index
#define __Bonobo_Storage__imethods_index
typedef enum {
	Bonobo_Storage_getInfo__imethods_index,
	Bonobo_Storage_setInfo__imethods_index,
	Bonobo_Storage_openStream__imethods_index,
	Bonobo_Storage_openStorage__imethods_index,
	Bonobo_Storage_copyTo__imethods_index,
	Bonobo_Storage_listContents__imethods_index,
	Bonobo_Storage_erase__imethods_index,
	Bonobo_Storage_rename__imethods_index,
	Bonobo_Storage_commit__imethods_index,
	Bonobo_Storage_revert__imethods_index,
	Bonobo_Storage_unImplemented1__imethods_index,
	Bonobo_Storage_unImplemented2__imethods_index
} Bonobo_Storage__imethods_index;
#endif /* __Bonobo_Storage__imethods_index */

#ifndef __Bonobo_MonikerContext__imethods_index
#define __Bonobo_MonikerContext__imethods_index
typedef enum {
	Bonobo_MonikerContext_getObject__imethods_index,
	Bonobo_MonikerContext_createFromName__imethods_index,
	Bonobo_MonikerContext_getExtender__imethods_index,
	Bonobo_MonikerContext_unImplemented1__imethods_index,
	Bonobo_MonikerContext_unImplemented2__imethods_index,
	Bonobo_MonikerContext_unImplemented3__imethods_index,
	Bonobo_MonikerContext_unImplemented4__imethods_index,
	Bonobo_MonikerContext_unImplemented5__imethods_index,
	Bonobo_MonikerContext_unImplemented6__imethods_index
} Bonobo_MonikerContext__imethods_index;
#endif /* __Bonobo_MonikerContext__imethods_index */

#ifndef __Bonobo_RunningContext__imethods_index
#define __Bonobo_RunningContext__imethods_index
typedef enum {
	Bonobo_RunningContext_addObject__imethods_index,
	Bonobo_RunningContext_removeObject__imethods_index,
	Bonobo_RunningContext_addKey__imethods_index,
	Bonobo_RunningContext_removeKey__imethods_index,
	Bonobo_RunningContext_atExitUnref__imethods_index,
	Bonobo_RunningContext_unImplemented1__imethods_index,
	Bonobo_RunningContext_unImplemented2__imethods_index
} Bonobo_RunningContext__imethods_index;
#endif /* __Bonobo_RunningContext__imethods_index */

#ifndef __Bonobo_Persist__imethods_index
#define __Bonobo_Persist__imethods_index
typedef enum {
	Bonobo_Persist_getContentTypes__imethods_index,
	Bonobo_Persist_getIId__imethods_index,
	Bonobo_Persist_isDirty__imethods_index,
	Bonobo_Persist_unImplemented1__imethods_index,
	Bonobo_Persist_unImplemented2__imethods_index
} Bonobo_Persist__imethods_index;
#endif /* __Bonobo_Persist__imethods_index */

#ifndef __Bonobo_PersistFile__imethods_index
#define __Bonobo_PersistFile__imethods_index
typedef enum {
	Bonobo_PersistFile_load__imethods_index,
	Bonobo_PersistFile_save__imethods_index,
	Bonobo_PersistFile_getCurrentFile__imethods_index,
	Bonobo_PersistFile_unImplemented3__imethods_index,
	Bonobo_PersistFile_unImplemented4__imethods_index
} Bonobo_PersistFile__imethods_index;
#endif /* __Bonobo_PersistFile__imethods_index */

#ifndef __Bonobo_PersistStorage__imethods_index
#define __Bonobo_PersistStorage__imethods_index
typedef enum {
	Bonobo_PersistStorage_load__imethods_index,
	Bonobo_PersistStorage_save__imethods_index
} Bonobo_PersistStorage__imethods_index;
#endif /* __Bonobo_PersistStorage__imethods_index */

#ifndef __Bonobo_PersistStream__imethods_index
#define __Bonobo_PersistStream__imethods_index
typedef enum {
	Bonobo_PersistStream_load__imethods_index,
	Bonobo_PersistStream_save__imethods_index,
	Bonobo_PersistStream_unImplemented3__imethods_index,
	Bonobo_PersistStream_unImplemented4__imethods_index
} Bonobo_PersistStream__imethods_index;
#endif /* __Bonobo_PersistStream__imethods_index */

#ifndef __Bonobo_Listener__imethods_index
#define __Bonobo_Listener__imethods_index
typedef enum {
	Bonobo_Listener_event__imethods_index,
	Bonobo_Listener_unImplemented__imethods_index,
	Bonobo_Listener_unImplemented2__imethods_index
} Bonobo_Listener__imethods_index;
#endif /* __Bonobo_Listener__imethods_index */

#ifndef __Bonobo_EventSource__imethods_index
#define __Bonobo_EventSource__imethods_index
typedef enum {
	Bonobo_EventSource_addListener__imethods_index,
	Bonobo_EventSource_addListenerWithMask__imethods_index,
	Bonobo_EventSource_removeListener__imethods_index,
	Bonobo_EventSource_unImplemented__imethods_index,
	Bonobo_EventSource_unImplemented2__imethods_index
} Bonobo_EventSource__imethods_index;
#endif /* __Bonobo_EventSource__imethods_index */

#ifndef __Bonobo_UIComponent__imethods_index
#define __Bonobo_UIComponent__imethods_index
typedef enum {
	Bonobo_UIComponent_setContainer__imethods_index,
	Bonobo_UIComponent_unsetContainer__imethods_index,
	Bonobo_UIComponent__get_name__imethods_index,
	Bonobo_UIComponent_describeVerbs__imethods_index,
	Bonobo_UIComponent_execVerb__imethods_index,
	Bonobo_UIComponent_uiEvent__imethods_index,
	Bonobo_UIComponent_unImplemented__imethods_index,
	Bonobo_UIComponent_unImplemented2__imethods_index,
	Bonobo_UIComponent_unImplemented3__imethods_index,
	Bonobo_UIComponent_unImplemented4__imethods_index
} Bonobo_UIComponent__imethods_index;
#endif /* __Bonobo_UIComponent__imethods_index */

#ifndef __Bonobo_UIContainer__imethods_index
#define __Bonobo_UIContainer__imethods_index
typedef enum {
	Bonobo_UIContainer_registerComponent__imethods_index,
	Bonobo_UIContainer_deregisterComponent__imethods_index,
	Bonobo_UIContainer_freeze__imethods_index,
	Bonobo_UIContainer_thaw__imethods_index,
	Bonobo_UIContainer_setAttr__imethods_index,
	Bonobo_UIContainer_getAttr__imethods_index,
	Bonobo_UIContainer_setNode__imethods_index,
	Bonobo_UIContainer_getNode__imethods_index,
	Bonobo_UIContainer_removeNode__imethods_index,
	Bonobo_UIContainer_exists__imethods_index,
	Bonobo_UIContainer_execVerb__imethods_index,
	Bonobo_UIContainer_uiEvent__imethods_index,
	Bonobo_UIContainer_setObject__imethods_index,
	Bonobo_UIContainer_getObject__imethods_index,
	Bonobo_UIContainer_unImplemented__imethods_index,
	Bonobo_UIContainer_unImplemented2__imethods_index,
	Bonobo_UIContainer_unImplemented3__imethods_index,
	Bonobo_UIContainer_unImplemented4__imethods_index
} Bonobo_UIContainer__imethods_index;
#endif /* __Bonobo_UIContainer__imethods_index */

#ifndef __Bonobo_PropertyBag__imethods_index
#define __Bonobo_PropertyBag__imethods_index
typedef enum {
	Bonobo_PropertyBag_getKeys__imethods_index,
	Bonobo_PropertyBag_getType__imethods_index,
	Bonobo_PropertyBag_getValue__imethods_index,
	Bonobo_PropertyBag_setValue__imethods_index,
	Bonobo_PropertyBag_getValues__imethods_index,
	Bonobo_PropertyBag_setValues__imethods_index,
	Bonobo_PropertyBag_getDefault__imethods_index,
	Bonobo_PropertyBag_getDocTitle__imethods_index,
	Bonobo_PropertyBag_getDoc__imethods_index,
	Bonobo_PropertyBag_getFlags__imethods_index,
	Bonobo_PropertyBag_unImplemented1__imethods_index,
	Bonobo_PropertyBag_unImplemented2__imethods_index,
	Bonobo_PropertyBag_unImplemented3__imethods_index,
	Bonobo_PropertyBag_unImplemented4__imethods_index
} Bonobo_PropertyBag__imethods_index;
#endif /* __Bonobo_PropertyBag__imethods_index */

#ifndef __Bonobo_ConfigDatabase__imethods_index
#define __Bonobo_ConfigDatabase__imethods_index
typedef enum {
	Bonobo_ConfigDatabase__get_isWriteable__imethods_index,
	Bonobo_ConfigDatabase_getDirs__imethods_index,
	Bonobo_ConfigDatabase_hasDir__imethods_index,
	Bonobo_ConfigDatabase_removeValue__imethods_index,
	Bonobo_ConfigDatabase_removeDir__imethods_index,
	Bonobo_ConfigDatabase_addDatabase__imethods_index,
	Bonobo_ConfigDatabase_sync__imethods_index,
	Bonobo_ConfigDatabase_unImplemented5__imethods_index,
	Bonobo_ConfigDatabase_unImplemented6__imethods_index,
	Bonobo_ConfigDatabase_unImplemented7__imethods_index,
	Bonobo_ConfigDatabase_unImplemented8__imethods_index
} Bonobo_ConfigDatabase__imethods_index;
#endif /* __Bonobo_ConfigDatabase__imethods_index */

#ifndef __Bonobo_ControlFrame__imethods_index
#define __Bonobo_ControlFrame__imethods_index
typedef enum {
	Bonobo_ControlFrame_getToplevelId__imethods_index,
	Bonobo_ControlFrame_getAmbientProperties__imethods_index,
	Bonobo_ControlFrame_getUIContainer__imethods_index,
	Bonobo_ControlFrame_notifyActivated__imethods_index,
	Bonobo_ControlFrame_queueResize__imethods_index,
	Bonobo_ControlFrame_activateURI__imethods_index,
	Bonobo_ControlFrame_getParentAccessible__imethods_index,
	Bonobo_ControlFrame_unImplemented__imethods_index,
	Bonobo_ControlFrame_unImplemented2__imethods_index
} Bonobo_ControlFrame__imethods_index;
#endif /* __Bonobo_ControlFrame__imethods_index */

#ifndef __Bonobo_Control__imethods_index
#define __Bonobo_Control__imethods_index
typedef enum {
	Bonobo_Control_getProperties__imethods_index,
	Bonobo_Control_getDesiredSize__imethods_index,
	Bonobo_Control_getAccessible__imethods_index,
	Bonobo_Control_getWindowId__imethods_index,
	Bonobo_Control_getPopupContainer__imethods_index,
	Bonobo_Control_setFrame__imethods_index,
	Bonobo_Control_setSize__imethods_index,
	Bonobo_Control_setState__imethods_index,
	Bonobo_Control_activate__imethods_index,
	Bonobo_Control_focus__imethods_index,
	Bonobo_Control_unImplemented__imethods_index,
	Bonobo_Control_unImplemented2__imethods_index,
	Bonobo_Control_unImplemented3__imethods_index
} Bonobo_Control__imethods_index;
#endif /* __Bonobo_Control__imethods_index */

#ifndef __Bonobo_PropertyControl__imethods_index
#define __Bonobo_PropertyControl__imethods_index
typedef enum {
	Bonobo_PropertyControl__get_pageCount__imethods_index,
	Bonobo_PropertyControl_getControl__imethods_index,
	Bonobo_PropertyControl_notifyAction__imethods_index,
	Bonobo_PropertyControl_unImplemented__imethods_index,
	Bonobo_PropertyControl_unImplemented2__imethods_index
} Bonobo_PropertyControl__imethods_index;
#endif /* __Bonobo_PropertyControl__imethods_index */

#ifndef __Bonobo_ZoomableFrame__imethods_index
#define __Bonobo_ZoomableFrame__imethods_index
typedef enum {
	Bonobo_ZoomableFrame_onLevelChanged__imethods_index,
	Bonobo_ZoomableFrame_onParametersChanged__imethods_index,
	Bonobo_ZoomableFrame_unImplemented1__imethods_index,
	Bonobo_ZoomableFrame_unImplemented2__imethods_index,
	Bonobo_ZoomableFrame_unImplemented3__imethods_index,
	Bonobo_ZoomableFrame_unImplemented4__imethods_index
} Bonobo_ZoomableFrame__imethods_index;
#endif /* __Bonobo_ZoomableFrame__imethods_index */

#ifndef __Bonobo_Zoomable__imethods_index
#define __Bonobo_Zoomable__imethods_index
typedef enum {
	Bonobo_Zoomable__get_level__imethods_index,
	Bonobo_Zoomable__get_minLevel__imethods_index,
	Bonobo_Zoomable__get_maxLevel__imethods_index,
	Bonobo_Zoomable__get_hasMinLevel__imethods_index,
	Bonobo_Zoomable__get_hasMaxLevel__imethods_index,
	Bonobo_Zoomable__get_isContinuous__imethods_index,
	Bonobo_Zoomable__get_preferredLevels__imethods_index,
	Bonobo_Zoomable__get_preferredLevelNames__imethods_index,
	Bonobo_Zoomable_zoomIn__imethods_index,
	Bonobo_Zoomable_zoomOut__imethods_index,
	Bonobo_Zoomable_zoomFit__imethods_index,
	Bonobo_Zoomable_zoomDefault__imethods_index,
	Bonobo_Zoomable_setLevel__imethods_index,
	Bonobo_Zoomable_setFrame__imethods_index,
	Bonobo_Zoomable_unImplemented1__imethods_index,
	Bonobo_Zoomable_unImplemented2__imethods_index,
	Bonobo_Zoomable_unImplemented3__imethods_index,
	Bonobo_Zoomable_unImplemented4__imethods_index
} Bonobo_Zoomable__imethods_index;
#endif /* __Bonobo_Zoomable__imethods_index */

#ifndef __Bonobo_ItemContainer__imethods_index
#define __Bonobo_ItemContainer__imethods_index
typedef enum {
	Bonobo_ItemContainer_enumObjects__imethods_index,
	Bonobo_ItemContainer_getObjectByName__imethods_index,
	Bonobo_ItemContainer_unImplemented1__imethods_index,
	Bonobo_ItemContainer_unImplemented2__imethods_index,
	Bonobo_ItemContainer_unImplemented3__imethods_index,
	Bonobo_ItemContainer_unImplemented4__imethods_index
} Bonobo_ItemContainer__imethods_index;
#endif /* __Bonobo_ItemContainer__imethods_index */

#ifndef __Bonobo_Canvas_Component__imethods_index
#define __Bonobo_Canvas_Component__imethods_index
typedef enum {
	Bonobo_Canvas_Component_update__imethods_index,
	Bonobo_Canvas_Component_realize__imethods_index,
	Bonobo_Canvas_Component_unrealize__imethods_index,
	Bonobo_Canvas_Component_map__imethods_index,
	Bonobo_Canvas_Component_unmap__imethods_index,
	Bonobo_Canvas_Component_draw__imethods_index,
	Bonobo_Canvas_Component_render__imethods_index,
	Bonobo_Canvas_Component_contains__imethods_index,
	Bonobo_Canvas_Component_bounds__imethods_index,
	Bonobo_Canvas_Component_event__imethods_index,
	Bonobo_Canvas_Component_setCanvasSize__imethods_index,
	Bonobo_Canvas_Component_setBounds__imethods_index,
	Bonobo_Canvas_Component_unImplemented1__imethods_index,
	Bonobo_Canvas_Component_unImplemented2__imethods_index,
	Bonobo_Canvas_Component_unImplemented3__imethods_index,
	Bonobo_Canvas_Component_unImplemented4__imethods_index,
	Bonobo_Canvas_Component_unImplemented5__imethods_index,
	Bonobo_Canvas_Component_unImplemented6__imethods_index,
	Bonobo_Canvas_Component_unImplemented7__imethods_index,
	Bonobo_Canvas_Component_unImplemented8__imethods_index
} Bonobo_Canvas_Component__imethods_index;
#endif /* __Bonobo_Canvas_Component__imethods_index */

#ifndef __Bonobo_Canvas_ComponentProxy__imethods_index
#define __Bonobo_Canvas_ComponentProxy__imethods_index
typedef enum {
	Bonobo_Canvas_ComponentProxy_requestUpdate__imethods_index,
	Bonobo_Canvas_ComponentProxy_grabFocus__imethods_index,
	Bonobo_Canvas_ComponentProxy_ungrabFocus__imethods_index,
	Bonobo_Canvas_ComponentProxy_getUIContainer__imethods_index,
	Bonobo_Canvas_ComponentProxy_unImplemented1__imethods_index,
	Bonobo_Canvas_ComponentProxy_unImplemented2__imethods_index,
	Bonobo_Canvas_ComponentProxy_unImplemented3__imethods_index,
	Bonobo_Canvas_ComponentProxy_unImplemented4__imethods_index,
	Bonobo_Canvas_ComponentProxy_unImplemented5__imethods_index,
	Bonobo_Canvas_ComponentProxy_unImplemented6__imethods_index,
	Bonobo_Canvas_ComponentProxy_unImplemented7__imethods_index,
	Bonobo_Canvas_ComponentProxy_unImplemented8__imethods_index
} Bonobo_Canvas_ComponentProxy__imethods_index;
#endif /* __Bonobo_Canvas_ComponentProxy__imethods_index */

#ifndef __Bonobo_ControlFactory__imethods_index
#define __Bonobo_ControlFactory__imethods_index
typedef enum {
	Bonobo_ControlFactory_createControl__imethods_index,
	Bonobo_ControlFactory_unImplemented1__imethods_index,
	Bonobo_ControlFactory_unImplemented2__imethods_index
} Bonobo_ControlFactory__imethods_index;
#endif /* __Bonobo_ControlFactory__imethods_index */

#ifndef __Bonobo_CanvasComponentFactory__imethods_index
#define __Bonobo_CanvasComponentFactory__imethods_index
typedef enum {
	Bonobo_CanvasComponentFactory_createCanvasComponent__imethods_index,
	Bonobo_CanvasComponentFactory_unImplemented1__imethods_index,
	Bonobo_CanvasComponentFactory_unImplemented2__imethods_index
} Bonobo_CanvasComponentFactory__imethods_index;
#endif /* __Bonobo_CanvasComponentFactory__imethods_index */

#ifndef __Bonobo_Embeddable__imethods_index
#define __Bonobo_Embeddable__imethods_index
typedef enum {
	Bonobo_Embeddable_unImplemented1__imethods_index,
	Bonobo_Embeddable_unImplemented2__imethods_index,
	Bonobo_Embeddable_unImplemented3__imethods_index,
	Bonobo_Embeddable_unImplemented4__imethods_index,
	Bonobo_Embeddable_unImplemented5__imethods_index,
	Bonobo_Embeddable_unImplemented6__imethods_index,
	Bonobo_Embeddable_unImplemented7__imethods_index,
	Bonobo_Embeddable_unImplemented8__imethods_index
} Bonobo_Embeddable__imethods_index;
#endif /* __Bonobo_Embeddable__imethods_index */

#ifndef __Bonobo_Print__imethods_index
#define __Bonobo_Print__imethods_index
typedef enum {
	Bonobo_Print_render__imethods_index,
	Bonobo_Print_unImplemented1__imethods_index,
	Bonobo_Print_unImplemented2__imethods_index,
	Bonobo_Print_unImplemented3__imethods_index,
	Bonobo_Print_unImplemented4__imethods_index
} Bonobo_Print__imethods_index;
#endif /* __Bonobo_Print__imethods_index */

#ifndef __Bonobo_Clipboard__imethods_index
#define __Bonobo_Clipboard__imethods_index
typedef enum {
	Bonobo_Clipboard_setClipboard__imethods_index,
	Bonobo_Clipboard_paste__imethods_index,
	Bonobo_Clipboard_link__imethods_index,
	Bonobo_Clipboard_unImplemented1__imethods_index,
	Bonobo_Clipboard_unImplemented2__imethods_index,
	Bonobo_Clipboard_unImplemented3__imethods_index,
	Bonobo_Clipboard_unImplemented4__imethods_index
} Bonobo_Clipboard__imethods_index;
#endif /* __Bonobo_Clipboard__imethods_index */

#ifndef __Bonobo_ClipboardStore__imethods_index
#define __Bonobo_ClipboardStore__imethods_index
typedef enum {
	Bonobo_ClipboardStore_fetchStream__imethods_index,
	Bonobo_ClipboardStore_fetchStorage__imethods_index,
	Bonobo_ClipboardStore_unImplemented1__imethods_index,
	Bonobo_ClipboardStore_unImplemented2__imethods_index,
	Bonobo_ClipboardStore_unImplemented3__imethods_index,
	Bonobo_ClipboardStore_unImplemented4__imethods_index
} Bonobo_ClipboardStore__imethods_index;
#endif /* __Bonobo_ClipboardStore__imethods_index */

#ifndef __Bonobo_Application__imethods_index
#define __Bonobo_Application__imethods_index
typedef enum {
	Bonobo_Application_message__imethods_index,
	Bonobo_Application_newInstance__imethods_index,
	Bonobo_Application_listMessages__imethods_index,
	Bonobo_Application_getName__imethods_index,
	Bonobo_Application_unimplemented1__imethods_index,
	Bonobo_Application_unimplemented2__imethods_index,
	Bonobo_Application_unimplemented3__imethods_index,
	Bonobo_Application_unimplemented4__imethods_index,
	Bonobo_Application_unimplemented5__imethods_index,
	Bonobo_Application_unimplemented6__imethods_index,
	Bonobo_Application_unimplemented7__imethods_index,
	Bonobo_Application_unimplemented8__imethods_index
} Bonobo_Application__imethods_index;
#endif /* __Bonobo_Application__imethods_index */

#ifndef __ORBIT_IMETHODS_INDEX
#define __ORBIT_IMETHODS_INDEX
#define ORBIT_IMETHODS_INDEX(m) (m ## __imethods_index)
#endif /* __ORBIT_IMETHODS_INDEX */

#ifdef __cplusplus
}
#endif /* __cplusplus */

#ifndef EXCLUDE_ORBIT_H
#include <orbit/orbit.h>

#endif /* EXCLUDE_ORBIT_H */
#endif
#undef ORBIT_IDL_SERIAL
