/* Generated by GOB (v2.0.15)   (do not edit directly) */

#include <glib.h>
#include <glib-object.h>
#ifndef __GNOME_PILOT_CONDUIT_CONFIG_H__
#define __GNOME_PILOT_CONDUIT_CONFIG_H__

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */



#include <glib.h>
#include <gtk/gtkobject.h>
#include <gpilotd/gnome-pilot-conduit.h>
#include <libgpilotdCM/gnome-pilot-conduit-management.h>
#include <gmodule.h>


/*
 * Type checking and casting macros
 */
#define GNOME_TYPE_PILOT_CONDUIT_CONFIG	(gnome_pilot_conduit_config_get_type())
#define GNOME_PILOT_CONDUIT_CONFIG(obj)	G_TYPE_CHECK_INSTANCE_CAST((obj), gnome_pilot_conduit_config_get_type(), GnomePilotConduitConfig)
#define GNOME_PILOT_CONDUIT_CONFIG_CONST(obj)	G_TYPE_CHECK_INSTANCE_CAST((obj), gnome_pilot_conduit_config_get_type(), GnomePilotConduitConfig const)
#define GNOME_PILOT_CONDUIT_CONFIG_CLASS(klass)	G_TYPE_CHECK_CLASS_CAST((klass), gnome_pilot_conduit_config_get_type(), GnomePilotConduitConfigClass)
#define GNOME_IS_PILOT_CONDUIT_CONFIG(obj)	G_TYPE_CHECK_INSTANCE_TYPE((obj), gnome_pilot_conduit_config_get_type ())

#define GNOME_PILOT_CONDUIT_CONFIG_GET_CLASS(obj)	G_TYPE_INSTANCE_GET_CLASS((obj), gnome_pilot_conduit_config_get_type(), GnomePilotConduitConfigClass)

/* Private structure type */
typedef struct _GnomePilotConduitConfigPrivate GnomePilotConduitConfigPrivate;

/*
 * Main object structure
 */
#ifndef __TYPEDEF_GNOME_PILOT_CONDUIT_CONFIG__
#define __TYPEDEF_GNOME_PILOT_CONDUIT_CONFIG__
typedef struct _GnomePilotConduitConfig GnomePilotConduitConfig;
#endif
struct _GnomePilotConduitConfig {
	GtkObject __parent__;
	/*< public >*/
	GnomePilotConduitSyncType sync_type;
	GnomePilotConduitSyncType first_sync_type;
	gboolean first_slow;
	/*< private >*/
	GnomePilotConduitConfigPrivate *_priv;
};

/*
 * Class definition
 */
typedef struct _GnomePilotConduitConfigClass GnomePilotConduitConfigClass;
struct _GnomePilotConduitConfigClass {
	GtkObjectClass __parent__;
};


/*
 * Public methods
 */
GType	gnome_pilot_conduit_config_get_type	(void);
const gchar * 	gnome_pilot_conduit_config_sync_type_int_to_str	(GnomePilotConduitSyncType e);
gint 	gnome_pilot_conduit_config_sync_type_str_to_int	(gchar * s);
GnomePilotConduitConfig * 	gnome_pilot_conduit_config_new	(GnomePilotConduitManagement * gpcm,
					guint32 pilot_id);
void 	gnome_pilot_conduit_config_destroy	(GnomePilotConduitConfig * self);
int 	gnome_pilot_conduit_config_load_config	(GnomePilotConduitConfig * self);
int 	gnome_pilot_conduit_config_save_config	(GnomePilotConduitConfig * self);
gboolean 	gnome_pilot_conduit_config_is_enabled	(GnomePilotConduitConfig * self,
					GnomePilotConduitSyncType * sync_type);
void 	gnome_pilot_conduit_config_enable	(GnomePilotConduitConfig * self,
					GnomePilotConduitSyncType sync_type);
void 	gnome_pilot_conduit_config_enable_with_first_sync	(GnomePilotConduitConfig * self,
					GnomePilotConduitSyncType sync_type,
					GnomePilotConduitSyncType first_sync_type,
					gboolean slow);
void 	gnome_pilot_conduit_config_remove_first_sync	(GnomePilotConduitConfig * self);
void 	gnome_pilot_conduit_config_disable	(GnomePilotConduitConfig * self);

#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif
